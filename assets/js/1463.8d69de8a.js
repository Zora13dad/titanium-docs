(window.webpackJsonp=window.webpackJsonp||[]).push([[1463],{1295:function(t,e,o){"use strict";o.r(e);var i=o(21),d=Object(i.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"new-api-notice-sdk-5-x"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#new-api-notice-sdk-5-x"}},[t._v("#")]),t._v(" New API Notice SDK 5.x")]),t._v(" "),o("p",[t._v("List of all new API notices for SDK 5.x.")]),t._v(" "),o("h2",{attrs:{id:"sdk-5-x"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sdk-5-x"}},[t._v("#")]),t._v(" SDK 5.x")]),t._v(" "),o("h3",{attrs:{id:"_5-5-0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-0"}},[t._v("#")]),t._v(" 5.5.0")]),t._v(" "),o("p",[t._v("The following APIs are new or have expanded platform support in Release 5.5.0 as of September 13th, 2016.")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("API")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Notes")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("Titanium.App.iOS.SearchQuery")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A search query object manages the criteria to apply when searching app content that you have previously indexed by using the Core Spotlight APIs. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The fully formatted address of the item (obtained from MapKit). (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getFullyFormattedAddress")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getPostalCode")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.postalCode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getSubThoroughfare")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getThoroughfare")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.postalCode")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The postal code for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setFullyFormattedAddress")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setPostalCode")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.postalCode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setSubThoroughfare")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setThoroughfare")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The sub-location (e.g., street number) for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The location (e.g., street name) for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.createSearchQuery")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.App.iOS.SearchQuery. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.hasAudioPermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Returns "),o("code",[t._v("true")]),t._v(" if the app has audio permissions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.CLIPBOARD_OPTION_EXPIRATION_DATE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Specifies the time and date that you want the system to remove the clipboard items from the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.CLIPBOARD_OPTION_LOCAL_ONLY")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Specifies that the clipboard items should not be available to other devices through Handoff. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Clipboard.getItems")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the items that have been specified earlier using Titanium.UI.Clipboard.setItems. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Clipboard.hasColors")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Indicates whether any colors are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Clipboard.hasImages")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Indicates whether any images are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Clipboard.hasURLs")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Indicates whether any URLs are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Clipboard.setItems")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Adds an array of items to a clipboard, and sets privacy options for all included items. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getRefreshControl")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.refreshControl property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.refreshControl")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("View positioned above the first row that is only revealed when the user drags the scroll view contents down. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setRefreshControl")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.refreshControl property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_PROMINENT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_REGULAR")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.getHasContentPending")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.WatchSession.hasContentPending property. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.getRemainingComplicationUserInfoTransfers")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.WatchSession.remainingComplicationUserInfoTransfers property. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.hasContentPending")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Returns "),o("code",[t._v("true")]),t._v(" if there is more content for the session to deliver. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.remainingComplicationUserInfoTransfers")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The number of calls remaining to "),o("code",[t._v("transferCurrentComplication")]),t._v(" before the system starts transferring the complicationUserInfo as regular userInfos. (New API, supported on iPhone.)")])])])]),t._v(" "),o("h3",{attrs:{id:"_5-4-0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-0"}},[t._v("#")]),t._v(" 5.4.0")]),t._v(" "),o("p",[t._v("The following APIs are new or have expanded platform support in Release 5.4.0 as of August 10th, 2016.")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("API")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Notes")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("Titanium.Android.Notification.getStyle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.Android.Notification.style property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Android.Notification.setStyle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.Android.Notification.style property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Android.Notification.style")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Style object that can apply a rich notification style. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Android.hasPermission")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Returns "),o("code",[t._v("true")]),t._v(" if the app has permission access. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Android.requestPermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Request for permission access. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Database.DB.file")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("A "),o("code",[t._v("File")]),t._v(" object representing the file where this database is stored. Must only be used for setting file properties. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Database.DB.getFile")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.Database.DB.file property. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Filesystem.getAsset")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Returns a "),o("code",[t._v("Blob")]),t._v(" object representing the asset catalog image identified by the path arguments. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Filesystem.hasStoragePermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Returns "),o("code",[t._v("true")]),t._v(" if the app has storage permissions. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Filesystem.requestStoragePermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Requests for storage permissions (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.AudioPlayer.getAudioSessionId")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Returns the audio session id. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.startVideoCapture")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Starts video capture using the camera specified. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.stopVideoCapture")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Stops video capture using the camera specified. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.getHintText")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.hintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.getLoginHintText")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.loginHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.getPasswordHintText")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.passwordHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.hintText")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Hint text of the text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.loginHintText")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Hint text of the login text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.passwordHintText")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Hint text of the password text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.setHintText")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.hintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.setLoginHintText")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.loginHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.setPasswordHintText")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.passwordHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_CLIP")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Raw bit controlling whether the right/bottom edge is clipped to its container, based on the gravity direction being applied. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_PULL_AFTER")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Raw bit controlling how the right/bottom edge is placed. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_PULL_BEFORE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Raw bit controlling how the left/top edge is placed. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_SPECIFIED")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Raw bit indicating the gravity for an axis has been specified. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_X_SHIFT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Bits defining the horizontal axis. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_Y_SHIFT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Bits defining the vertical axis. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_BOTTOM")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Push object to the bottom of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_CENTER")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_CENTER_HORIZONTAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Place object in the horizontal center of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_CENTER_VERTICAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Place object in the vertical center of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_CLIP_HORIZONTAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Flag to clip the edges of the object to its container along the horizontal axis. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_CLIP_VERTICAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Flag to clip the edges of the object to its container along the vertical axis. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_DISPLAY_CLIP_HORIZONTAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Special constant to enable clipping to an overall display along the horizontal dimension. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_DISPLAY_CLIP_VERTICAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Special constant to enable clipping to an overall display along the vertical dimension. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_END")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Push object to x-axis position at the end of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_FILL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Grow the horizontal and vertical size of the object if needed so it completely fills its container. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_FILL_HORIZONTAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Grow the horizontal size of the object if needed so it completely fills its container. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_FILL_VERTICAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Grow the vertical size of the object if needed so it completely fills its container. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_HORIZONTAL_GRAVITY_MASK")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Binary mask to get the absolute horizontal gravity of a gravity. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_LEFT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Push object to the left of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_NO_GRAVITY")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Constant indicating that no gravity has been set (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_RELATIVE_HORIZONTAL_GRAVITY_MASK")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Binary mask for the horizontal gravity and script specific direction bit. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_RELATIVE_LAYOUT_DIRECTION")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Raw bit controlling whether the layout direction is relative or not (GRAVITY_START/GRAVITY_END instead of absolute GRAVITY_LEFT/GRAVITY_RIGHT). (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_RIGHT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Push object to the right of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_START")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Push object to x-axis position at the start of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_TOP")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Push object to the top of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.GRAVITY_VERTICAL_GRAVITY_MASK")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Binary mask to get the vertical gravity of a gravity. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Button.getTintColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Button.tintColor property. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Button.setTintColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Button.tintColor property. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Button.tintColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Button tint color. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ImageView.getTintColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ImageView.tintColor property. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ImageView.setTintColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ImageView.tintColor property. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ImageView.tintColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The view's tintColor. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Label.getLineSpacing")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Label.lineSpacing property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Label.lineSpacing")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Line spacing of the text, as a dictionary with the properties "),o("code",[t._v("add")]),t._v(" and "),o("code",[t._v("multiply")]),t._v(". (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Label.setLineSpacing")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Label.lineSpacing property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.allowsSelectionDuringEditing")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether this list View rows can be selected while editing the table. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.disableBounce")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether the scroll-bounce of the list view should be disabled. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.getAllowsSelectionDuringEditing")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ListView.allowsSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.getDisableBounce")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ListView.disableBounce property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.getListSeparatorInsets")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ListView.listSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.insert")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when a list row is inserted by the user. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.listSeparatorInsets")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The insets for the list view header and footer. This property is applicable on iOS 7 and greater. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.scrolling")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fires when the list view is scrolling. Calling the "),o("code",[t._v("scrollTo")]),t._v(" methods will not fire this event (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.setAllowsSelectionDuringEditing")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ListView.allowsSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.setDisableBounce")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ListView.disableBounce property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.setListSeparatorInsets")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ListView.listSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Notification.getGravity")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Notification.gravity property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Notification.gravity")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines the location at which the notification should appear on the screen. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Notification.setGravity")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Notification.gravity property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.getNativeSpinner")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Picker.nativeSpinner property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.nativeSpinner")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Creates a native Android control for creating a Time Spinner with Type "),o("code",[t._v("Ti.UI.PICKER_TYPE_TIME")]),t._v('. This is invoked rather than the default native "dropdown" style. (New API, supported on Android.)')])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.setNativeSpinner")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Picker.nativeSpinner property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.PickerRow.color")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Color of the item text, as a color name or hex triplet. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.PickerRow.getColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.PickerRow.color property. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.PickerRow.setColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.PickerRow.color property. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollableView.currentPageIndicatorColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Color for the current page of the paging control, as a color name or hex triplet. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollableView.getCurrentPageIndicatorColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollableView.currentPageIndicatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollableView.getPageIndicatorColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollableView.pageIndicatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollableView.insertViewsAt")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Inserts views at the specified position in the views array. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollableView.pageIndicatorColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Color of the paging control, as a color name or hex triplet. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollableView.setCurrentPageIndicatorColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollableView.currentPageIndicatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollableView.setPageIndicatorColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollableView.pageIndicatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.cancelButtonTitle")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The title of the cancel button when the search bar field is focused. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.getCancelButtonTitle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.SearchBar.cancelButtonTitle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.getStyle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.SearchBar.style property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.setCancelButtonTitle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.SearchBar.cancelButtonTitle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.setStyle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.SearchBar.style property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.style")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines the style of the search bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.getHintTextColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.TextField.hintTextColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.hintTextColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Hint text color to display when the field is empty. (Added support for iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.setHintTextColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.TextField.hintTextColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.WebView.allowsLinkPreview")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("A Boolean value that determines whether pressing on a link displays a preview of the destination for the link. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.WebView.blacklistedURLs")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("An array of url strings to blacklist. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.WebView.getAllowsLinkPreview")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.WebView.allowsLinkPreview property. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.WebView.getBlacklistedURLs")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.WebView.blacklistedURLs property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.WebView.onStopBlacklistedUrl")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when a blacklisted Url is stopped (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.WebView.setAllowsLinkPreview")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.WebView.allowsLinkPreview property. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.WebView.setBlacklistedURLs")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.WebView.blacklistedURLs property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Window.hideToolbar")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Makes the bottom toolbar invisible. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Window.showToolbar")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Makes the bottom toolbar visible. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.AlertDialogStyle")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the style that can be used for the "),o("code",[t._v("style")]),t._v(" property of Titanium.UI.AlertDialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.AnimationStyle")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the animation styles used for view transitions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_DARK")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_EXTRA_LIGHT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_LIGHT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.BlurView")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A Titanium.UI.iOS.BlurView object gives you an easy way implement some complex visual effects. The blur effect is applied to every view the blur view is added to by default. You can also place the blur view above other views and all visible views layered under the blur view are blurred as well."),o("br"),o("br"),t._v("For more information on BlurView, please refer to the official Apple documentation. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.ListViewCellSelectionStyle")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the style that can be used for the "),o("code",[t._v("selectionStyle")]),t._v(" property of a ListItem, which is set in the "),o("code",[t._v("properties")]),t._v(" dictionary of either the ListDataItem or ItemTemplate. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.ListViewScrollPosition")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the position value that can be used for the "),o("code",[t._v("position")]),t._v(" property of ListViewAnimationProperties when invoking the ListView's "),o("code",[t._v("scrollToItem")]),t._v(", "),o("code",[t._v("appendSection")]),t._v(","),o("code",[t._v("deleteSectionAt")]),t._v(", "),o("code",[t._v("insertSectionAt")]),t._v(" and "),o("code",[t._v("replaceSectionAt")]),t._v(" methods. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SEARCH_BAR_STYLE_MINIMAL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Titanium.UI.Searchbar.style to change the search bar style. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SEARCH_BAR_STYLE_PROMINENT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Titanium.UI.Searchbar.style to change the search bar style. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.ScrollIndicatorStyle")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the styles available for scrollbars used with Titanium.UI.ScrollView.scrollIndicatorStyle and Titanium.UI.TableView.scrollIndicatorStyle properties. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.StatusBar")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the status bar style. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.Stepper")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A widget used to increment and decrement a value (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SystemButton")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for creating standard iOS system buttons. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SystemButtonStyle")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the system button styles that can be used for the button "),o("code",[t._v("style")]),t._v(" property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.TableViewCellSelectionStyle")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the style that can be used for the "),o("code",[t._v("selectionStyle")]),t._v(" property of Titanium.UI.TableViewRow. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.TableViewScrollPosition")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the position value that can be used for the "),o("code",[t._v("position")]),t._v(" property of Titanium.UI.TableView when invoking "),o("code",[t._v("scrollToIndex")]),t._v(". (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.appBadge")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Value of the badge for the application's springboard icon. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.appSupportsShakeToEdit")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether the shake to edit system-wide capability is enabled. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.createBlurView")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.BlurView. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.createStepper")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.Stepper. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.createSystemButton")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.SystemButton. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.getAppBadge")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.iOS.appBadge property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.getAppSupportsShakeToEdit")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.iOS.appSupportsShakeToEdit property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.setAppBadge")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.iOS.appBadge property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.setAppSupportsShakeToEdit")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.iOS.appSupportsShakeToEdit property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.ACTIVATION_STATE_ACTIVATED")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The watch is currently activated. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.ACTIVATION_STATE_INACTIVE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The watch is currently inactive. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.ACTIVATION_STATE_NOT_ACTIVATED")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The watch is currently not activated. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.activationCompleted")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Called when the session has completed activation. If session state is Titanium.WatchSession.ACTIVATION_STATE_NOT_ACTIVATED there will be an error with more details. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.activationState")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Returns the current activation state of the watch. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.deactivate")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Called when all events for the previously selected watch has occurred. The session can be re-activated for the now selected watch using activateSession. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.getActivationState")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.WatchSession.activationState property. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.getIsActivated")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.WatchSession.isActivated property. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.inactive")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Called when the session can no longer be used to modify or add any new transfers and, all interactive messages will be cancelled, but events for background transfers can still fire. This will happen when the selected watch is being changed. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession.isActivated")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Returns "),o("code",[t._v("true")]),t._v(" if the watch is currently activated. (New API, supported on iPhone.)")])])])]),t._v(" "),o("h3",{attrs:{id:"_5-2-0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-0"}},[t._v("#")]),t._v(" 5.2.0")]),t._v(" "),o("p",[t._v("The following APIs are new or have expanded platform support in Release 5.2.0 as of February 22nd, 2016.")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("API")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Notes")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("Titanium.Calendar.calendarAuthorization")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Returns an authorization constant indicating if the application has access to the events in the EventKit. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Calendar.getCalendarAuthorization")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.Calendar.calendarAuthorization property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.CAMERA_AUTHORIZATION_UNKNOWN")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Constant specifying that app is not yet authorized to use camera. This is available on iOS7 and later. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.MEDIA_TYPE_LIVEPHOTO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Media type constant for live photo media. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.cameraAuthorization")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Returns the authorization status for the camera. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.getCameraAuthorization")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.Media.cameraAuthorization property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.getKeyboardAppearance")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.keyboardAppearance property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.keyboardAppearance")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Keyboard appearance to be displayed when the text field inside the dialog is focused. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.setKeyboardAppearance")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.keyboardAppearance property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_CHANGE_BOUNDS")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Captures layout bounds of target views before and after the scene change and animates those changes during the transition. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_CHANGE_CLIP_BOUNDS")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Captures the clip bounds before and after the scene change and animates those changes during the transition. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_CHANGE_IMAGE_TRANSFORM")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Captures an ImageView's matrix before and after the scene change and animates it during the transition. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_CHANGE_TRANSFORM")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Captures scale and rotation for Views before and after the scene change and animates those changes during the transition. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_EXPLODE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Moves views in or out from the edges of the scene. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_FADE_IN")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Fades in the views. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_FADE_OUT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Fades out the views. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_NONE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Resets transition to platform default. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_SLIDE_BOTTOM")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Moves views to bottom. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_SLIDE_LEFT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Moves views to left. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_SLIDE_RIGHT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Moves views to right. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.TRANSITION_SLIDE_TOP")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Moves views to top. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_APPEARANCE_DARK")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use the platform-specific dark keyboard appearance. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_APPEARANCE_LIGHT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use the platform-specific light keyboard appearance. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_ASCII")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use an ASCII keyboard, with the standard keyboard layout. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_DECIMAL_PAD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard with decimal numbers only, with the pad keyboard layout. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_DEFAULT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use the default keyboard, depending on the platform. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_EMAIL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard suitable for composing email, with the standard keyboard layout. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_NAMEPHONE_PAD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard suitable for entering names and phone numbers, with the pad keyboard layout. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard with numbers and punctuation only, with the standard keyboard layout. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_NUMBER_PAD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard with a number pad only, with the pad keyboard layout. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_PHONE_PAD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard with a phone-style number pad, with the pad keyboard layout. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_TWITTER")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard optimized for twitter text entry, with easy access to the @ and (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_URL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard optimized for entering URLs, with the standard keyboard layout. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.KEYBOARD_TYPE_WEBSEARCH")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use a keyboard optimized for web search terms and URL entry. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListItem.canInsert")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Specifies if the item can be inserted by a user initiated action. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.dragend")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the user stops dragging the list view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.dragstart")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the user starts dragging the list view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.backgroundColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Background color of the picker, as a color name or hex triplet. (Added support for iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.dateTimeColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Sets the text color of date- and time-pickers. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.getBackgroundColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Picker.backgroundColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.getDateTimeColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Picker.dateTimeColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.setBackgroundColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Picker.backgroundColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.setDateTimeColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Picker.dateTimeColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ProgressBar.getTrackTintColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ProgressBar.trackTintColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ProgressBar.setTrackTintColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ProgressBar.trackTintColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ProgressBar.trackTintColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The color shown for the portion of the progress bar that is not filled. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.RETURNKEY_CONTINUE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v('Set the return key text to "Continue". (New API, supported on iPhone and iPad.)')])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.getKeyboardAppearance")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.SearchBar.keyboardAppearance property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.keyboardAppearance")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines the appearance of the keyboard to be displayed the field is focused. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.SearchBar.setKeyboardAppearance")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.SearchBar.keyboardAppearance property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TABLE_VIEW_SEPARATOR_STYLE_NONE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The row divider is hidden. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TABLE_VIEW_SEPARATOR_STYLE_SINGLE_LINE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The row divider is shown as a single line. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Tab.getIconInsets")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Tab.iconInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Tab.iconInsets")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The icon inset or outset for each edge. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Tab.selected")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the tab is selected. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Tab.setIconInsets")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Tab.iconInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Tab.unselected")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the tab is no longer selected. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TableView.getMaxClassname")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.TableView.maxClassname property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TableView.getSeparatorStyle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.TableView.separatorStyle property. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TableView.maxClassname")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Max number of row class names. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TableView.separatorStyle")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Separator style constant. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TableView.setMaxClassname")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.TableView.maxClassname property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TableView.setSeparatorStyle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.TableView.separatorStyle property. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.getInputType")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.TextField.inputType property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.inputType")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Input type to accept in thetext field. Also influences the Keyboard type to display. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.setInputType")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.TextField.inputType property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Window.addSharedElement")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Adds a common UI element to participate in window transition animation. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Window.getSwipeToClose")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Window.swipeToClose property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Window.removeAllSharedElements")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Clears all added shared elements. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Window.setSwipeToClose")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Window.swipeToClose property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Window.swipeToClose")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Boolean value indicating if the user should be able to close a window using a swipe gesture. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.LIVEPHOTO_PLAYBACK_STYLE_FULL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Plays back the entire motion and sound content of the Live Photo, including transition effects at the start and end. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.LIVEPHOTO_PLAYBACK_STYLE_HINT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Plays back only a brief section of the motion content of the Live Photo, without sound. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.LivePhotoView")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A view to display a Live Photo object introduced in iOS 9.1. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.createLivePhotoView")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.LivePhotoView. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iPad.Popover.backgroundColor")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Sets the background color of the popover. (New API, supported on iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iPad.Popover.getBackgroundColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.iPad.Popover.backgroundColor property. (New API, supported on iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iPad.Popover.setBackgroundColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.iPad.Popover.backgroundColor property. (New API, supported on iPad.)")])])])]),t._v(" "),o("h3",{attrs:{id:"_5-1-0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-0"}},[t._v("#")]),t._v(" 5.1.0")]),t._v(" "),o("p",[t._v("The following APIs are new or have expanded platform support in Release 5.1.0 as of November 20th, 2015.")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("API")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Notes")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_BEHAVIOR_DEFAULT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("There will not appear a text input. Use with the behavior property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_BEHAVIOR_TEXTINPUT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("There will appear a text input to answer an action outside the application. Use with the behavior property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UserNotificationAction.behavior")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Selects whether to show a text input outside the application to reply to a notification. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UserNotificationAction.getBehavior")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.App.iOS.UserNotificationAction.behavior property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UserNotificationAction.setBehavior")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.App.iOS.UserNotificationAction.behavior property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.shortcutitemclick")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when a user taps the Application Shortcut. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Buffer")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("Buffer is a mutable, resizable container for raw data. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Calendar.hasCalendarPermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Returns "),o("code",[t._v("true")]),t._v(" if the app has calendar access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Calendar.requestCalendarPermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Requests for calendar access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Contacts")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("The top-level Contacts module, used for accessing and modifying the system contacts address book. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Contacts.Group")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("An object which represents a group in the system contacts address book. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Contacts.Person")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("An object that represents a contact record for a person or organization in the system contacts address book. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Geolocation.hasLocationPermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Returns "),o("code",[t._v("true")]),t._v(" if the app has location access. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Geolocation.requestLocationPermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Requests for location access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.IOStream")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("IOStream is the interface that all stream types implement. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.hasCameraPermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Returns "),o("code",[t._v("true")]),t._v(" if the app has camera access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.requestCameraPermissions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Requests for camera access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ActivityIndicatorStyle")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A set of constants for the styles available for Titanium.UI.ActivityIndicator objects. (Added support for iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.getLoginPlaceholder")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.loginPlaceholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.getPasswordPlaceholder")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.passwordPlaceholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.getPlaceholder")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.placeholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.loginPlaceholder")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Placeholder of the login text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.passwordPlaceholder")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Placeholder of the password text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.placeholder")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Placeholder of the text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.setLoginPlaceholder")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.loginPlaceholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.setPasswordPlaceholder")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.passwordPlaceholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.AlertDialog.setPlaceholder")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.placeholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Android.CardView")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A Card view with a rounded corner background and shadow. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A control used to select one or more fixed values. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.PickerColumn")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A picker column, representing a selectable group of items in a Titanium.UI.Picker. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.PickerRow")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A picker row, representing a selectable item in a Titanium.UI.Picker. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TabGroup.selected")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when a tab is selected. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TabGroup.unselected")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when a tab is unselected. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.getPreviewContext")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.View.previewContext property. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.previewContext")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v('The preview context used in the 3D-Touch feature "Peek and Pop". (New API, supported on iPhone.)')])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.setPreviewContext")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.View.previewContext property. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.createPicker")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.Picker. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.createPickerColumn")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.PickerColumn. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.createPickerRow")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.PickerRow. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.ApplicationShortcuts")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("The Home screen quick action API is for adding shortcuts to your app icon that anticipate and accelerate a user's interaction with your app. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.PREVIEW_ACTION_STYLE_DEFAULT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The normal style for preview actions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.PREVIEW_ACTION_STYLE_DESTRUCTIVE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The destructive style for preview actions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.PREVIEW_ACTION_STYLE_SELECTED")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The selected style for preview actions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.PreviewAction")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v('A PreviewAction provides options to configure action used by the iOS9 3D-Touch feature "Peek and Pop". (New API, supported on iPhone.)')])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.PreviewActionGroup")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v('A PreviewActionGroup provides options to configure a group of actions used by the iOS9 3D-Touch feature "Peek and Pop". (New API, supported on iPhone.)')])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.PreviewContext")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v('A PreviewContext provides options to configure the iOS9 3D-Touch feature "Peek and Pop". (New API, supported on iPhone.)')])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_ADD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_ALARM")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_AUDIO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_BOOKMARK")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CAPTURE_PHOTO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CAPTURE_VIDEO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CLOUD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_COMPOSE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CONFIRMATION")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CONTACT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_DATE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_FAVORITE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_HOME")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_INVITATION")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_LOCATION")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_LOVE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_MAIL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_MARK_LOCATION")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_MESSAGE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_PAUSE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_PLAY")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_PROHIBIT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_SEARCH")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_SHARE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_SHUFFLE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_TASK")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_TASK_COMPLETED")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_TIME")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_UPDATE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.createApplicationShortcuts")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.ApplicationShortcuts. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.createPreviewAction")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.PreviewAction. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.createPreviewActionGroup")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.PreviewActionGroup. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.createPreviewContext")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.PreviewContext. (New API, supported on iPhone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.forceTouchSupported")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v('Determines if the 3D-Touch capability "Force Touch" is supported ('),o("code",[t._v("true")]),t._v(") or not ("),o("code",[t._v("false")]),t._v(") by the device. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.getForceTouchSupported")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.iOS.forceTouchSupported property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.iOS.setForceTouchSupported")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.iOS.forceTouchSupported property. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),o("h3",{attrs:{id:"_5-0-0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-0-0"}},[t._v("#")]),t._v(" 5.0.0")]),t._v(" "),o("p",[t._v("The following APIs are new or have expanded platform support in Release 5.0.0 as of September 16th, 2015.")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("API")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Notes")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("Titanium.Android.Notification.getLargeIcon")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.Android.Notification.largeIcon property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Android.Notification.largeIcon")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Add a large icon to the notification (and the ticker on some devices) specified as an Android resource ID, or a local URL to a density-specific image. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Android.Notification.setLargeIcon")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.Android.Notification.largeIcon property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableIndex")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("The SearchableIndex module is used to add or remove Ti.App.iOS.SearchableItem objects from the device search index. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItem")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("Used to create a unique object containing all of the search information that will appear in the device search index. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("The SearchableItemAttributeSet module defines metadata properties for SearchItem and UserActivity objects. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_APPLE_ICNS")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Mac OS icon images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_APPLE_PROTECTED_MPEG4_AUDIO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for protected MPEG-4 audio (iTunes music store format). (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_AUDIO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for all audio content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_BMP")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Windows bitmap images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_FLAT_RTFD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Rich Text with content embedding, pasteboard format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_GIF")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for GIF images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_HTML")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for HTML. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_ICO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Windows icon images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_IMAGE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for all image types. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_JPEG")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for JPEG images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_JPEG2000")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for JPEG 2000 images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_MOVIE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for all audiovisual content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_MP3")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for MP3 audio. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_MPEG")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for MPEG-1 and MPEG-2 content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_MPEG4")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for MPEG-4 content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_MPEG4_AUDIO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for MPEG-4 audio. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_PDF")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for PDF data. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_PICT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for PICT images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_PLAIN_TEXT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for a plain text type, equivalent to MIME type text/plain. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_PNG")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for PNG images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_QUICKTIME_IMAGE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for QuickTime images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_QUICKTIME_MOVIE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for QuickTime movies. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_RTF")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Rich Text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_RTFD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Rich Text Format Directory, that is, Rich Text with content embedding, on-disk format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_TEXT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for all text types. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_TIFF")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for TIFF images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_TXN_TEXT_AND_MULTIMEDIA_DATA")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for MLTE (Textension) format for mixed text and multimedia data. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_UTF16_EXTERNAL_PLAIN_TEXT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Unicode-16 with byte-order mark (BOM), or if BOM is not present, an external representation byte order (big-endian). (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_UTF16_PLAIN_TEXT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Unicode-16, native byte order, with an optional byte-order mark (BOM). (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_UTF8_PLAIN_TEXT")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for Unicode-8 plain text type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_VIDEO")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for all video content without audio. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_WEB_ARCHIVE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for WebKit webarchive format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UTTYPE_XML")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Uniform type identifier for XML. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.UserActivity")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("The UserActivity module is used to enable device Handoff and to create User Activities. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.continueactivity")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when iOS continueactivity calls "),o("code",[t._v("continueUserActivity")]),t._v(". (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.createSearchableIndex")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.App.iOS.SearchableIndex. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.createSearchableItem")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.App.iOS.SearchableItem. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.createSearchableItemAttributeSet")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.App.iOS.SearchableItemAttributeSet. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.createUserActivity")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Creates and returns an instance of Titanium.App.iOS.UserActivity. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.getSupportedUserActivityTypes")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.App.iOS.supportedUserActivityTypes property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.App.iOS.supportedUserActivityTypes")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Provides an Array of the NSUserActivityTypes keys defined within your Titanium project. (available on iOS 8 and later). (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Contacts.getGroupByIdentifier")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the group with the specified identifier. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Contacts.getPersonByIdentifier")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the person with the specified identifier. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Contacts.Person.identifier")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Identifier of the person. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Geolocation.allowsBackgroundLocationUpdates")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines if the app can do background location updates. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Geolocation.getAllowsBackgroundLocationUpdates")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.Geolocation.allowsBackgroundLocationUpdates property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Geolocation.setAllowsBackgroundLocationUpdates")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.Geolocation.allowsBackgroundLocationUpdates property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.AudioPlayer.change")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the state of the playback changes. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.AudioPlayer.complete")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the audio has finished playing. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.AudioPlayer.error")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when there's an error. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.Sound.change")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the state of the playback changes. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.Sound.complete")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the audio has finished playing. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.Sound.error")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when an error occurs while playing the audio. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.VideoPlayer.complete")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when movie playback ends or a user exits playback. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Media.VideoPlayer.error")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when movie playback encounters an error. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Network.Cookie.getMaxAge")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.Network.Cookie.maxAge property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Network.Cookie.maxAge")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Sets the Max-Age attribute of a Cookie, in delta-seconds. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.Network.Cookie.setMaxAge")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.Network.Cookie.maxAge property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Attribute.type to wrap and truncate the text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_CHAR_WRAPPING")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Attribute.value to wrap words at word boundaries. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_CLIPPING")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Attribute.value to set lines to not draw past the edge of the text container. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_HEAD")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Attribute.value to use ellipsis glyph at the beginning of the line for missing text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_MIDDLE")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Attribute.value to use ellipsis glyph at the middle of the line for missing text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_TAIL")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Attribute.value to use ellipsis glyph at the end of the line for missing text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_WORD_WRAPPING")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Use with Attribute.value to wrap words at word boundaries. (New API, supported on iPhone and iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Clipboard")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("A module used for accessing clipboard data. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.noresults")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the search using either searchView or searchText has no results. (Added support for Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ListView.editaction")]),t._v(" "),o("td",[t._v("event")]),t._v(" "),o("td",[t._v("Fired when the user interacts with one of the custom edit actions.")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.getSelectionOpens")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Picker.selectionOpens property. (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Picker.selectionOpens")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether calling the method "),o("code",[t._v("setSelectedRow")]),t._v(" opens when called (New API, supported on Android.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.canCancelEvents")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether this scroll view can cancel subview touches in order to scroll instead. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.contentOffset")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("X and Y coordinates to which to reposition the top-left point of the scrollable region. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.decelerationRate")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("The deceleration rate of the ScrollView. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.disableBounce")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether scroll bounce of the scrollable region is enabled. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getCanCancelEvents")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.canCancelEvents property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getContentOffset")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.contentOffset property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getDecelerationRate")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.decelerationRate property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getDisableBounce")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.disableBounce property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getHorizontalBounce")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.horizontalBounce property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getMaxZoomScale")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.maxZoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getMinZoomScale")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.minZoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getOverScrollMode")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.overScrollMode property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getScrollIndicatorStyle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.scrollIndicatorStyle property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getScrollType")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.scrollType property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getScrollsToTop")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.scrollsToTop property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getVerticalBounce")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.verticalBounce property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.getZoomScale")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.ScrollView.zoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.horizontalBounce")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether horizontal scroll bounce of the scrollable region is enabled. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.maxZoomScale")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Maximum scaling factor of the scrollable region and its content. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.minZoomScale")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Minimum scaling factor of the scrollable region and its content. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.overScrollMode")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines the behavior when the user overscolls the view. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.scrollIndicatorStyle")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Style of the scrollbar. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.scrollType")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Limits the direction of the scrollable region, overriding the deduced setting. Set to"),o("code",[t._v("horizontal")]),t._v(" or "),o("code",[t._v("vertical")]),t._v(". (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.scrollsToTop")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Controls whether the scroll-to-top gesture is effective. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setCanCancelEvents")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.canCancelEvents property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setContentOffset")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.contentOffset property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setDecelerationRate")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.decelerationRate property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setDisableBounce")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.disableBounce property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setHorizontalBounce")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.horizontalBounce property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setMaxZoomScale")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.maxZoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setMinZoomScale")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.minZoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setOverScrollMode")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.overScrollMode property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setScrollIndicatorStyle")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.scrollIndicatorStyle property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setScrollType")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.scrollType property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setScrollsToTop")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.scrollsToTop property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setVerticalBounce")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.verticalBounce property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.setZoomScale")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.ScrollView.zoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.verticalBounce")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether vertical scroll bounce of the scrollable region is enabled. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.ScrollView.zoomScale")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Scaling factor of the scroll view's content. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.color")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Color to use for switch text, as a color name or hex triplet. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.enabled")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determines whether the switch is enabled. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.getColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Switch.color property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.getEnabled")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Switch.enabled property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.getTitleOff")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Switch.titleOff property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.getTitleOn")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.Switch.titleOn property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.setColor")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Switch.color property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.setEnabled")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Switch.enabled property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.setTitleOff")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Switch.titleOff property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.setTitleOn")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.Switch.titleOn property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.titleOff")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v('Text to display on the switch in its "off" state, when the toggle button style is in use. (Added support for Windows Phone.)')])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.Switch.titleOn")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v('Text to display on the switch in its "on" state, when the toggle button style is in use. (Added support for Windows Phone.)')])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextArea.getShowUndoRedoActions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.TextArea.showUndoRedoActions property. (New API, supported on iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextArea.setShowUndoRedoActions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.TextArea.showUndoRedoActions property. (New API, supported on iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextArea.showUndoRedoActions")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determinates if the undo and redo buttons on the left side of the keyboard should be displayed or not. Only valid on iOS9 and above. (New API, supported on iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.getShowUndoRedoActions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.TextField.showUndoRedoActions property. (New API, supported on iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.setShowUndoRedoActions")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.TextField.showUndoRedoActions property. (New API, supported on iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.TextField.showUndoRedoActions")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Determinates if the undo and redo buttons on the left side of the keyboard should be displayed or not. Only valid on iOS9 and above. (New API, supported on iPad.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.backgroundImage")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Background image for the view, specified as a local file path or URL. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.getBackgroundImage")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.View.backgroundImage property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.getZIndex")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Gets the value of the Titanium.UI.View.zIndex property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.setBackgroundImage")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.View.backgroundImage property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.setZIndex")]),t._v(" "),o("td",[t._v("method")]),t._v(" "),o("td",[t._v("Sets the value of the Titanium.UI.View.zIndex property. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.UI.View.zIndex")]),t._v(" "),o("td",[t._v("property")]),t._v(" "),o("td",[t._v("Z-index stack order position, relative to other sibling views. (Added support for Windows Phone.)")])]),t._v(" "),o("tr",[o("td",[t._v("Titanium.WatchSession")]),t._v(" "),o("td",[t._v("object")]),t._v(" "),o("td",[t._v("Used to enable data and file transfers between a watchOS and iOS application. (New API, supported on iPhone.)")])])])])])}),[],!1,null,null,null);e.default=d.exports}}]);