(window.webpackJsonp=window.webpackJsonp||[]).push([[1590],{1439:function(t,e,d){"use strict";d.r(e);var i=d(21),o=Object(i.a)({},(function(){var t=this,e=t.$createElement,d=t._self._c||e;return d("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[d("h1",{attrs:{id:"new-api-notice-sdk-7-x"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#new-api-notice-sdk-7-x"}},[t._v("#")]),t._v(" New API Notice SDK 7.x")]),t._v(" "),d("p",[t._v("List of all new API notices for SDK 7.x.")]),t._v(" "),d("h2",{attrs:{id:"sdk-7-x"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#sdk-7-x"}},[t._v("#")]),t._v(" SDK 7.x")]),t._v(" "),d("h3",{attrs:{id:"_7-5-0"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-0"}},[t._v("#")]),t._v(" 7.5.0")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Global.console.timeLog")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Log duration taken so far for an operation. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Activity.userinteraction")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Called whenever a key, touch, or trackball event is dispatched to the activity. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.NotificationChannel.getSound")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Android.NotificationChannel.sound property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.NotificationChannel.setSound")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Android.NotificationChannel.sound property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.NotificationChannel.sound")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A URL to the sound to play. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.Android.shortcutitemclick")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Fired when a Titanium.UI.ShortcutItem is clicked. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.shortcutitemclick")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Fired when a Titanium.UI.ShortcutItem is clicked. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.trackUserInteraction")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Indicates whether or not the user interaction shoud be tracked. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.userinteraction")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Called whenever an interaction with the window occurred. To be used together with the Titanium.App.trackUserInteraction property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Locale.change")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Fired when the device locale changes. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_BUFFERING")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Audio data is being buffered from the network. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_INITIALIZED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Audio playback is being initialized. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_PAUSED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Playback is paused. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_PLAYING")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Audio playback is active. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_STARTING")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Audio playback is starting. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_STOPPED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Audio playback is stopped. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_STOPPING")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Audio playback is stopping. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_WAITING_FOR_DATA")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Player is waiting for audio data from the network. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AUDIO_STATE_WAITING_FOR_QUEUE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Player is waiting for audio data to fill the queue. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.allowsExternalPlayback")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v('Indicates whether the player allows switching to "external playback" mode. (New API, supported on iPhone and iPad.)')])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.complete")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Fired when the audio has finished playing. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.externalPlaybackActive")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v('Indicates whether the player is currently playing video in "external playback" mode. (New API, supported on iPhone and iPad.)')])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.getAllowsExternalPlayback")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.allowsExternalPlayback property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.getExternalPlaybackActive")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.externalPlaybackActive property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.getMuted")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.muted property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.getRate")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.rate property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.metadata")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Fired when the timed metadata was encountered most recently within the media as it plays. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.muted")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Indicates whether or not audio output of the player is muted. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.rate")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v('Indicates the desired rate of playback; 0.0 means "paused", 1.0 indicates a desire to play at the natural rate of the current item. In addition, 2.0would mean that the audio plays twice as fast. (New API, supported on iPhone and iPad.)')])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.release")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Stops buffering audio data and releases audio resources. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.restart")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Restarts (stops and stars) audio playback. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.seekToTime")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Moves the playback cursor and invokes the specified block when the seek operation has either been completed or been interrupted. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.setAllowsExternalPlayback")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Media.AudioPlayer.allowsExternalPlayback property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.setMuted")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Media.AudioPlayer.muted property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.AudioPlayer.setRate")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Media.AudioPlayer.rate property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.QUALITY_640x480")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Media type constant for medium-quality video recording. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.QUALITY_HIGH")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Media type constant for high-quality video recording. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.QUALITY_IFRAME_1280x720")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Media type constant for medium-quality video recording. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.QUALITY_LOW")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Media type constant for low-quality video recording. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.getQUALITY_640x480")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.QUALITY_640x480 property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.getQUALITY_IFRAME_1280x720")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.QUALITY_IFRAME_1280x720 property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ATTRIBUTE_PARAGRAPH_STYLE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with Attribute.type to manages the behaviour of string set. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ActivityIndicator.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ActivityIndicator.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.ActivityIndicator.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ActivityIndicator.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.ActivityIndicator.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AlertDialog.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AlertDialog.buttonClickRequired")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Setting this to true requires the end-user to click a dialog button to close the dialog. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AlertDialog.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AlertDialog.getButtonClickRequired")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.buttonClickRequired property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AlertDialog.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AlertDialog.setButtonClickRequired")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.buttonClickRequired property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.FLAG_TRANSLUCENT_NAVIGATION")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Window flag which makes the Android system's navigation bar semi-transparent. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.FLAG_TRANSLUCENT_STATUS")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Window flag which makes the Android system's top status bar semi-transparent. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.ProgressIndicator.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.ProgressIndicator.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Android.ProgressIndicator.anchorPoint property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.ProgressIndicator.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Android.ProgressIndicator.anchorPoint property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Button.attributedString")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specify an attributed string for the label. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Button.getAttributedString")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Button.attributedString property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Button.setAttributedString")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Button.attributedString property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.EmailDialog.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.EmailDialog.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.EmailDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.EmailDialog.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.EmailDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.OptionDialog.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.OptionDialog.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.OptionDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.OptionDialog.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.OptionDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Picker.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Picker.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Picker.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Picker.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Picker.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollableView.clipViews")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Determines whether the previous and next pages are clipped, so that they are not visibleadjacent to the current page. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollableView.getClipViews")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.ScrollableView.clipViews property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollableView.getPadding")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.ScrollableView.padding property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollableView.padding")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The padding applied to the scrollable view. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollableView.setClipViews")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.ScrollableView.clipViews property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollableView.setPadding")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.ScrollableView.padding property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.fieldBackgroundDisabledImage")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Background image of the text field in disabled state, specified as a local file path or URL. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.fieldBackgroundImage")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Background image of the text field, specified as a local file path or URL. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.getFieldBackgroundDisabledImage")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.SearchBar.fieldBackgroundDisabledImage property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.getFieldBackgroundImage")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.SearchBar.fieldBackgroundImage property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.setFieldBackgroundDisabledImage")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.SearchBar.fieldBackgroundDisabledImage property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.setFieldBackgroundImage")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.SearchBar.fieldBackgroundImage property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ShortcutItem")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("An application shortcut. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Tab.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Tab.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Tab.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Tab.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Tab.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TabGroup.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TabGroup.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TabGroup.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TabGroup.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TabGroup.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.getLines")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextArea.lines property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.getMaxLines")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextArea.maxLines property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.lines")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Number of lines tall the text area height will be, if set. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.maxLines")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Maximum line count of text field input. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.setLines")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextArea.lines property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.setMaxLines")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextArea.maxLines property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.getPasswordRules")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextField.passwordRules property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.passwordRules")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Set password rules that should be used for this text field. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.setPasswordRules")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextField.passwordRules property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.anchorPoint")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.getAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.View.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.setAnchorPoint")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.View.anchorPoint property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.getMixedContentMode")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.WebView.mixedContentMode property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.getOnlink")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.WebView.onlink property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.mixedContentMode")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("If "),d("code",[t._v("true")]),t._v(", allows the loading of insecure resources from a secure origin. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.onlink")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Fired before navigating to a link. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.setMixedContentMode")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.WebView.mixedContentMode property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.setOnlink")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.WebView.onlink property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.extendSafeArea")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies whether the screen insets/notches are allowed to overlap the window's content or not. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getExtendSafeArea")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.extendSafeArea property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getHidesBackButton")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.hidesBackButton property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getSafeAreaPadding")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.safeAreaPadding property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.hidesBackButton")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Set this to true to hide the back button of navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.safeAreaPadding")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The padding needed to safely display content without it being overlapped by the screen insets and notches. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setExtendSafeArea")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.extendSafeArea property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setHidesBackButton")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.hidesBackButton property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.createShortcutItem")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Creates and returns an instance of Titanium.UI.ShortcutItem. (New API, supported on Android, iPhone and iPad.)")])])])]),t._v(" "),d("h3",{attrs:{id:"_7-4-0"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-0"}},[t._v("#")]),t._v(" 7.4.0")]),t._v(" "),d("p",[t._v("The following APIs are new or have expanded platform support in Release 7.4.0 as of September 17th, 2018.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_PROVISIONAL")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The application is provisionally authorized to post non-interruptive user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_TYPE_CRITICAL_ALERT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The ability to play sounds for critical alerts.Use with the types property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_TYPE_PROVIDES_APP_NOTIFICATION_SETTINGS")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("An option indicating the system should display a button for in-app notification settings.Use with the types property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_TYPE_PROVISIONAL")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The ability to post non-interrupting notifications provisionally to the Notification Center.Use with the types property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.deleteAllSavedUserActivities")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Deletes all user activities created by your app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.deleteSavedUserActivitiesForPersistentIdentifiers")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Deletes user activities created by your app that have the specified persistent identifiers. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.eligibleForPrediction")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A Boolean value that determines whether Siri can suggest the user activity as a shortcut to the user. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.getEligibleForPrediction")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.App.iOS.UserActivity.eligibleForPrediction property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.getPersistentIdentifier")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.App.iOS.UserActivity.persistentIdentifier property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.persistentIdentifier")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A value used to identify the user activity. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.setEligibleForPrediction")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.App.iOS.UserActivity.eligibleForPrediction property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.setPersistentIdentifier")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.App.iOS.UserActivity.persistentIdentifier property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserActivity.useractivitydeleted")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Fired when the user activity get deleted using the Titanium.App.iOS.UserActivity.deleteAllSavedUserActivities or Titanium.App.iOS.UserActivity.deleteSavedUserActivitiesForPersistentIdentifiers methods. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserNotificationCategory.categorySummaryFormat")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A format string for the summary description used when the system groups the category's notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NEW_PASSWORD")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a new password. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ONE_TIME_CODE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a single-factor SMS login code. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),d("h3",{attrs:{id:"_7-3-1"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-1"}},[t._v("#")]),t._v(" 7.3.1")]),t._v(" "),d("p",[t._v("The following APIs are new or have expanded platform support in Release 7.3.1 as of August 30th, 2018.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Global.console.time")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Start a timer to track duration of an operation. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Global.console.timeEnd")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Stop a timer that was previously started. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.animator")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Animator resources. See R.animator in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.bool")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Boolean resources. See R.bool in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.fraction")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Fraction resources. See R.fraction in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.interpolator")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Interpolator resources. See R.fraction in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.menu")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Menu resources. See R.menu in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.mipmap")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Mipmap resources. See R.mipmap in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.plurals")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Plurals resources. See R.plurals in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.raw")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Raw resources. See R.raw in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.transition")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Transition resources. See R.transition in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.xml")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("XML resources. See R.xml in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Service.foregroundCancel")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v('Puts the service into the "background" state and removes its foreground notification. (New API, supported on Android.)')])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Service.foregroundNotify")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v('Puts the service into the "foreground" state and displays a notification. (New API, supported on Android.)')])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_ALERT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A alert dialog is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_BANNER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A banner is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_NONE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("No banner or alert dialog is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_AUTHORIZED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The application is authorized to post user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_DENIED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The application is not authorized to post user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_NOT_DETERMINED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The user has not yet made a choice regarding whether the application may postuser notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_ALLOW_IN_CARPLAY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Allow CarPlay to display notifications of this type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_CUSTOM_DISMISS_ACTION")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Send dismiss actions to the UNUserNotificationCenter object's delegate for handling. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_SUBTITLE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Show the notification's subtitle, even if the user has disabled notification previews for the app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_TITLE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Show the notification's title, even if the user has disabled notification previews for the app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_NONE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("No options. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_DISABLED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The notification setting is turned off. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_ENABLED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The notification setting is turned on. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The application does not support this notification type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserNotificationCenter")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("The top-level App iOS Notification Center module. It is used to control scheduled notificationsand receive details about the system-wide notification settings. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Filesystem.File.append")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Appends data to the file identified by this file object. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Filesystem.File.copy")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Copies the file identified by this file object to a new path. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Filesystem.File.createdAt")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Returns the creation Date for the file identified by this file object. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Filesystem.File.modifiedAt")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Returns the last modification Date for the file identified by this file object. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Geolocation.getShowBackgroundLocationIndicator")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Geolocation.showBackgroundLocationIndicator property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Geolocation.setShowBackgroundLocationIndicator")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Geolocation.showBackgroundLocationIndicator property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Geolocation.showBackgroundLocationIndicator")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies that an indicator be shown when the app makes use of continuous background location updates. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_CLEAR")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_COLOR")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_COLOR_BURN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_COLOR_DODGE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_COPY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DARKEN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_ATOP")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_IN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_OUT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_OVER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DIFFERENCE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_EXCLUSION")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_HARD_LIGHT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_HUE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_LIGHTEN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_LUMINOSITY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_MULTIPLY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_NORMAL")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_OVERLAY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_PLUS_DARKER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_PLUS_LIGHTER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SATURATION")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SCREEN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SOFT_LIGHT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_ATOP")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_IN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_OUT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_XOR")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.MaskedImage")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("A control that displays an image composited with a background image or color. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getResultsBackgroundColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getResultsSeparatorColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getResultsSeparatorInsets")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getResultsSeparatorStyle")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getScrollable")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.scrollable property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.resultsBackgroundColor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The background color of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.resultsSeparatorColor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Separator line color between rows inside search results, as a color name or hex triplet (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.resultsSeparatorInsets")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The insets for search results separators (applies to all cells & iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.resultsSeparatorStyle")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The separator style of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.scrollable")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("If "),d("code",[t._v("true")]),t._v(", the tableview can be scrolled. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setResultsBackgroundColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setResultsSeparatorColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setResultsSeparatorInsets")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setResultsSeparatorStyle")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setScrollable")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.scrollable property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.getHorizontalMotionEffect")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.View.horizontalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.getVerticalMotionEffect")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.View.verticalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.horizontalMotionEffect")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Adds a horizontal parallax effect to the view (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.setHorizontalMotionEffect")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.View.horizontalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.setVerticalMotionEffect")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.View.verticalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.verticalMotionEffect")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Adds a vertical parallax effect to the view (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.getZoomLevel")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.WebView.zoomLevel property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.setZoomLevel")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.WebView.zoomLevel property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.zoomLevel")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Manage the zoom-level of the current page. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getHomeIndicatorAutoHidden")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.homeIndicatorAutoHidden property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getNavigationWindow")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.navigationWindow property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.homeIndicatorAutoHidden")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Boolean value indicating whether the system is allowed to hide the visual indicator for returning to the Home screen. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.navigationWindow")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The Titanium.UI.iOS.NavigationWindow instance hosting this window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setHomeIndicatorAutoHidden")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.homeIndicatorAutoHidden property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.createMaskedImage")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Creates and returns an instance of Titanium.UI.MaskedImage. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("View presented over its parent window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Presented view covers the screen. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.setMODAL_PRESENTATION_OVER_CURRENT_CONTEXT")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.setMODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN property. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),d("h3",{attrs:{id:"_7-3-0"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-0"}},[t._v("#")]),t._v(" 7.3.0")]),t._v(" "),d("p",[t._v("The following APIs are new or have expanded platform support in Release 7.3.0 as of August 17th, 2018.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Global.console.time")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Start a timer to track duration of an operation. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Global.console.timeEnd")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Stop a timer that was previously started. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.animator")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Animator resources. See R.animator in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.bool")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Boolean resources. See R.bool in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.fraction")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Fraction resources. See R.fraction in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.interpolator")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Interpolator resources. See R.fraction in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.menu")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Menu resources. See R.menu in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.mipmap")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Mipmap resources. See R.mipmap in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.plurals")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Plurals resources. See R.plurals in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.raw")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Raw resources. See R.raw in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.transition")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Transition resources. See R.transition in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.R.xml")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("XML resources. See R.xml in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Service.foregroundCancel")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v('Puts the service into the "background" state and removes its foreground notification. (New API, supported on Android.)')])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Service.foregroundNotify")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v('Puts the service into the "foreground" state and displays a notification. (New API, supported on Android.)')])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_ALERT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A alert dialog is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_BANNER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A banner is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_NONE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("No banner or alert dialog is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_AUTHORIZED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The application is authorized to post user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_DENIED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The application is not authorized to post user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_NOT_DETERMINED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The user has not yet made a choice regarding whether the application may postuser notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_ALLOW_IN_CARPLAY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Allow CarPlay to display notifications of this type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_CUSTOM_DISMISS_ACTION")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Send dismiss actions to the UNUserNotificationCenter object's delegate for handling. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_SUBTITLE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Show the notification's subtitle, even if the user has disabled notification previews for the app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_TITLE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Show the notification's title, even if the user has disabled notification previews for the app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_NONE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("No options. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_DISABLED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The notification setting is turned off. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_ENABLED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The notification setting is turned on. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The application does not support this notification type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.App.iOS.UserNotificationCenter")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("The top-level App iOS Notification Center module. It is used to control scheduled notificationsand receive details about the system-wide notification settings. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Filesystem.File.append")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Appends data to the file identified by this file object. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Filesystem.File.copy")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Copies the file identified by this file object to a new path. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Filesystem.File.createdAt")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Returns the creation Date for the file identified by this file object. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Filesystem.File.modifiedAt")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Returns the last modification Date for the file identified by this file object. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Geolocation.getShowBackgroundLocationIndicator")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Geolocation.showBackgroundLocationIndicator property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Geolocation.setShowBackgroundLocationIndicator")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Geolocation.showBackgroundLocationIndicator property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Geolocation.showBackgroundLocationIndicator")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies that an indicator be shown when the app makes use of continuous background location updates. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_CLEAR")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_COLOR")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_COLOR_BURN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_COLOR_DODGE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_COPY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DARKEN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_ATOP")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_IN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_OUT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_OVER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_DIFFERENCE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_EXCLUSION")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_HARD_LIGHT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_HUE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_LIGHTEN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_LUMINOSITY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_MULTIPLY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_NORMAL")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_OVERLAY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_PLUS_DARKER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_PLUS_LIGHTER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SATURATION")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SCREEN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SOFT_LIGHT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_ATOP")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_IN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_OUT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.BLEND_MODE_XOR")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.MaskedImage")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("A control that displays an image composited with a background image or color. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getResultsBackgroundColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getResultsSeparatorColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getResultsSeparatorInsets")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getResultsSeparatorStyle")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.getScrollable")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TableView.scrollable property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.resultsBackgroundColor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The background color of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.resultsSeparatorColor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Separator line color between rows inside search results, as a color name or hex triplet (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.resultsSeparatorInsets")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The insets for search results separators (applies to all cells & iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.resultsSeparatorStyle")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The separator style of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.scrollable")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("If "),d("code",[t._v("true")]),t._v(", the tableview can be scrolled. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setResultsBackgroundColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setResultsSeparatorColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setResultsSeparatorInsets")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setResultsSeparatorStyle")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TableView.setScrollable")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TableView.scrollable property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.getHorizontalMotionEffect")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.View.horizontalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.getVerticalMotionEffect")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.View.verticalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.horizontalMotionEffect")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Adds a horizontal parallax effect to the view (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.setHorizontalMotionEffect")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.View.horizontalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.setVerticalMotionEffect")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.View.verticalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.View.verticalMotionEffect")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Adds a vertical parallax effect to the view (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.getZoomLevel")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.WebView.zoomLevel property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.setZoomLevel")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.WebView.zoomLevel property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.WebView.zoomLevel")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Manage the zoom-level of the current page. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getHomeIndicatorAutoHidden")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.homeIndicatorAutoHidden property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getNavigationWindow")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.navigationWindow property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.homeIndicatorAutoHidden")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Boolean value indicating whether the system is allowed to hide the visual indicator for returning to the Home screen. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.navigationWindow")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The Titanium.UI.iOS.NavigationWindow instance hosting this window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setHomeIndicatorAutoHidden")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.homeIndicatorAutoHidden property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.createMaskedImage")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Creates and returns an instance of Titanium.UI.MaskedImage. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("View presented over its parent window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Presented view covers the screen. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.setMODAL_PRESENTATION_OVER_CURRENT_CONTEXT")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.setMODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN property. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),d("h3",{attrs:{id:"_7-2-1"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-1"}},[t._v("#")]),t._v(" 7.2.1")]),t._v(" "),d("p",[t._v("The following APIs are new or have expanded platform support in Release 7.2.1 as of August 17th, 2018.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Titanium.Analytics.getOptedOut")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Analytics.optedOut property. (New API, supported on Android, iPhone, iPad and Windows Phone.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Analytics.optedOut")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Allows the user to opt out from Analytics during runtime to comply to GPDR. (New API, supported on Android, iPhone, iPad and Windows Phone.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Analytics.setOptedOut")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Analytics.optedOut property. (New API, supported on Android, iPhone, iPad and Windows Phone.)")])])])]),t._v(" "),d("h3",{attrs:{id:"_7-1-1"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-1"}},[t._v("#")]),t._v(" 7.1.1")]),t._v(" "),d("p",[t._v("The following APIs are new or have expanded platform support in Release 7.1.1 as of May 2nd, 2018.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Titanium.Android.ActionBar.customView")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Sets a view to be used for a custom navigation mode. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.ActionBar.getCustomView")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Android.ActionBar.customView property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.ActionBar.setCustomView")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Android.ActionBar.customView property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.NotificationManager.areNotificationsEnabled")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Returns whether showing notifications is enabled for the application. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.createRecurrenceRule")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Creates an recurrence pattern for a recurring event.All of the properties for the recurrence rule must be set during creation. The recurrence rule properties cannot be modified. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.getRecurrenceRules")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Calendar.Event.recurrenceRules property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.recurrenceRules")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The recurrence rules for the calendar item. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.save")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Saves changes to an event permanently. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.setRecurrenceRules")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Calendar.Event.recurrenceRules property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.RecurrenceRule")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("An object that is used to describe the recurrence pattern for a recurring event. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.getShowsControls")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.setShowsControls")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.showsControls")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Whether or not the receiver shows playback controls. Default is true. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.DrawerLayout.getToolbar")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Android.DrawerLayout.toolbar property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.DrawerLayout.setToolbar")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Android.DrawerLayout.toolbar property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.DrawerLayout.toolbar")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A Toolbar instance to use as a toolbar. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.SearchView.getHintTextColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Android.SearchView.hintTextColor property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.SearchView.hintTextColor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Color of hint text that displays when field is empty. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.SearchView.setHintTextColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Android.SearchView.hintTextColor property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.color")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Color of the text in this text field, as a color name or hex triplet. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.getColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.SearchBar.color property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.getHintTextColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.SearchBar.hintTextColor property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.hintTextColor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Hint text color to display when the field is empty. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.setColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.SearchBar.color property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.setHintTextColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.SearchBar.hintTextColor property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TabGroup.close")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Fired when the tab group is closed. (Added support for Android.)")])])])]),t._v(" "),d("h3",{attrs:{id:"_7-1-0"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-0"}},[t._v("#")]),t._v(" 7.1.0")]),t._v(" "),d("p",[t._v("The following APIs are new or have expanded platform support in Release 7.1.0 as of March 14th, 2018.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Titanium.Android.ActionBar.customView")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Sets a view to be used for a custom navigation mode. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.ActionBar.getCustomView")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Android.ActionBar.customView property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.ActionBar.setCustomView")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Android.ActionBar.customView property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.NotificationManager.areNotificationsEnabled")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Returns whether showing notifications is enabled for the application. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.createRecurrenceRule")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Creates an recurrence pattern for a recurring event.All of the properties for the recurrence rule must be set during creation. The recurrence rule properties cannot be modified. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.getRecurrenceRules")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Calendar.Event.recurrenceRules property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.recurrenceRules")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The recurrence rules for the calendar item. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.save")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Saves changes to an event permanently. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.Event.setRecurrenceRules")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Calendar.Event.recurrenceRules property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Calendar.RecurrenceRule")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("An object that is used to describe the recurrence pattern for a recurring event. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.getShowsControls")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.setShowsControls")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.showsControls")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Whether or not the receiver shows playback controls. Default is true. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.DrawerLayout.getToolbar")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Android.DrawerLayout.toolbar property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.DrawerLayout.setToolbar")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Android.DrawerLayout.toolbar property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.DrawerLayout.toolbar")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A Toolbar instance to use as a toolbar. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.SearchView.getHintTextColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Android.SearchView.hintTextColor property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.SearchView.hintTextColor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Color of hint text that displays when field is empty. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Android.SearchView.setHintTextColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Android.SearchView.hintTextColor property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.color")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Color of the text in this text field, as a color name or hex triplet. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.getColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.SearchBar.color property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.getHintTextColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.SearchBar.hintTextColor property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.hintTextColor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Hint text color to display when the field is empty. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.setColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.SearchBar.color property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.SearchBar.setHintTextColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.SearchBar.hintTextColor property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TabGroup.close")]),t._v(" "),d("td",[t._v("event")]),t._v(" "),d("td",[t._v("Fired when the tab group is closed. (Added support for Android.)")])])])]),t._v(" "),d("h3",{attrs:{id:"_7-0-1"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-0-1"}},[t._v("#")]),t._v(" 7.0.1")]),t._v(" "),d("p",[t._v("The following APIs are new or have expanded platform support in Release 7.0.1 as of December 21st, 2017.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_DEFAULT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_HIGH")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_LOW")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_MAX")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_MIN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_NONE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_UNSPECIFIED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Notification.color")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Accent color used behind icon. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Notification.getColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Android.Notification.color property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Notification.setColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Android.Notification.color property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.NotificationChannel")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("Module for notification channels. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.QuickSettingsService")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("Android service for creating custom quick settings tiles and handling user's interaction with them. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.TILE_STATE_ACTIVE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("QuickSettings tile is active. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.TILE_STATE_INACTIVE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("QuickSettings tile is inactive. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.TILE_STATE_UNAVAILABLE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("QuickSettings tile is unavailble. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies that the video should be stretched to fill the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies that the player should preserve the aspect ratio of video and fit the video within the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies that the player should preserve the aspect ratio of video and fill the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.getShowsControls")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.setShowsControls")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.showsControls")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Whether or not the receiver shows playback controls. Default is true. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.getIdentifierForAdvertising")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Platform.identifierForAdvertising property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.getIdentifierForVendor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Platform.identifierForVendor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.getIsAdvertisingTrackingEnabled")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Platform.isAdvertisingTrackingEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.identifierForAdvertising")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("An alphanumeric string unique to each device, used only for serving advertisements. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.identifierForVendor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("An alphanumeric string that uniquely identifies a device to the app's vendor. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.isAdvertisingTrackingEnabled")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A Boolean value that indicates whether the user has limited ad tracking. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.setIdentifierForAdvertising")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Platform.identifierForAdvertising property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ATTRIBUTE_BASELINE_OFFSET")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with Attribute.type to apply a different baseline to the text. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.allowsMultipleSelectionDuringEditing")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Determines whether multiple items of this list view can be selected at the same time while editing the table. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.getAllowsMultipleSelectionDuringEditing")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.ListView.allowsMultipleSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.getSelectedItems")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.ListView.selectedItems property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.selectedItems")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Returns the selected list view items. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.setAllowsMultipleSelectionDuringEditing")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.ListView.allowsMultipleSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.setSelectedItems")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.ListView.selectedItems property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollView.scrollToTop")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Moves the top of the scrollable region into the viewable area. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.getHintType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextArea.hintType property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.hintType")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Hint type to display on the text field. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.setHintType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextArea.hintType property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.getHintType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextField.hintType property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.hintType")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Hint type to display on the text field. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.setHintType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextField.hintType property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getSustainedPerformanceMode")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.sustainedPerformanceMode property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setSustainedPerformanceMode")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.sustainedPerformanceMode property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.sustainedPerformanceMode")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Maintain a sustainable level of performance. (New API, supported on Android.)")])])])]),t._v(" "),d("h3",{attrs:{id:"_7-0-0"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_7-0-0"}},[t._v("#")]),t._v(" 7.0.0")]),t._v(" "),d("p",[t._v("The following APIs are new or have expanded platform support in Release 7.0.0 as of December 8th, 2017.")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("API")]),t._v(" "),d("th",[t._v("Type")]),t._v(" "),d("th",[t._v("Notes")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_DEFAULT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_HIGH")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_LOW")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_MAX")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_MIN")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_NONE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.IMPORTANCE_UNSPECIFIED")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Notification.color")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Accent color used behind icon. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Notification.getColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Android.Notification.color property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.Notification.setColor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Android.Notification.color property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.NotificationChannel")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("Module for notification channels. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.QuickSettingsService")]),t._v(" "),d("td",[t._v("object")]),t._v(" "),d("td",[t._v("Android service for creating custom quick settings tiles and handling user's interaction with them. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.TILE_STATE_ACTIVE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("QuickSettings tile is active. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.TILE_STATE_INACTIVE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("QuickSettings tile is inactive. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Android.TILE_STATE_UNAVAILABLE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("QuickSettings tile is unavailble. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies that the video should be stretched to fill the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies that the player should preserve the aspect ratio of video and fit the video within the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies that the player should preserve the aspect ratio of video and fill the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.getShowsControls")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.setShowsControls")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Media.VideoPlayer.showsControls")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Whether or not the receiver shows playback controls. Default is true. (Added support for iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.getIdentifierForAdvertising")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Platform.identifierForAdvertising property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.getIdentifierForVendor")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Platform.identifierForVendor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.getIsAdvertisingTrackingEnabled")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.Platform.isAdvertisingTrackingEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.identifierForAdvertising")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("An alphanumeric string unique to each device, used only for serving advertisements. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.identifierForVendor")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("An alphanumeric string that uniquely identifies a device to the app's vendor. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.isAdvertisingTrackingEnabled")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A Boolean value that indicates whether the user has limited ad tracking. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.Platform.setIdentifierForAdvertising")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.Platform.identifierForAdvertising property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ATTRIBUTE_BASELINE_OFFSET")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Use with Attribute.type to apply a different baseline to the text. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of an address. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_CITY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a city name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_CITY_STATE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a city name combined with a state name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_LINE1")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of the first line of a street address. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_LINE2")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of the second line of a street address. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_STATE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a state name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_EXPIRATION_DATE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a card expiration date. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_EXPIRATION_DAY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a card expiration day. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_EXPIRATION_MONTH")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a card expiration month. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_EXPIRATION_YEAR")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a card expiration year. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_NUMBER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a card number. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_SECURITY_CODE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a card security code. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_COUNTRY_NAME")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a country name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_EMAIL")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of an email address. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_FAMILY_NAME")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a family name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_GIVEN_NAME")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a given name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_JOB_TITLE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a job title. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_LOCATION")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a location, such as a point of interest, an address, or another way to identify a location. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_MIDDLE_NAME")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a middle name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NAME")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a name. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NAME_PREFIX")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a prefix or title, such as 'Dr.' (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NAME_SUFFIX")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a suffix, such as 'Jr.' (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NICKNAME")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a nickname. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ORGANIZATION_NAME")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of an organization name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_PASSWORD")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a password. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_PHONE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a telephone number. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_POSTAL_CODE")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a postal code. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_SUBLOCALITY")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a sublocality. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_URL")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of a URL. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.AUTOFILL_TYPE_USERNAME")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies the expectation of an account or login name. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.allowsMultipleSelectionDuringEditing")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Determines whether multiple items of this list view can be selected at the same time while editing the table. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.getAllowsMultipleSelectionDuringEditing")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.ListView.allowsMultipleSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.getSelectedItems")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.ListView.selectedItems property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.selectedItems")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Returns the selected list view items. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.setAllowsMultipleSelectionDuringEditing")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.ListView.allowsMultipleSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ListView.setSelectedItems")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.ListView.selectedItems property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollView.getRefreshControl")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.ScrollView.refreshControl property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollView.refreshControl")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("View positioned above the first row that is only revealed when the user drags the scroll view contents down. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollView.scrollToTop")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Moves the top of the scrollable region into the viewable area. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.ScrollView.setRefreshControl")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.ScrollView.refreshControl property. (Added support for Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.autofillType")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Sets the autofill type for the text area. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.getAutofillType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextArea.autofillType property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.getHintType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextArea.hintType property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.hintType")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Hint type to display on the text field. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.setAutofillType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextArea.autofillType property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextArea.setHintType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextArea.hintType property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.autofillType")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Sets the autofill type for the text field. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.getAutofillType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextField.autofillType property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.getHintType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.TextField.hintType property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.hintType")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Hint type to display on the text field. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.setAutofillType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextField.autofillType property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.TextField.setHintType")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.TextField.hintType property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.extendSafeArea")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Specifies whether the content (subviews) of the window will render inside the safe-area or not.Only used in iOS 11.0 and later. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getExtendSafeArea")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.extendSafeArea property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getLargeTitleDisplayMode")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.largeTitleDisplayMode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getLargeTitleEnabled")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.largeTitleEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.getSustainedPerformanceMode")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Gets the value of the Titanium.UI.Window.sustainedPerformanceMode property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.largeTitleDisplayMode")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("The mode to use when displaying the title of the navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.largeTitleEnabled")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("A Boolean value indicating whether the title should be displayed in a large format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setExtendSafeArea")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.extendSafeArea property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setLargeTitleDisplayMode")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.largeTitleDisplayMode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setLargeTitleEnabled")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.largeTitleEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.setSustainedPerformanceMode")]),t._v(" "),d("td",[t._v("method")]),t._v(" "),d("td",[t._v("Sets the value of the Titanium.UI.Window.sustainedPerformanceMode property. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.Window.sustainedPerformanceMode")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Maintain a sustainable level of performance. (New API, supported on Android.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_ALWAYS")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Always use a larger title when this item is top most. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_AUTOMATIC")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Automatically use the large out-of-line title based on the state of the previous item in the navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),d("tr",[d("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_NEVER")]),t._v(" "),d("td",[t._v("property")]),t._v(" "),d("td",[t._v("Never use a larger title when this item is top most. (New API, supported on iPhone and iPad.)")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);