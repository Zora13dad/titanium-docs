(window.webpackJsonp=window.webpackJsonp||[]).push([[1146],{1142:function(t,e,i){"use strict";i.r(e);var a=i(21),d=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"new-api-notice-sdk-8-x"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#new-api-notice-sdk-8-x"}},[t._v("#")]),t._v(" New API Notice SDK 8.x")]),t._v(" "),i("p",[t._v("List of all new API notices for SDK 8.x.")]),t._v(" "),i("h2",{attrs:{id:"sdk-8-x"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#sdk-8-x"}},[t._v("#")]),t._v(" SDK 8.x")]),t._v(" "),i("h3",{attrs:{id:"_8-1-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-0"}},[t._v("#")]),t._v(" 8.1.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in release 8.1.0.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Database.DB.executeAll")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Synchronously executes an array of SQL statements against the database and returns an array of "),i("code",[t._v("ResultSet")]),t._v(".On failure, this will throw an Error that reports the failed index and partial results(New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Database.DB.executeAllAsync")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Asynchronously executes an array of SQL statements against the database and fires a callback with a possible Error, and an array of "),i("code",[t._v("ResultSet")]),t._v(".On failure, this will call the callback with an Error that reports the failed index, and a second arguemnt with the partial results(New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Database.DB.executeAsync")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Asynchronously executes an SQL statement against the database and fires a callback with a possible "),i("code",[t._v("Error")]),t._v(" argument, and a second argument holding a possible "),i("code",[t._v("ResultSet")]),t._v(".(New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.canOpenURL")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns whether the system is configured with a default application to handle the URL's protocol/scheme.(Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.dampingRatio")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The damping ratio for the spring animation as it approaches its quiescent state.(New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.getDampingRatio")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.Animation.dampingRatio instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.getSpringVelocity")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.Animation.springVelocity instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.setDampingRatio")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.Animation.dampingRatio instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.setSpringVelocity")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.Animation.springVelocity instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.springVelocity")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The initial spring velocity. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.ListView.separatorStyle instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getShowSearchBarInNavBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.ListView.showSearchBarInNavBar instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.separatorStyle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Separator style constant. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.ListView.separatorStyle instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setShowSearchBarInNavBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.ListView.showSearchBarInNavBar instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.showSearchBarInNavBar")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean indicating whether search bar will be in navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_STYLE_LARGE_TITLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the text style for the Font Object. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getShowSearchBarInNavBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.TableView.showSearchBarInNavBar instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setShowSearchBarInNavBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.TableView.showSearchBarInNavBar instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.showSearchBarInNavBar")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean indicating whether search bar will be in navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setHtml")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of html property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHidesSearchBarWhenScrolling")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.Window.hidesSearchBarWhenScrolling instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.hidesSearchBarWhenScrolling")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether the integrated search bar is hidden when scrolling any underlying content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHidesSearchBarWhenScrolling")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.Window.hidesSearchBarWhenScrolling instead.")])])])]),t._v(" "),i("h3",{attrs:{id:"_8-0-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_8-0-0"}},[t._v("#")]),t._v(" 8.0.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in release 8.0.0.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.rootActivity")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The first activity launched by the application. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.started")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v('Fired after the "app.js" or "alloy.js" gets executed during application startup. (New API, supported on Android, iPhone and iPad.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.cpus")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns an array of basic cpu information for all logical processors (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ANIMATION_CURVE_EASE_IN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Animation.curve to specify an animation that starts slowly and speeds up. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ANIMATION_CURVE_EASE_IN_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Animation.curve to specify an animation that starts slowly, and speeds up, then slows down at the end of the animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ANIMATION_CURVE_EASE_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Animation.curve to specify an animation that starts quickly, then slows down at the end of the animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ANIMATION_CURVE_LINEAR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Animation.curve to specify an animation that proceeds at a constant rate. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TABS_STYLE_BOTTOM_NAVIGATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("TabGroup style taking advantage of a bottom navigation controller for switching between tabs. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TABS_STYLE_DEFAULT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The default TabGroup style that places the Tabs bellow the ActionBar and above the Window content. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.curve")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Animation curve or easing function to apply to the animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Matrix2D")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The 2D Matrix is an object for holding values for an affine transformation matrix. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Matrix3D")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The 3D Matrix is an object for holding values for a 3D affine transform. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.NavigationWindow")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A "),i("code",[t._v("NavigationWindow")]),t._v(" implements a specialized view that manages the navigation of hierarchical content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ProgressBar.trackTintColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The color shown for the portion of the progress bar that is not filled. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.activeTitleColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Defines the color of the title of tab when it's active. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.titleColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Defines the color of the title of tab when it's inactive. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.shiftMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether the BOTTOM_NAVIGATION_VIEW_STYLE uses shiftMode. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.style")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Property defining which style for the TabGroup to be used. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabbedBar")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A button bar that maintains a selected state. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.addScriptMessageHandler")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Adds a script message handler. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.addUserScript")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Adds a user script. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.allowedURLSchemes")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("List of allowed URL schemes for the web view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.allowsBackForwardNavigationGestures")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether horizontal swipe gestures will trigger back-forward list navigations. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.backForwardList")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("An object which maintains a list of visited pages used to go back and forward to the most recent page.  "),i("br"),t._v("(New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.cachePolicy")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The cache policy for the request. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.configuration")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The configuration for the new web view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.handleurl")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when Titanium.UI.WebView.allowedURLSchemes contains scheme of opening url. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.message")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a script message is received from a webpage. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.progress")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An estimate of what fraction of the current navigation has been loaded. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.progress")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when web page download progresses. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.redirect")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a web view receives a server redirect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.removeAllUserScripts")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Removes all associated user scripts. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.removeScriptMessageHandler")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Removes a script message handler. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.secure")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether all resources on the page have been loaded through securely encrypted connections. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.selectionGranularity")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The level of granularity with which the user can interactively select content in the web view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.sslerror")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when an SSL error occurred. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.startListeningToProperties")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Add native properties for observing for change. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.stopListeningToProperties")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Remove native properties from observing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.takeSnapshot")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Takes a snapshot of the view's visible viewport. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.timeout")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The timeout interval for the request, in seconds. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.title")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns page title of webpage. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createMatrix3D")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.Matrix3D. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createNavigationWindow")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.NavigationWindow. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createTabbedBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.TabbedBar. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.ACTION_POLICY_ALLOW")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Allow the navigation to continue. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.ACTION_POLICY_CANCEL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Cancel the navigation. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_ALL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("All media types require a user gesture to begin playing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_AUDIO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media types containing audio require a user gesture to begin playing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("No media types require a user gesture to begin playing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_VIDEO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media types containing video require a user gesture to begin playing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CACHE_POLICY_RELOAD_IGNORING_LOCAL_CACHE_DATA")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the data for the URL load should be loaded from the originating source. No existing cache data should be used to satisfy a URL load request. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CACHE_POLICY_RETURN_CACHE_DATA_DONT_LOAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the existing cache data should be used to satisfy a request, regardless of its age or expiration date. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CACHE_POLICY_RETURN_CACHE_DATA_ELSE_LOAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the existing cached data should be used to satisfy the request, regardless of its age or expiration date. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CACHE_POLICY_USE_PROTOCOL_CACHE_POLICY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the caching logic defined in the protocol implementation, if any, is used for a particular URL load request. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CREDENTIAL_PERSISTENCE_FOR_SESSION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Credential should be stored only for this session. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CREDENTIAL_PERSISTENCE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Credential should not be stored. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CREDENTIAL_PERSISTENCE_PERMANENT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Credential should be stored in the keychain. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CREDENTIAL_PERSISTENCE_SYNCHRONIZABLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Credential should be stored permanently in the keychain, and in addition should be distributed to other devices based on the owning AppleID. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.INJECTION_TIME_DOCUMENT_END")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Inject the script after the document finishes loading, but before other subresources finish loading. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.INJECTION_TIME_DOCUMENT_START")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Inject the script after the document element is created, but before any other content is loaded. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SELECTION_GRANULARITY_CHARACTER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Selection endpoints can be placed at any character boundary. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SELECTION_GRANULARITY_DYNAMIC")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Selection granularity varies automatically depending on the selection. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.WebViewConfiguration")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A collection of properties used to initialize a web view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.WebViewDecisionHandler")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("It represents the decision handler to tell to webview, whether allow or cancel the navigation. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.WebViewProcessPool")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("It represents a pool of Web Content processes. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createWebViewConfiguration")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.WebViewConfiguration. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createWebViewDecisionHandler")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.WebViewDecisionHandler. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createWebViewProcessPool")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.WebViewProcessPool. (New API, supported on iPhone and iPad.)")])])])])])}),[],!1,null,null,null);e.default=d.exports}}]);