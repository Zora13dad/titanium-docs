(window.webpackJsonp=window.webpackJsonp||[]).push([[873],{2112:function(e,t,a){"use strict";a.r(t);var n=a(21),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"adding-new-properties-to-existing-ruble-objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-new-properties-to-existing-ruble-objects"}},[e._v("#")]),e._v(" Adding New Properties to Existing Ruble Objects")]),e._v(" "),a("p",[e._v('If you add new properties to an existing Ruble object, you\'ll need to make a few related changes. Here, we discuss the addition of a new "Icon" property to the Project Template Element. This is a property that enables a user to set a path to an icon for a project template.')]),e._v(" "),a("h2",{attrs:{id:"update-the-element-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-the-element-class"}},[e._v("#")]),e._v(" Update the element class")]),e._v(" "),a("p",[e._v("We update the model element to contain the new getter and setters. Note that we expect a string value and return a string value here. If the end object type is more complex, you may need to create separate methods to serialize and deserialize from a string value.")]),e._v(" "),a("p",[e._v("In com.aptana.scripting.model.ProjectTemplateElement:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/*\n * setIconPath\n */\npublic void setIcon(String iconPath)\n{\n  fIconPath = iconPath;\n}\n\n/*\n * getIconPath\n */\npublic String getIcon()\n{\n  return fIconPath;\n}\n")])])]),a("h2",{attrs:{id:"update-the-project-template-rb-wrapper-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-the-project-template-rb-wrapper-file"}},[e._v("#")]),e._v(" Update the project_template.rb wrapper file")]),e._v(" "),a("p",[e._v("This is the wrapper the Ruby code interacts with. This is translated into the getIcon and setIcon calls above.")]),e._v(" "),a("p",[e._v("In plugins/com.aptana.scripting/framework/ruble/project.template.rb:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("def icon\n  @jobj.icon\nend\n\ndef icon=(path)\n  @jobj.icon = path\nend\n")])])]),a("h2",{attrs:{id:"update-the-bundle-view"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-the-bundle-view"}},[e._v("#")]),e._v(" Update the Bundle View")]),e._v(" "),a("p",[e._v("The Bundle View shows the properties for the current selected element.")]),e._v(" "),a("p",[e._v("Update com.aptana.scripting.ui.views.ProjectTemplateNode to add an item to the existing enum for the new property:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("...\n},\nICON(Messages.ProjectTemplateNode_Project_Template_Icon_Path)\n{\n  public Object getPropertyValue(ProjectTemplateNode node)\n  {\n    return node.projectTemplate.getIcon();\n  }\n};\n...\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);