(window.webpackJsonp=window.webpackJsonp||[]).push([[848],{2052:function(e,n,t){"use strict";t.r(n);var a=t(21),o=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"a-simple-command"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-simple-command"}},[e._v("#")]),e._v(" A Simple Command")]),e._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),t("p",[e._v("In this recipe, we show how to create a simple Ruble command, place it in a menu, and optionally bind it to a key command.")]),e._v(" "),t("h2",{attrs:{id:"the-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-code"}},[e._v("#")]),e._v(" The Code")]),e._v(" "),t("p",[e._v('In the snippet below, we use the Ruby "swapcase" command to switch the case of the selected text. This is the entire Ruble file, though you could ad the menu items and commands to your existing file.')]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("require 'ruble'\n\nbundle do |bundle|\n  bundle.display_name = 'My Ruble'\n  bundle.menu 'My Ruble' do |menu|\n    menu.command 'Swap Case'\n  end\nend\n\ncommand 'Swap Case' do |cmd|\n  #cmd.key_binding = 'SHIFT+CTRL+A' # uncomment for a key binding\n  cmd.scope = 'source'\n  cmd.output = :replace_selection\n  cmd.input = :selection, :word\n  cmd.invoke do |context|\n    word = $stdin.gets\n    context.exit_discard if word.nil? # exit if the selection is null\n    print word.swapcase\n  end\nend\n")])])]),t("p",[e._v("Once created and activated, select text in your document and try the above command. It should flip the case of your text:")]),e._v(" "),t("p",[t("strong",[e._v("Wrap Each Selected Line")]),e._v(" => "),t("strong",[e._v("wRAP eACH sELECTED lINE")])]),e._v(" "),t("h2",{attrs:{id:"using-environment-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-environment-variables"}},[e._v("#")]),e._v(" Using Environment Variables")]),e._v(" "),t("p",[e._v('Rather than reading from stdin (note the "input = :selection, :word" up top), you could also use an '),t("RouterLink",{attrs:{to:"/guide/Axway_Appcelerator_Studio/Axway_Appcelerator_Studio_Guide/Customizing_Studio/Rubles/Ruble_environment_variables/"}},[e._v("environment variable")]),e._v(":")],1),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("command 'Swap Case' do |cmd|\n  #cmd.key_binding = 'SHIFT+CTRL+A' # uncomment for a key binding\n  cmd.scope = 'source'\n  cmd.output = :replace_selection\n  cmd.invoke do |context|\n    word = ENV['TM_SELECTED_TEXT']\n    context.exit_discard if word.nil? # exit if the selection is null\n    print word.swapcase\n  end\nend\n")])])])])}),[],!1,null,null,null);n.default=o.exports}}]);