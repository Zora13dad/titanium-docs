(window.webpackJsonp=window.webpackJsonp||[]).push([[924],{2637:function(e,t,o){"use strict";o.r(t);var l=o(21),a=Object(l.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"advanced"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#advanced"}},[e._v("#")]),e._v(" Advanced")]),e._v(" "),o("p",[e._v("Samples in the advanced/ folder demonstrate advanced Alloy topics and approaches, such as advanced styling, using modules, using CommonJS modules, and more.")]),e._v(" "),o("ul",[o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Alloy_Themes/"}},[e._v("Alloy Themes")]),e._v(" — This document demonstrates how to use Alloy themes to easily style your entire application UI for different platforms.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/CommonJS_XML/"}},[e._v("CommonJS XML")]),e._v(" — Demonstrates using CommonJS modules to create UI components in an Alloy XML view.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Complex_Styling/"}},[e._v("Complex Styling")]),e._v(" — Demonstrates how Alloy combines several TSS styles based on their priority.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Custom_TSS_Queries/"}},[e._v("Custom TSS Queries")]),e._v(" — Demonstrates how to use custom TSS queries to style Alloy elements.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Device_Queries/"}},[e._v("Device Queries")]),e._v(" — Demonstrates how to combine platform and formFactor attribute selectors to apply different styles and properties on different platforms and device types.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Dynamic_Styling/"}},[e._v("Dynamic Styling")]),e._v(" — Demonstrates different approaches to changing styles at runtime in Alloy. The sample application displays a menu of options that discuss or demonstrate the different approaches and techniques for dynamic styling. See each section below for a discussion of each approach.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Form_factor/"}},[e._v("Form factor")]),e._v(' — Demonstrates how to conditionally apply TSS styles or include XML markup based on the form factor of the target device. Each XML element, or TSS style, can be assigned a formFactor attribute that can take a value of either "handheld" or "tablet".')],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Handling_Different_Screen_Densities_on_Android/"}},[e._v("Handling Different Screen Densities on Android")]),e._v(" — Demonstrates how to package and use images for different screen densities on Android.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Inheritance/"}},[e._v("Inheritance")]),e._v(" — Demonstrates how an Alloy controller can inherit functionality from another controller.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Localization/"}},[e._v("Localization")]),e._v(" — Demonstrates how to use localized strings in your Alloy project.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Master-Detail/"}},[e._v("Master-Detail")]),e._v(" — Demonstrates how to create a master-detail application that presents a list of items from which the user can select to view details about that item.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/MomentJS/"}},[e._v("MomentJS")]),e._v(" — Demonstrates how to use the built-in Moment.js http://momentjs.com/ library in your Alloy application to format a date for different locales. Moment.js is a full featured date library for parsing, validating, manipulating, and formatting dates.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Native_Modules/"}},[e._v("Native Modules")]),e._v(" — Demonstrates using a native module in an Alloy application, in this case the Paint module provided by Appcelerator.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Platform_folders/"}},[e._v("Platform folders")]),e._v(" — Demonstrates how to structure an Alloy project with folders that contains platform-specific views.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Proxy_Property_Requires/"}},[e._v("Proxy Property Requires")]),e._v(" — Demonstrates using Require and Widget elements to create Titanium proxy properties.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Requiring_Child_Elements/"}},[e._v("Requiring Child Elements")]),e._v(" — Demonstrates how to use the and elements to include external views and widgets. Also shows how to programmatically add child views declared inside a or element to the parent.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Advanced/Theming_Widgets/"}},[e._v("Theming Widgets")]),e._v(" — Demonstrates how to apply themes to widgets. Theme settings override default styles and assets defined within the widget itself.")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);