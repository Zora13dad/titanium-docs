(window.webpackJsonp=window.webpackJsonp||[]).push([[1592],{1437:function(t,e,i){"use strict";i.r(e);var d=i(21),o=Object(d.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"titanium-sdk-new-api-notices"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#titanium-sdk-new-api-notices"}},[t._v("#")]),t._v(" Titanium SDK New API Notices")]),t._v(" "),i("p",[t._v("This document lists every SDK new API notice.")]),t._v(" "),i("p",[t._v("List of all new API notices for SDK 8.x.")]),t._v(" "),i("h2",{attrs:{id:"sdk-8-x"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#sdk-8-x"}},[t._v("#")]),t._v(" SDK 8.x")]),t._v(" "),i("h3",{attrs:{id:"_8-1-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-0"}},[t._v("#")]),t._v(" 8.1.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in release 8.1.0.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Database.DB.executeAll")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Synchronously executes an array of SQL statements against the database and returns an array of "),i("code",[t._v("ResultSet")]),t._v(".On failure, this will throw an Error that reports the failed index and partial results(New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Database.DB.executeAllAsync")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Asynchronously executes an array of SQL statements against the database and fires a callback with a possible Error, and an array of "),i("code",[t._v("ResultSet")]),t._v(".On failure, this will call the callback with an Error that reports the failed index, and a second arguemnt with the partial results(New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Database.DB.executeAsync")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Asynchronously executes an SQL statement against the database and fires a callback with a possible "),i("code",[t._v("Error")]),t._v(" argument, and a second argument holding a possible "),i("code",[t._v("ResultSet")]),t._v(".(New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.canOpenURL")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns whether the system is configured with a default application to handle the URL's protocol/scheme.(Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.dampingRatio")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The damping ratio for the spring animation as it approaches its quiescent state.(New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.getDampingRatio")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.Animation.dampingRatio instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.getSpringVelocity")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.Animation.springVelocity instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.setDampingRatio")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.Animation.dampingRatio instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.setSpringVelocity")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.Animation.springVelocity instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.springVelocity")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The initial spring velocity. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.ListView.separatorStyle instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getShowSearchBarInNavBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.ListView.showSearchBarInNavBar instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.separatorStyle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Separator style constant. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.ListView.separatorStyle instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setShowSearchBarInNavBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.ListView.showSearchBarInNavBar instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.showSearchBarInNavBar")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean indicating whether search bar will be in navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_STYLE_LARGE_TITLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the text style for the Font Object. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getShowSearchBarInNavBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.TableView.showSearchBarInNavBar instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setShowSearchBarInNavBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.TableView.showSearchBarInNavBar instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.showSearchBarInNavBar")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean indicating whether search bar will be in navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setHtml")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of html property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHidesSearchBarWhenScrolling")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Access Titanium.UI.Window.hidesSearchBarWhenScrolling instead.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.hidesSearchBarWhenScrolling")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether the integrated search bar is hidden when scrolling any underlying content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHidesSearchBarWhenScrolling")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the value using Titanium.UI.Window.hidesSearchBarWhenScrolling instead.")])])])]),t._v(" "),i("h3",{attrs:{id:"_8-0-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_8-0-0"}},[t._v("#")]),t._v(" 8.0.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in release 8.0.0.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.rootActivity")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The first activity launched by the application. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.started")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v('Fired after the "app.js" or "alloy.js" gets executed during application startup. (New API, supported on Android, iPhone and iPad.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.cpus")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns an array of basic cpu information for all logical processors (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ANIMATION_CURVE_EASE_IN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Animation.curve to specify an animation that starts slowly and speeds up. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ANIMATION_CURVE_EASE_IN_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Animation.curve to specify an animation that starts slowly, and speeds up, then slows down at the end of the animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ANIMATION_CURVE_EASE_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Animation.curve to specify an animation that starts quickly, then slows down at the end of the animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ANIMATION_CURVE_LINEAR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Animation.curve to specify an animation that proceeds at a constant rate. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TABS_STYLE_BOTTOM_NAVIGATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("TabGroup style taking advantage of a bottom navigation controller for switching between tabs. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TABS_STYLE_DEFAULT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The default TabGroup style that places the Tabs bellow the ActionBar and above the Window content. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Animation.curve")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Animation curve or easing function to apply to the animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Matrix2D")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The 2D Matrix is an object for holding values for an affine transformation matrix. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Matrix3D")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The 3D Matrix is an object for holding values for a 3D affine transform. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.NavigationWindow")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A "),i("code",[t._v("NavigationWindow")]),t._v(" implements a specialized view that manages the navigation of hierarchical content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ProgressBar.trackTintColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The color shown for the portion of the progress bar that is not filled. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.activeTitleColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Defines the color of the title of tab when it's active. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.titleColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Defines the color of the title of tab when it's inactive. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.shiftMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether the BOTTOM_NAVIGATION_VIEW_STYLE uses shiftMode. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.style")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Property defining which style for the TabGroup to be used. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabbedBar")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A button bar that maintains a selected state. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.addScriptMessageHandler")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Adds a script message handler. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.addUserScript")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Adds a user script. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.allowedURLSchemes")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("List of allowed URL schemes for the web view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.allowsBackForwardNavigationGestures")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether horizontal swipe gestures will trigger back-forward list navigations. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.backForwardList")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("An object which maintains a list of visited pages used to go back and forward to the most recent page.  "),i("br"),t._v("(New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.cachePolicy")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The cache policy for the request. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.configuration")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The configuration for the new web view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.handleurl")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when Titanium.UI.WebView.allowedURLSchemes contains scheme of opening url. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.message")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a script message is received from a webpage. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.progress")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An estimate of what fraction of the current navigation has been loaded. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.progress")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when web page download progresses. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.redirect")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a web view receives a server redirect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.removeAllUserScripts")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Removes all associated user scripts. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.removeScriptMessageHandler")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Removes a script message handler. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.secure")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether all resources on the page have been loaded through securely encrypted connections. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.selectionGranularity")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The level of granularity with which the user can interactively select content in the web view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.sslerror")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when an SSL error occurred. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.startListeningToProperties")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Add native properties for observing for change. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.stopListeningToProperties")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Remove native properties from observing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.takeSnapshot")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Takes a snapshot of the view's visible viewport. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.timeout")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The timeout interval for the request, in seconds. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.title")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns page title of webpage. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createMatrix3D")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.Matrix3D. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createNavigationWindow")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.NavigationWindow. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createTabbedBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.TabbedBar. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.ACTION_POLICY_ALLOW")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Allow the navigation to continue. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.ACTION_POLICY_CANCEL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Cancel the navigation. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_ALL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("All media types require a user gesture to begin playing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_AUDIO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media types containing audio require a user gesture to begin playing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("No media types require a user gesture to begin playing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_VIDEO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media types containing video require a user gesture to begin playing. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CACHE_POLICY_RELOAD_IGNORING_LOCAL_CACHE_DATA")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the data for the URL load should be loaded from the originating source. No existing cache data should be used to satisfy a URL load request. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CACHE_POLICY_RETURN_CACHE_DATA_DONT_LOAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the existing cache data should be used to satisfy a request, regardless of its age or expiration date. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CACHE_POLICY_RETURN_CACHE_DATA_ELSE_LOAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the existing cached data should be used to satisfy the request, regardless of its age or expiration date. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CACHE_POLICY_USE_PROTOCOL_CACHE_POLICY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the caching logic defined in the protocol implementation, if any, is used for a particular URL load request. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CREDENTIAL_PERSISTENCE_FOR_SESSION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Credential should be stored only for this session. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CREDENTIAL_PERSISTENCE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Credential should not be stored. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CREDENTIAL_PERSISTENCE_PERMANENT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Credential should be stored in the keychain. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.CREDENTIAL_PERSISTENCE_SYNCHRONIZABLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Credential should be stored permanently in the keychain, and in addition should be distributed to other devices based on the owning AppleID. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.INJECTION_TIME_DOCUMENT_END")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Inject the script after the document finishes loading, but before other subresources finish loading. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.INJECTION_TIME_DOCUMENT_START")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Inject the script after the document element is created, but before any other content is loaded. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SELECTION_GRANULARITY_CHARACTER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Selection endpoints can be placed at any character boundary. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SELECTION_GRANULARITY_DYNAMIC")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Selection granularity varies automatically depending on the selection. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.WebViewConfiguration")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A collection of properties used to initialize a web view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.WebViewDecisionHandler")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("It represents the decision handler to tell to webview, whether allow or cancel the navigation. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.WebViewProcessPool")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("It represents a pool of Web Content processes. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createWebViewConfiguration")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.WebViewConfiguration. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createWebViewDecisionHandler")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.WebViewDecisionHandler. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createWebViewProcessPool")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.WebViewProcessPool. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),i("p",[t._v("List of all new API notices for SDK 7.x.")]),t._v(" "),i("h2",{attrs:{id:"sdk-7-x"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#sdk-7-x"}},[t._v("#")]),t._v(" SDK 7.x")]),t._v(" "),i("h3",{attrs:{id:"_7-5-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-0"}},[t._v("#")]),t._v(" 7.5.0")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Global.console.timeLog")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Log duration taken so far for an operation. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Activity.userinteraction")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Called whenever a key, touch, or trackball event is dispatched to the activity. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.NotificationChannel.getSound")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.NotificationChannel.sound property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.NotificationChannel.setSound")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.NotificationChannel.sound property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.NotificationChannel.sound")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A URL to the sound to play. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.Android.shortcutitemclick")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a Titanium.UI.ShortcutItem is clicked. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.shortcutitemclick")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a Titanium.UI.ShortcutItem is clicked. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.trackUserInteraction")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Indicates whether or not the user interaction shoud be tracked. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.userinteraction")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Called whenever an interaction with the window occurred. To be used together with the Titanium.App.trackUserInteraction property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Locale.change")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the device locale changes. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_BUFFERING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Audio data is being buffered from the network. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_INITIALIZED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Audio playback is being initialized. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_PAUSED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Playback is paused. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_PLAYING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Audio playback is active. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_STARTING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Audio playback is starting. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_STOPPED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Audio playback is stopped. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_STOPPING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Audio playback is stopping. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_WAITING_FOR_DATA")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Player is waiting for audio data from the network. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AUDIO_STATE_WAITING_FOR_QUEUE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Player is waiting for audio data to fill the queue. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.allowsExternalPlayback")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v('Indicates whether the player allows switching to "external playback" mode. (New API, supported on iPhone and iPad.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.complete")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the audio has finished playing. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.externalPlaybackActive")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v('Indicates whether the player is currently playing video in "external playback" mode. (New API, supported on iPhone and iPad.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.getAllowsExternalPlayback")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.allowsExternalPlayback property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.getExternalPlaybackActive")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.externalPlaybackActive property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.getMuted")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.muted property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.getRate")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.rate property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.metadata")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the timed metadata was encountered most recently within the media as it plays. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.muted")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Indicates whether or not audio output of the player is muted. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.rate")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v('Indicates the desired rate of playback; 0.0 means "paused", 1.0 indicates a desire to play at the natural rate of the current item. In addition, 2.0would mean that the audio plays twice as fast. (New API, supported on iPhone and iPad.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.release")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Stops buffering audio data and releases audio resources. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.restart")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Restarts (stops and stars) audio playback. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.seekToTime")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Moves the playback cursor and invokes the specified block when the seek operation has either been completed or been interrupted. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.setAllowsExternalPlayback")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.AudioPlayer.allowsExternalPlayback property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.setMuted")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.AudioPlayer.muted property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.setRate")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.AudioPlayer.rate property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.QUALITY_640x480")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media type constant for medium-quality video recording. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.QUALITY_HIGH")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media type constant for high-quality video recording. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.QUALITY_IFRAME_1280x720")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media type constant for medium-quality video recording. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.QUALITY_LOW")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media type constant for low-quality video recording. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.getQUALITY_640x480")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.QUALITY_640x480 property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.getQUALITY_IFRAME_1280x720")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.QUALITY_IFRAME_1280x720 property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_PARAGRAPH_STYLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.type to manages the behaviour of string set. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ActivityIndicator.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ActivityIndicator.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ActivityIndicator.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ActivityIndicator.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ActivityIndicator.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.buttonClickRequired")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Setting this to true requires the end-user to click a dialog button to close the dialog. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getButtonClickRequired")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.buttonClickRequired property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setButtonClickRequired")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.buttonClickRequired property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.FLAG_TRANSLUCENT_NAVIGATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Window flag which makes the Android system's navigation bar semi-transparent. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.FLAG_TRANSLUCENT_STATUS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Window flag which makes the Android system's top status bar semi-transparent. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.ProgressIndicator.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.ProgressIndicator.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Android.ProgressIndicator.anchorPoint property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.ProgressIndicator.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Android.ProgressIndicator.anchorPoint property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.attributedString")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specify an attributed string for the label. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.getAttributedString")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Button.attributedString property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.setAttributedString")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Button.attributedString property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.EmailDialog.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.EmailDialog.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.EmailDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.EmailDialog.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.EmailDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.OptionDialog.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.OptionDialog.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.OptionDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.OptionDialog.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.OptionDialog.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Picker.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Picker.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.clipViews")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether the previous and next pages are clipped, so that they are not visibleadjacent to the current page. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.getClipViews")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollableView.clipViews property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.getPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollableView.padding property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.padding")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The padding applied to the scrollable view. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.setClipViews")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollableView.clipViews property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.setPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollableView.padding property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.fieldBackgroundDisabledImage")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Background image of the text field in disabled state, specified as a local file path or URL. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.fieldBackgroundImage")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Background image of the text field, specified as a local file path or URL. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getFieldBackgroundDisabledImage")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.fieldBackgroundDisabledImage property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getFieldBackgroundImage")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.fieldBackgroundImage property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setFieldBackgroundDisabledImage")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.fieldBackgroundDisabledImage property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setFieldBackgroundImage")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.fieldBackgroundImage property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ShortcutItem")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An application shortcut. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Tab.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Tab.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TabGroup.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TabGroup.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getLines")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.lines property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getMaxLines")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.maxLines property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.lines")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number of lines tall the text area height will be, if set. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.maxLines")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Maximum line count of text field input. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setLines")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.lines property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setMaxLines")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.maxLines property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getPasswordRules")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.passwordRules property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.passwordRules")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Set password rules that should be used for this text field. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setPasswordRules")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.passwordRules property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.anchorPoint")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Coordinate of the view about which to pivot an animation. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setAnchorPoint")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.anchorPoint property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getMixedContentMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.mixedContentMode property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getOnlink")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.onlink property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.mixedContentMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("If "),i("code",[t._v("true")]),t._v(", allows the loading of insecure resources from a secure origin. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.onlink")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Fired before navigating to a link. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setMixedContentMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.mixedContentMode property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setOnlink")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.onlink property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.extendSafeArea")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies whether the screen insets/notches are allowed to overlap the window's content or not. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getExtendSafeArea")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.extendSafeArea property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHidesBackButton")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.hidesBackButton property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getSafeAreaPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.safeAreaPadding property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.hidesBackButton")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Set this to true to hide the back button of navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.safeAreaPadding")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The padding needed to safely display content without it being overlapped by the screen insets and notches. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setExtendSafeArea")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.extendSafeArea property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHidesBackButton")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.hidesBackButton property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createShortcutItem")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.ShortcutItem. (New API, supported on Android, iPhone and iPad.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_7-4-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-0"}},[t._v("#")]),t._v(" 7.4.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 7.4.0 as of September 17th, 2018.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_PROVISIONAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The application is provisionally authorized to post non-interruptive user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_TYPE_CRITICAL_ALERT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The ability to play sounds for critical alerts.Use with the types property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_TYPE_PROVIDES_APP_NOTIFICATION_SETTINGS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An option indicating the system should display a button for in-app notification settings.Use with the types property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_TYPE_PROVISIONAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The ability to post non-interrupting notifications provisionally to the Notification Center.Use with the types property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.deleteAllSavedUserActivities")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Deletes all user activities created by your app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.deleteSavedUserActivitiesForPersistentIdentifiers")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Deletes user activities created by your app that have the specified persistent identifiers. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.eligibleForPrediction")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value that determines whether Siri can suggest the user activity as a shortcut to the user. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.getEligibleForPrediction")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.UserActivity.eligibleForPrediction property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.getPersistentIdentifier")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.UserActivity.persistentIdentifier property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.persistentIdentifier")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A value used to identify the user activity. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.setEligibleForPrediction")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.UserActivity.eligibleForPrediction property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.setPersistentIdentifier")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.UserActivity.persistentIdentifier property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity.useractivitydeleted")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the user activity get deleted using the Titanium.App.iOS.UserActivity.deleteAllSavedUserActivities or Titanium.App.iOS.UserActivity.deleteSavedUserActivitiesForPersistentIdentifiers methods. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserNotificationCategory.categorySummaryFormat")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A format string for the summary description used when the system groups the category's notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NEW_PASSWORD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a new password. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ONE_TIME_CODE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a single-factor SMS login code. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_7-3-1"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-1"}},[t._v("#")]),t._v(" 7.3.1")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 7.3.1 as of August 30th, 2018.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Global.console.time")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Start a timer to track duration of an operation. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Global.console.timeEnd")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Stop a timer that was previously started. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.animator")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Animator resources. See R.animator in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.bool")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Boolean resources. See R.bool in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.fraction")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Fraction resources. See R.fraction in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.interpolator")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Interpolator resources. See R.fraction in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.menu")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Menu resources. See R.menu in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.mipmap")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Mipmap resources. See R.mipmap in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.plurals")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Plurals resources. See R.plurals in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.raw")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Raw resources. See R.raw in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.transition")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Transition resources. See R.transition in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.xml")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("XML resources. See R.xml in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Service.foregroundCancel")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v('Puts the service into the "background" state and removes its foreground notification. (New API, supported on Android.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Service.foregroundNotify")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v('Puts the service into the "foreground" state and displays a notification. (New API, supported on Android.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_ALERT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A alert dialog is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_BANNER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A banner is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("No banner or alert dialog is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_AUTHORIZED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The application is authorized to post user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_DENIED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The application is not authorized to post user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_NOT_DETERMINED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The user has not yet made a choice regarding whether the application may postuser notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_ALLOW_IN_CARPLAY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Allow CarPlay to display notifications of this type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_CUSTOM_DISMISS_ACTION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Send dismiss actions to the UNUserNotificationCenter object's delegate for handling. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_SUBTITLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Show the notification's subtitle, even if the user has disabled notification previews for the app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_TITLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Show the notification's title, even if the user has disabled notification previews for the app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("No options. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_DISABLED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The notification setting is turned off. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_ENABLED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The notification setting is turned on. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The application does not support this notification type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserNotificationCenter")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The top-level App iOS Notification Center module. It is used to control scheduled notificationsand receive details about the system-wide notification settings. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.append")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Appends data to the file identified by this file object. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.copy")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Copies the file identified by this file object to a new path. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.createdAt")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns the creation Date for the file identified by this file object. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.modifiedAt")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns the last modification Date for the file identified by this file object. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.getShowBackgroundLocationIndicator")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Geolocation.showBackgroundLocationIndicator property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.setShowBackgroundLocationIndicator")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Geolocation.showBackgroundLocationIndicator property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.showBackgroundLocationIndicator")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that an indicator be shown when the app makes use of continuous background location updates. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_CLEAR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_COLOR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_COLOR_BURN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_COLOR_DODGE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_COPY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DARKEN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_ATOP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_IN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_OVER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DIFFERENCE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_EXCLUSION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_HARD_LIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_HUE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_LIGHTEN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_LUMINOSITY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_MULTIPLY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_NORMAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_OVERLAY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_PLUS_DARKER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_PLUS_LIGHTER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SATURATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SCREEN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SOFT_LIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_ATOP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_IN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_XOR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.MaskedImage")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A control that displays an image composited with a background image or color. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getResultsBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getResultsSeparatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getResultsSeparatorInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getResultsSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getScrollable")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.scrollable property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.resultsBackgroundColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The background color of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.resultsSeparatorColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Separator line color between rows inside search results, as a color name or hex triplet (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.resultsSeparatorInsets")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The insets for search results separators (applies to all cells & iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.resultsSeparatorStyle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The separator style of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.scrollable")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("If "),i("code",[t._v("true")]),t._v(", the tableview can be scrolled. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setResultsBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setResultsSeparatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setResultsSeparatorInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setResultsSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setScrollable")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.scrollable property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getHorizontalMotionEffect")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.horizontalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getVerticalMotionEffect")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.verticalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.horizontalMotionEffect")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Adds a horizontal parallax effect to the view (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setHorizontalMotionEffect")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.horizontalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setVerticalMotionEffect")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.verticalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.verticalMotionEffect")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Adds a vertical parallax effect to the view (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getZoomLevel")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.zoomLevel property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setZoomLevel")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.zoomLevel property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.zoomLevel")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Manage the zoom-level of the current page. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHomeIndicatorAutoHidden")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.homeIndicatorAutoHidden property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getNavigationWindow")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.navigationWindow property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.homeIndicatorAutoHidden")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Boolean value indicating whether the system is allowed to hide the visual indicator for returning to the Home screen. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.navigationWindow")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The Titanium.UI.iOS.NavigationWindow instance hosting this window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHomeIndicatorAutoHidden")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.homeIndicatorAutoHidden property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createMaskedImage")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.MaskedImage. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("View presented over its parent window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Presented view covers the screen. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.setMODAL_PRESENTATION_OVER_CURRENT_CONTEXT")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.setMODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN property. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_7-3-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-0"}},[t._v("#")]),t._v(" 7.3.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 7.3.0 as of August 17th, 2018.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Global.console.time")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Start a timer to track duration of an operation. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Global.console.timeEnd")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Stop a timer that was previously started. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.animator")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Animator resources. See R.animator in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.bool")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Boolean resources. See R.bool in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.fraction")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Fraction resources. See R.fraction in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.interpolator")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Interpolator resources. See R.fraction in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.menu")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Menu resources. See R.menu in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.mipmap")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Mipmap resources. See R.mipmap in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.plurals")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Plurals resources. See R.plurals in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.raw")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Raw resources. See R.raw in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.transition")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Transition resources. See R.transition in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.R.xml")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("XML resources. See R.xml in the Android Developer Reference. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Service.foregroundCancel")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v('Puts the service into the "background" state and removes its foreground notification. (New API, supported on Android.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Service.foregroundNotify")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v('Puts the service into the "foreground" state and displays a notification. (New API, supported on Android.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_ALERT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A alert dialog is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_BANNER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A banner is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_ALERT_STYLE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("No banner or alert dialog is presented when the notification is received. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_AUTHORIZED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The application is authorized to post user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_DENIED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The application is not authorized to post user notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_NOT_DETERMINED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The user has not yet made a choice regarding whether the application may postuser notifications. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_ALLOW_IN_CARPLAY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Allow CarPlay to display notifications of this type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_CUSTOM_DISMISS_ACTION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Send dismiss actions to the UNUserNotificationCenter object's delegate for handling. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_SUBTITLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Show the notification's subtitle, even if the user has disabled notification previews for the app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_TITLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Show the notification's title, even if the user has disabled notification previews for the app. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("No options. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_DISABLED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The notification setting is turned off. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_ENABLED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The notification setting is turned on. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The application does not support this notification type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserNotificationCenter")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The top-level App iOS Notification Center module. It is used to control scheduled notificationsand receive details about the system-wide notification settings. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.append")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Appends data to the file identified by this file object. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.copy")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Copies the file identified by this file object to a new path. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.createdAt")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns the creation Date for the file identified by this file object. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.modifiedAt")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns the last modification Date for the file identified by this file object. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.getShowBackgroundLocationIndicator")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Geolocation.showBackgroundLocationIndicator property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.setShowBackgroundLocationIndicator")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Geolocation.showBackgroundLocationIndicator property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.showBackgroundLocationIndicator")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that an indicator be shown when the app makes use of continuous background location updates. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_CLEAR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_COLOR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_COLOR_BURN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_COLOR_DODGE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_COPY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DARKEN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_ATOP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_IN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DESTINATION_OVER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_DIFFERENCE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_EXCLUSION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_HARD_LIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_HUE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_LIGHTEN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_LUMINOSITY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_MULTIPLY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_NORMAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_OVERLAY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_PLUS_DARKER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_PLUS_LIGHTER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SATURATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SCREEN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SOFT_LIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_ATOP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_IN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_SOURCE_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.BLEND_MODE_XOR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with MaskedImage.mode to specify a blend mode. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.MaskedImage")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A control that displays an image composited with a background image or color. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getResultsBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getResultsSeparatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getResultsSeparatorInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getResultsSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getScrollable")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.scrollable property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.resultsBackgroundColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The background color of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.resultsSeparatorColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Separator line color between rows inside search results, as a color name or hex triplet (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.resultsSeparatorInsets")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The insets for search results separators (applies to all cells & iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.resultsSeparatorStyle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The separator style of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.scrollable")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("If "),i("code",[t._v("true")]),t._v(", the tableview can be scrolled. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setResultsBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setResultsSeparatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setResultsSeparatorInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setResultsSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setScrollable")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.scrollable property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getHorizontalMotionEffect")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.horizontalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getVerticalMotionEffect")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.verticalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.horizontalMotionEffect")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Adds a horizontal parallax effect to the view (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setHorizontalMotionEffect")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.horizontalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setVerticalMotionEffect")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.verticalMotionEffect property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.verticalMotionEffect")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Adds a vertical parallax effect to the view (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getZoomLevel")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.zoomLevel property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setZoomLevel")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.zoomLevel property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.zoomLevel")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Manage the zoom-level of the current page. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHomeIndicatorAutoHidden")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.homeIndicatorAutoHidden property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getNavigationWindow")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.navigationWindow property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.homeIndicatorAutoHidden")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Boolean value indicating whether the system is allowed to hide the visual indicator for returning to the Home screen. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.navigationWindow")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The Titanium.UI.iOS.NavigationWindow instance hosting this window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHomeIndicatorAutoHidden")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.homeIndicatorAutoHidden property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createMaskedImage")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.MaskedImage. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("View presented over its parent window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Presented view covers the screen. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.setMODAL_PRESENTATION_OVER_CURRENT_CONTEXT")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.setMODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN property. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_7-2-1"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-1"}},[t._v("#")]),t._v(" 7.2.1")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 7.2.1 as of August 17th, 2018.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Analytics.getOptedOut")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Analytics.optedOut property. (New API, supported on Android, iPhone, iPad and Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Analytics.optedOut")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Allows the user to opt out from Analytics during runtime to comply to GPDR. (New API, supported on Android, iPhone, iPad and Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Analytics.setOptedOut")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Analytics.optedOut property. (New API, supported on Android, iPhone, iPad and Windows Phone.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_7-1-1"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-1"}},[t._v("#")]),t._v(" 7.1.1")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 7.1.1 as of May 2nd, 2018.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.ActionBar.customView")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets a view to be used for a custom navigation mode. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.ActionBar.getCustomView")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.ActionBar.customView property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.ActionBar.setCustomView")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.ActionBar.customView property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.NotificationManager.areNotificationsEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns whether showing notifications is enabled for the application. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.createRecurrenceRule")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates an recurrence pattern for a recurring event.All of the properties for the recurrence rule must be set during creation. The recurrence rule properties cannot be modified. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.getRecurrenceRules")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Calendar.Event.recurrenceRules property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.recurrenceRules")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The recurrence rules for the calendar item. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.save")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Saves changes to an event permanently. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.setRecurrenceRules")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Calendar.Event.recurrenceRules property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.RecurrenceRule")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An object that is used to describe the recurrence pattern for a recurring event. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.getShowsControls")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.setShowsControls")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.showsControls")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Whether or not the receiver shows playback controls. Default is true. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.DrawerLayout.getToolbar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Android.DrawerLayout.toolbar property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.DrawerLayout.setToolbar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Android.DrawerLayout.toolbar property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.DrawerLayout.toolbar")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Toolbar instance to use as a toolbar. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.SearchView.getHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Android.SearchView.hintTextColor property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.SearchView.hintTextColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color of hint text that displays when field is empty. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.SearchView.setHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Android.SearchView.hintTextColor property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.color")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color of the text in this text field, as a color name or hex triplet. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.color property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.hintTextColor property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.hintTextColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint text color to display when the field is empty. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.color property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.hintTextColor property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.close")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the tab group is closed. (Added support for Android.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_7-1-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-0"}},[t._v("#")]),t._v(" 7.1.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 7.1.0 as of March 14th, 2018.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.ActionBar.customView")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets a view to be used for a custom navigation mode. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.ActionBar.getCustomView")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.ActionBar.customView property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.ActionBar.setCustomView")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.ActionBar.customView property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.NotificationManager.areNotificationsEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns whether showing notifications is enabled for the application. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.createRecurrenceRule")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates an recurrence pattern for a recurring event.All of the properties for the recurrence rule must be set during creation. The recurrence rule properties cannot be modified. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.getRecurrenceRules")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Calendar.Event.recurrenceRules property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.recurrenceRules")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The recurrence rules for the calendar item. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.save")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Saves changes to an event permanently. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.setRecurrenceRules")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Calendar.Event.recurrenceRules property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.RecurrenceRule")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An object that is used to describe the recurrence pattern for a recurring event. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.getShowsControls")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.setShowsControls")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.showsControls")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Whether or not the receiver shows playback controls. Default is true. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.DrawerLayout.getToolbar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Android.DrawerLayout.toolbar property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.DrawerLayout.setToolbar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Android.DrawerLayout.toolbar property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.DrawerLayout.toolbar")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Toolbar instance to use as a toolbar. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.SearchView.getHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Android.SearchView.hintTextColor property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.SearchView.hintTextColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color of hint text that displays when field is empty. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.SearchView.setHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Android.SearchView.hintTextColor property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.color")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color of the text in this text field, as a color name or hex triplet. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.color property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.hintTextColor property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.hintTextColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint text color to display when the field is empty. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.color property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.hintTextColor property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.close")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the tab group is closed. (Added support for Android.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_7-0-1"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-0-1"}},[t._v("#")]),t._v(" 7.0.1")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 7.0.1 as of December 21st, 2017.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_DEFAULT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_HIGH")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_LOW")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_MAX")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_MIN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_UNSPECIFIED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.color")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Accent color used behind icon. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.getColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.Notification.color property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.setColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.Notification.color property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.NotificationChannel")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("Module for notification channels. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.QuickSettingsService")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("Android service for creating custom quick settings tiles and handling user's interaction with them. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.TILE_STATE_ACTIVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("QuickSettings tile is active. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.TILE_STATE_INACTIVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("QuickSettings tile is inactive. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.TILE_STATE_UNAVAILABLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("QuickSettings tile is unavailble. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the video should be stretched to fill the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the player should preserve the aspect ratio of video and fit the video within the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the player should preserve the aspect ratio of video and fill the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.getShowsControls")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.setShowsControls")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.showsControls")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Whether or not the receiver shows playback controls. Default is true. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.getIdentifierForAdvertising")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Platform.identifierForAdvertising property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.getIdentifierForVendor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Platform.identifierForVendor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.getIsAdvertisingTrackingEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Platform.isAdvertisingTrackingEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.identifierForAdvertising")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An alphanumeric string unique to each device, used only for serving advertisements. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.identifierForVendor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An alphanumeric string that uniquely identifies a device to the app's vendor. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.isAdvertisingTrackingEnabled")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value that indicates whether the user has limited ad tracking. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.setIdentifierForAdvertising")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Platform.identifierForAdvertising property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_BASELINE_OFFSET")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.type to apply a different baseline to the text. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.allowsMultipleSelectionDuringEditing")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether multiple items of this list view can be selected at the same time while editing the table. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getAllowsMultipleSelectionDuringEditing")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.allowsMultipleSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getSelectedItems")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.selectedItems property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.selectedItems")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns the selected list view items. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setAllowsMultipleSelectionDuringEditing")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.allowsMultipleSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setSelectedItems")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.selectedItems property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.scrollToTop")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Moves the top of the scrollable region into the viewable area. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getHintType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.hintType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.hintType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint type to display on the text field. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setHintType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.hintType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getHintType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.hintType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.hintType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint type to display on the text field. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setHintType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.hintType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getSustainedPerformanceMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.sustainedPerformanceMode property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setSustainedPerformanceMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.sustainedPerformanceMode property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.sustainedPerformanceMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Maintain a sustainable level of performance. (New API, supported on Android.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_7-0-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-0-0"}},[t._v("#")]),t._v(" 7.0.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 7.0.0 as of December 8th, 2017.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_DEFAULT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_HIGH")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_LOW")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_MAX")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_MIN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.IMPORTANCE_UNSPECIFIED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used with NotificationChannel to specify an importance level. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.color")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Accent color used behind icon. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.getColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.Notification.color property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.setColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.Notification.color property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.NotificationChannel")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("Module for notification channels. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.QuickSettingsService")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("Android service for creating custom quick settings tiles and handling user's interaction with them. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.TILE_STATE_ACTIVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("QuickSettings tile is active. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.TILE_STATE_INACTIVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("QuickSettings tile is inactive. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.TILE_STATE_UNAVAILABLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("QuickSettings tile is unavailble. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the video should be stretched to fill the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the player should preserve the aspect ratio of video and fit the video within the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the player should preserve the aspect ratio of video and fill the bounds of layer. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.getShowsControls")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.setShowsControls")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.showsControls property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.showsControls")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Whether or not the receiver shows playback controls. Default is true. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.getIdentifierForAdvertising")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Platform.identifierForAdvertising property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.getIdentifierForVendor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Platform.identifierForVendor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.getIsAdvertisingTrackingEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Platform.isAdvertisingTrackingEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.identifierForAdvertising")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An alphanumeric string unique to each device, used only for serving advertisements. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.identifierForVendor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An alphanumeric string that uniquely identifies a device to the app's vendor. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.isAdvertisingTrackingEnabled")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value that indicates whether the user has limited ad tracking. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Platform.setIdentifierForAdvertising")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Platform.identifierForAdvertising property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_BASELINE_OFFSET")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.type to apply a different baseline to the text. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of an address. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_CITY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a city name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_CITY_STATE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a city name combined with a state name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_LINE1")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of the first line of a street address. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_LINE2")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of the second line of a street address. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ADDRESS_STATE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a state name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_EXPIRATION_DATE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a card expiration date. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_EXPIRATION_DAY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a card expiration day. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_EXPIRATION_MONTH")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a card expiration month. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_EXPIRATION_YEAR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a card expiration year. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_NUMBER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a card number. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_CARD_SECURITY_CODE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a card security code. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_COUNTRY_NAME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a country name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_EMAIL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of an email address. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_FAMILY_NAME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a family name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_GIVEN_NAME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a given name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_JOB_TITLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a job title. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_LOCATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a location, such as a point of interest, an address, or another way to identify a location. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_MIDDLE_NAME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a middle name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NAME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a name. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NAME_PREFIX")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a prefix or title, such as 'Dr.' (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NAME_SUFFIX")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a suffix, such as 'Jr.' (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_NICKNAME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a nickname. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_ORGANIZATION_NAME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of an organization name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_PASSWORD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a password. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_PHONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a telephone number. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_POSTAL_CODE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a postal code. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_SUBLOCALITY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a sublocality. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_URL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of a URL. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AUTOFILL_TYPE_USERNAME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the expectation of an account or login name. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.allowsMultipleSelectionDuringEditing")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether multiple items of this list view can be selected at the same time while editing the table. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getAllowsMultipleSelectionDuringEditing")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.allowsMultipleSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getSelectedItems")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.selectedItems property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.selectedItems")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns the selected list view items. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setAllowsMultipleSelectionDuringEditing")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.allowsMultipleSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setSelectedItems")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.selectedItems property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getRefreshControl")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.refreshControl property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.refreshControl")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("View positioned above the first row that is only revealed when the user drags the scroll view contents down. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.scrollToTop")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Moves the top of the scrollable region into the viewable area. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setRefreshControl")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.refreshControl property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.autofillType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the autofill type for the text area. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getAutofillType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.autofillType property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getHintType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.hintType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.hintType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint type to display on the text field. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setAutofillType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.autofillType property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setHintType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.hintType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.autofillType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the autofill type for the text field. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getAutofillType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.autofillType property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getHintType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.hintType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.hintType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint type to display on the text field. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setAutofillType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.autofillType property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setHintType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.hintType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.extendSafeArea")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies whether the content (subviews) of the window will render inside the safe-area or not.Only used in iOS 11.0 and later. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getExtendSafeArea")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.extendSafeArea property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getLargeTitleDisplayMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.largeTitleDisplayMode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getLargeTitleEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.largeTitleEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getSustainedPerformanceMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.sustainedPerformanceMode property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.largeTitleDisplayMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The mode to use when displaying the title of the navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.largeTitleEnabled")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether the title should be displayed in a large format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setExtendSafeArea")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.extendSafeArea property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setLargeTitleDisplayMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.largeTitleDisplayMode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setLargeTitleEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.largeTitleEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setSustainedPerformanceMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.sustainedPerformanceMode property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.sustainedPerformanceMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Maintain a sustainable level of performance. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_ALWAYS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Always use a larger title when this item is top most. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_AUTOMATIC")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Automatically use the large out-of-line title based on the state of the previous item in the navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_NEVER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Never use a larger title when this item is top most. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),i("p",[t._v("List of all new API notices for SDK 6.x.")]),t._v(" "),i("h2",{attrs:{id:"sdk-6-x"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#sdk-6-x"}},[t._v("#")]),t._v(" SDK 6.x")]),t._v(" "),i("h3",{attrs:{id:"_6-3-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-0"}},[t._v("#")]),t._v(" 6.3.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 6.3.0 as of November 1st, 2017.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.UI.Window.extendSafeArea")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies whether the content (subviews) of the window will render inside the safe-area or not. Only used in iOS 11 and later. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getExtendSafeArea")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.extendSafeArea property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getLargeTitleDisplayMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.largeTitleDisplayMode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getLargeTitleEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.largeTitleEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.largeTitleDisplayMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The mode to use when displaying the title of the navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.largeTitleEnabled")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether the title should be displayed in a large format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setExtendSafeArea")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.extendSafeArea property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setLargeTitleDisplayMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.largeTitleDisplayMode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setLargeTitleEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.largeTitleEnabled property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_ALWAYS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Always use a larger title when this item is top most. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_AUTOMATIC")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Automatically use the large out-of-line title based on the state of the p revious item in the navigation bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_NEVER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Never use a larger title when this item is top most. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_6-2-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-0"}},[t._v("#")]),t._v(" 6.2.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 6.2.0 as of September 13th, 2017.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.Activity.getSupportToolbar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.Activity.supportToolbar property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Activity.setSupportActionBar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets a toolbar instance to be used as an ActionBar. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Activity.setSupportToolbar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.Activity.supportToolbar property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Activity.supportToolbar")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Toolbar instance that serves as ActionBar (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.addAction")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Add an action button to the notification (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.getGroupKey")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.Notification.groupKey property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.getGroupSummary")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.Notification.groupSummary property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.groupKey")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The group key that the notification will belong to. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.groupSummary")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies if this is a group summary notification. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.setGroupKey")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.Notification.groupKey property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.setGroupSummary")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.Notification.groupSummary property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.AUDIO_TYPE_ALARM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for alarms. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.AUDIO_TYPE_MEDIA")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for media playback. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.AUDIO_TYPE_NOTIFICATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for notifications. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.AUDIO_TYPE_RING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for the phone ring. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.AUDIO_TYPE_SIGNALLING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for DTMF tones or beeps. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.AUDIO_TYPE_VOICE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for voice calls. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.audioType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Changes the audio-stream-type. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.getAudioType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.AudioPlayer.audioType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.setAudioType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.AudioPlayer.audioType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioRecorder")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An audio recorder object used for recording audio from the device microphone. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.AUDIO_TYPE_ALARM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for alarms. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.AUDIO_TYPE_MEDIA")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for media playback. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.AUDIO_TYPE_NOTIFICATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for notifications. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.AUDIO_TYPE_RING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for the phone ring. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.AUDIO_TYPE_SIGNALLING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for DTMF tones or beeps. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.AUDIO_TYPE_VOICE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Used to identify the volume of audio streams for voice calls. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.audioType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Changes the audio-stream-type. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.getAudioType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.Sound.audioType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.setAudioType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.Sound.audioType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VIDEO_REPEAT_MODE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Constant for disabling repeat on video playback. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VIDEO_REPEAT_MODE_ONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Constant for repeating one video (i.e., the one video will repeat constantly) during playback. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.getRepeatMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.VideoPlayer.repeatMode property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.repeatMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines how the movie player repeats when reaching the end of playback. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.setRepeatMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Media.VideoPlayer.repeatMode property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.canRecord")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[i("code",[t._v("true")]),t._v(" if the device has a recording input device available. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.createAudioRecorder")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.Media.AudioRecorder. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.getCanRecord")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.canRecord property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.hasAudioRecorderPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the app has audio permissions. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.requestAudioRecorderPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Request the user's permission for audio recording. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Network.Cookie.isValid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns true if the cookie is valid. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getHinttextid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.hinttextid property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getLoginhinttextid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.loginhinttextid property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getPasswordhinttextid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.passwordhinttextid property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.hinttextid")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Key identifying a string from the locale file to use for the hintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.loginhinttextid")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Key identifying a string from the locale file to use for the loginHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.passwordhinttextid")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Key identifying a string from the locale file to use for the passwordHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setHinttextid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.hinttextid property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setLoginhinttextid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.loginhinttextid property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setPasswordhinttextid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.passwordhinttextid property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.DrawerLayout")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An elevated view with rounded corners. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.dimBackgroundForSearch")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean indicating whether the underlying content is dimmed during a search. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getDimBackgroundForSearch")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.dimBackgroundForSearch property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setDimBackgroundForSearch")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.dimBackgroundForSearch property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.dragend")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the scrollable region stops being dragged. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.dragstart")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the scrollable region starts being dragged. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Slider.getSplitTrack")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Slider.splitTrack property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Slider.setSplitTrack")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Slider.splitTrack property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Slider.splitTrack")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Separates the thumbImage from the slider track. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.popToRootWindow")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Closes all windows that are currently opened inside the tab. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.getTabsTranslucent")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TabGroup.tabsTranslucent property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.setTabsTranslucent")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TabGroup.tabsTranslucent property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.tabsTranslucent")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value that indicates whether the tab bar is translucent. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.dimBackgroundForSearch")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean indicating whether the underlying content is dimmed during a search. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getDimBackgroundForSearch")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.dimBackgroundForSearch property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setDimBackgroundForSearch")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.dimBackgroundForSearch property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getHinttextid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.hinttextid property. (New API, supported on Android, iPhone, iPad, Mobile Web and Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.hinttextid")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Key identifying a string from the locale file to use for the hintText property. (New API, supported on Android, iPhone, iPad, Mobile Web and Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setHinttextid")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.hinttextid property. (New API, supported on Android, iPhone, iPad, Mobile Web and Windows Phone.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_6-1-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-0"}},[t._v("#")]),t._v(" 6.1.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 6.1.0 as of May 26th, 2017.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.Notification.setProgress")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Set the progress this notification represents. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Blob.imageAsCompressed")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates a new blob by compressing the underlying image to the specified quality. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Calendar.getSourceIdentifier")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Calendar.Calendar.sourceIdentifier property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Calendar.getSourceTitle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Calendar.Calendar.sourceTitle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Calendar.getSourceType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Calendar.Calendar.sourceType property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Calendar.sourceIdentifier")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Displays the source identifier. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Calendar.sourceTitle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Displays the source title. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Calendar.sourceType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Displays the source type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.SOURCE_TYPE_BIRTHDAYS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A birthday calendar source. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.SOURCE_TYPE_CALDAV")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A calDev calendar source. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.SOURCE_TYPE_EXCHANGE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A microsoft exchange calendar source. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.SOURCE_TYPE_LOCAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A local calendar source. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.SOURCE_TYPE_MOBILEME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A mobileMe calendar source. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.SOURCE_TYPE_SUBSCRIBED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A subscribed calendar source. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.File.createFile")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates a file at the path identified by this file object. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.SystemAlert")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An object for playing system sounds. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.hasAudioRecorderPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the app has audio permissions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.requestAudioRecorderPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Request the user's permission for audio recording. (New API, supported on iPhone, iPad and Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_SUBSCRIPT_STYLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.type to place the text in a lower position. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_SUPERSCRIPT_STYLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.type to place the text in an upper position. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getLoginValue")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.loginValue property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getPasswordValue")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.passwordValue property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getValue")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.value property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.loginValue")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Value of the login text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.passwordValue")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Value of the password text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setLoginValue")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.loginValue property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setPasswordValue")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.passwordValue property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setValue")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.value property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.value")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Value of the text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.backgroundSelectedColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Selected background color of the view, as a color name or hex triplet. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.getBackgroundSelectedColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Button.backgroundSelectedColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.setBackgroundSelectedColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Button.backgroundSelectedColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.allowCreation")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Create a clipboard identified by name if it doesn't exist. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.getAllowCreation")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Clipboard.allowCreation property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.getName")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the "),i("a",{attrs:{href:"http://titanium.ui.clipboard.name/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Titanium.UI.Clipboard.name"),i("OutboundLink")],1),t._v(" property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.getUnique")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Clipboard.unique property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[i("a",{attrs:{href:"http://titanium.ui.clipboard.name/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Titanium.UI.Clipboard.name"),i("OutboundLink")],1)]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Create a new named clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.remove")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Removes the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.setAllowCreation")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Clipboard.allowCreation property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.setName")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the "),i("a",{attrs:{href:"http://titanium.ui.clipboard.name/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Titanium.UI.Clipboard.name"),i("OutboundLink")],1),t._v(" property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.setUnique")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Clipboard.unique property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.unique")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Create a new clipboard identified by a unique system-generated name. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.HIDDEN_BEHAVIOR_GONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Release free space when hiding an object. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.HIDDEN_BEHAVIOR_INVISIBLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Keeps free space when hiding an object. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.getMaxLines")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Label.maxLines property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.getMinimumFontSize")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Label.minimumFontSize property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.maxLines")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Makes the label at most this many lines tall. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.minimumFontSize")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Minimum font size when the font is sized based on the contents. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.setMaxLines")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Label.maxLines property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.setMinimumFontSize")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Label.minimumFontSize property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListItem.getSelectedSubtitleColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListItem.selectedSubtitleColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListItem.selectedSubtitleColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color to use for the item subtitle when the item is selected, as a color name or hex triplet. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListItem.setSelectedSubtitleColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListItem.selectedSubtitleColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListItem.subtitleColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Default text color of the subtitle, as a color name or hex triplet. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.canScroll")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines if the list view can scroll in response to user actions. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.cancelprefetch")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when list items that previously were considered as candidates for pre-fetching were not actually used. Note that this event is only available on iOS 10 and later (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getCanScroll")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.canScroll property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getResultsBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getResultsSeparatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getResultsSeparatorInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getResultsSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.prefetch")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when new list items are prefetched. The items are ordered ascending by geometric distance from the list view. Note that this event is only available on iOS 10 and later. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.resultsBackgroundColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The background color of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.resultsSeparatorColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Separator line color between rows inside search results, as a color name or hex triplet (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.resultsSeparatorInsets")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The insets for search results separators (applies to all cells & iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.resultsSeparatorStyle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The separator style of the search results (iOS-only). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.scrolling")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fires when the list view is scrolling. Calling the "),i("code",[t._v("scrollTo")]),t._v(" methods will not fire this event (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setCanScroll")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.canScroll property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setResultsBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.resultsBackgroundColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setResultsSeparatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.resultsSeparatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setResultsSeparatorInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.resultsSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setResultsSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.resultsSeparatorStyle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_ALIGNMENT_JUSTIFY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Justify align text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.badgeColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("If this item displays a badge, this color will be used for the badge's background. If set to null, the default background color will be used instead. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.getBadgeColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Tab.badgeColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.setBadgeColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Tab.badgeColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.getUnselectedItemTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TabGroup.unselectedItemTintColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.setUnselectedItemTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TabGroup.unselectedItemTintColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.unselectedItemTintColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Unselected items in this tab group will be tinted with this color. Setting this value to null indicates that the tab group should use its default value instead. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.fullscreen")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Leave some space above the keyboard in landscape mode or not. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getFullscreen")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.fullscreen property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.padding property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.padding")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the left and right padding of this TextArea. The text will always be vertically centered. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setFullscreen")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.fullscreen property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.padding property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.fullscreen")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Leave some space above the keyboard in landscape mode or not. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getFullscreen")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.fullscreen property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setFullscreen")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.fullscreen property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getHiddenBehavior")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.hiddenBehavior property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getTouchFeedback")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.touchFeedback property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getTouchFeedbackColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.touchFeedbackColor property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getViewById")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns the matching view of a given view ID. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.hiddenBehavior")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the behavior when hiding an object to release or keep the free space (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setHiddenBehavior")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.hiddenBehavior property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setTouchFeedback")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.touchFeedback property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setTouchFeedbackColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.touchFeedbackColor property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.touchFeedback")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A material design visual construct that provides an instantaneous visual confirmation of touch point. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.touchFeedbackColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Optional touch feedback ripple color. This has no effect unless "),i("code",[t._v("touchFeedback")]),t._v(" is true. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.blacklistedURLs")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An array of url strings to blacklist. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.blacklisturl")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a blacklisted URL is stopped. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.disableContextMenu")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether or not the webview should not be able to display the context menu. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getBlacklistedURLs")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.blacklistedURLs property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getDisableContextMenu")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.disableContextMenu property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getKeyboardDisplayRequiresUserAction")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.keyboardDisplayRequiresUserAction property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getRequestHeaders")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.requestHeaders property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getUserAgent")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.userAgent property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.keyboardDisplayRequiresUserAction")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value indicating whether web content can programmatically display the keyboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.requestHeaders")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets extra request headers for this web view to use on subsequent URL requests. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setBlacklistedURLs")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.blacklistedURLs property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setDisableContextMenu")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.disableContextMenu property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setKeyboardDisplayRequiresUserAction")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.keyboardDisplayRequiresUserAction property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setRequestHeaders")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.requestHeaders property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setUserAgent")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.userAgent property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.userAgent")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The User-Agent header used by the web view when requesting content. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AnimationStyle.CROSS_DISSOLVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A transition that dissolves from one view to the next. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AnimationStyle.FLIP_FROM_BOTTOM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Flip from bottom to top during a transition animation. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AnimationStyle.FLIP_FROM_TOP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Flip from top to bottom during a transition animation. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_6-0-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-0-0"}},[t._v("#")]),t._v(" 6.0.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 6.0.0 as of November 14th, 2016.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.App.Properties.removeAllProperties")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Removes all properties that have been set by the user on runtime, or does nothing otherwise. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The fully formatted address of the item (obtained from MapKit). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getFullyFormattedAddress")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getPostalCode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.postalCode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getSubThoroughfare")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getThoroughfare")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.postalCode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The postal code for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setFullyFormattedAddress")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setPostalCode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.postalCode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setSubThoroughfare")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setThoroughfare")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The sub-location (e.g., street number) for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The location (e.g., street name) for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.handleurl")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a new URL is handled by the application. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_ROLE_CHAIR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee role is chair. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_ROLE_NON_PARTICIPANT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee is not a participant. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_ROLE_OPTIONAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee role is optional. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_ROLE_REQUIRED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee role is required. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_ROLE_UNKNOWN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee role is unknown. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_STATUS_ACCEPTED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee status is accepted. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_STATUS_DECLINED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee status is declined. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_STATUS_DELEGATED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee status is delegated. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_STATUS_IN_PROCESS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee status is in process. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_STATUS_PENDING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee status is pending. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_STATUS_TENTATIVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee status is tentative. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_STATUS_UNKNOWN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee status is unknown. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_TYPE_GROUP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee type is group. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_TYPE_PERSON")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee type is person. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_TYPE_RESOURCE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee type is resource. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_TYPE_ROOM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee type is room. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.ATTENDEE_TYPE_UNKNOWN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Attendee type is unknown. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Attendee")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An object that represents a single attendee of an event. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.attendees")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The list of event attendees. This list will be empty if the event has no attendees. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.Event.getAttendees")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Calendar.Event.attendees property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.canceledOnTouchOutside")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("When this is set to "),i("code",[t._v("true")]),t._v(", the dialog is canceled when touched outside the window's bounds. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getCanceledOnTouchOutside")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.canceledOnTouchOutside property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getPreferred")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.preferred property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.preferred")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Index to define the preferred button. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setCanceledOnTouchOutside")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.canceledOnTouchOutside property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setPreferred")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.preferred property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.hasColors")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Indicates whether any colors are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.hasImages")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Indicates whether any images are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.hasURLs")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Indicates whether any URLs are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.RefreshControl.refreshend")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired in response to a user finished action to refresh the contents of the table view, list view or scroll view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getKeyboardDismissMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.keyboardDismissMode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getRefreshControl")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.refreshControl property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.keyboardDismissMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The manner in which the keyboard is dismissed when a drag begins in the scroll view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.refreshControl")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("View positioned above the first row that is only revealed when the user drags the scroll view contents down. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setKeyboardDismissMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.keyboardDismissMode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setRefreshControl")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.refreshControl property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_ELLIPSIZE_TRUNCATE_CHAR_WRAP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Add ellipses before the first character that doesnt fit. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_ELLIPSIZE_TRUNCATE_CLIP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Lines are simply not drawn past the edge of the text container. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_ELLIPSIZE_TRUNCATE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Disables ellipsizing of the label. The text will be cut off if it is too long. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_ELLIPSIZE_TRUNCATE_WORD_WRAP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Add ellipses at word boundaries, unless the word itself doesn't fit on a single line. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_STYLE_CALLOUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the text style for the Font Object. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_STYLE_TITLE1")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the text style for the Font Object. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_STYLE_TITLE2")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the text style for the Font Object. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TEXT_STYLE_TITLE3")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the text style for the Font Object. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.padding property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.padding")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the left and right padding of this TextArea. The text will always be vertically centered. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.padding property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.padding property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.padding")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the padding of this text field. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setPadding")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.padding property. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHidesBarsOnSwipe")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.hidesBarsOnSwipe property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHidesBarsOnTap")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.hidesBarsOnTap property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHidesBarsWhenKeyboardAppears")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.hidesBarsWhenKeyboardAppears property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getHidesBarsWhenVerticallyCompact")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.hidesBarsWhenVerticallyCompact property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.hidesBarsOnSwipe")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Set this to true to hide the navigation bar on swipe. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.hidesBarsOnTap")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Set this to true to hide the navigation bar on tap. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.hidesBarsWhenKeyboardAppears")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Set this to true to hide the navigation bar when the keyboard appears. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.hidesBarsWhenVerticallyCompact")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Set this to true to hide the navigation bar in a vertically compact environment. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHidesBarsOnSwipe")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.hidesBarsOnSwipe property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHidesBarsOnTap")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.hidesBarsOnTap property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHidesBarsWhenKeyboardAppears")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.hidesBarsWhenKeyboardAppears property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setHidesBarsWhenVerticallyCompact")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.hidesBarsWhenVerticallyCompact property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.getTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.tintColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.NavigationWindow.popToRootWindow")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Closes all windows that are currently opened inside the navigation window. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.setTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.tintColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.tintColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the global tint color of the application. It is inherited by the child views and can be overwritten by them using the "),i("code",[t._v("tintColor")]),t._v(" property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.getHasContentPending")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.WatchSession.hasContentPending property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.getRemainingComplicationUserInfoTransfers")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.WatchSession.remainingComplicationUserInfoTransfers property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.hasContentPending")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if there is more content for the session to deliver. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.remainingComplicationUserInfoTransfers")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The number of calls remaining to "),i("code",[t._v("transferCurrentComplication")]),t._v(" before the system starts transferring the complicationUserInfo as regular userInfos. (New API, supported on iPhone.)")])])])]),t._v(" "),i("p",[t._v("List of all new API notices for SDK 5.x.")]),t._v(" "),i("h2",{attrs:{id:"sdk-5-x"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#sdk-5-x"}},[t._v("#")]),t._v(" SDK 5.x")]),t._v(" "),i("h3",{attrs:{id:"_5-5-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-0"}},[t._v("#")]),t._v(" 5.5.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 5.5.0 as of September 13th, 2016.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.App.iOS.SearchQuery")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A search query object manages the criteria to apply when searching app content that you have previously indexed by using the Core Spotlight APIs. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The fully formatted address of the item (obtained from MapKit). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getFullyFormattedAddress")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getPostalCode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.postalCode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getSubThoroughfare")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.getThoroughfare")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.postalCode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The postal code for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setFullyFormattedAddress")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.fullyFormattedAddress property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setPostalCode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.postalCode property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setSubThoroughfare")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.setThoroughfare")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.subThoroughfare")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The sub-location (e.g., street number) for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet.thoroughfare")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The location (e.g., street name) for the item according to guidelines established by the provider. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.createSearchQuery")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.App.iOS.SearchQuery. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.hasAudioPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the app has audio permissions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.CLIPBOARD_OPTION_EXPIRATION_DATE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies the time and date that you want the system to remove the clipboard items from the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.CLIPBOARD_OPTION_LOCAL_ONLY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies that the clipboard items should not be available to other devices through Handoff. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.getItems")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the items that have been specified earlier using Titanium.UI.Clipboard.setItems. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.hasColors")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Indicates whether any colors are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.hasImages")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Indicates whether any images are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.hasURLs")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Indicates whether any URLs are stored in the clipboard. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard.setItems")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Adds an array of items to a clipboard, and sets privacy options for all included items. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getRefreshControl")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.refreshControl property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.refreshControl")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("View positioned above the first row that is only revealed when the user drags the scroll view contents down. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setRefreshControl")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.refreshControl property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_PROMINENT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_REGULAR")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.getHasContentPending")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.WatchSession.hasContentPending property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.getRemainingComplicationUserInfoTransfers")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.WatchSession.remainingComplicationUserInfoTransfers property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.hasContentPending")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if there is more content for the session to deliver. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.remainingComplicationUserInfoTransfers")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The number of calls remaining to "),i("code",[t._v("transferCurrentComplication")]),t._v(" before the system starts transferring the complicationUserInfo as regular userInfos. (New API, supported on iPhone.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_5-4-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-0"}},[t._v("#")]),t._v(" 5.4.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 5.4.0 as of August 10th, 2016.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.Notification.getStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.Notification.style property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.setStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.Notification.style property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.style")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Style object that can apply a rich notification style. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.hasPermission")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the app has permission access. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.requestPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Request for permission access. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Database.DB.file")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A "),i("code",[t._v("File")]),t._v(" object representing the file where this database is stored. Must only be used for setting file properties. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Database.DB.getFile")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Database.DB.file property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.getAsset")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns a "),i("code",[t._v("Blob")]),t._v(" object representing the asset catalog image identified by the path arguments. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.hasStoragePermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the app has storage permissions. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Filesystem.requestStoragePermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Requests for storage permissions (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.getAudioSessionId")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns the audio session id. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.startVideoCapture")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Starts video capture using the camera specified. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.stopVideoCapture")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Stops video capture using the camera specified. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getHintText")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.hintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getLoginHintText")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.loginHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getPasswordHintText")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.passwordHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.hintText")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint text of the text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.loginHintText")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint text of the login text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.passwordHintText")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint text of the password text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setHintText")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.hintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setLoginHintText")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.loginHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setPasswordHintText")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.passwordHintText property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_CLIP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Raw bit controlling whether the right/bottom edge is clipped to its container, based on the gravity direction being applied. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_PULL_AFTER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Raw bit controlling how the right/bottom edge is placed. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_PULL_BEFORE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Raw bit controlling how the left/top edge is placed. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_SPECIFIED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Raw bit indicating the gravity for an axis has been specified. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_X_SHIFT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Bits defining the horizontal axis. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_AXIS_Y_SHIFT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Bits defining the vertical axis. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_BOTTOM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Push object to the bottom of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_CENTER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_CENTER_HORIZONTAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Place object in the horizontal center of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_CENTER_VERTICAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Place object in the vertical center of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_CLIP_HORIZONTAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Flag to clip the edges of the object to its container along the horizontal axis. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_CLIP_VERTICAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Flag to clip the edges of the object to its container along the vertical axis. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_DISPLAY_CLIP_HORIZONTAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Special constant to enable clipping to an overall display along the horizontal dimension. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_DISPLAY_CLIP_VERTICAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Special constant to enable clipping to an overall display along the vertical dimension. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_END")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Push object to x-axis position at the end of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_FILL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Grow the horizontal and vertical size of the object if needed so it completely fills its container. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_FILL_HORIZONTAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Grow the horizontal size of the object if needed so it completely fills its container. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_FILL_VERTICAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Grow the vertical size of the object if needed so it completely fills its container. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_HORIZONTAL_GRAVITY_MASK")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Binary mask to get the absolute horizontal gravity of a gravity. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_LEFT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Push object to the left of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_NO_GRAVITY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Constant indicating that no gravity has been set (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_RELATIVE_HORIZONTAL_GRAVITY_MASK")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Binary mask for the horizontal gravity and script specific direction bit. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_RELATIVE_LAYOUT_DIRECTION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Raw bit controlling whether the layout direction is relative or not (GRAVITY_START/GRAVITY_END instead of absolute GRAVITY_LEFT/GRAVITY_RIGHT). (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_RIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Push object to the right of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_START")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Push object to x-axis position at the start of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_TOP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Push object to the top of its container, not changing its size. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.GRAVITY_VERTICAL_GRAVITY_MASK")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Binary mask to get the vertical gravity of a gravity. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.getTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Button.tintColor property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.setTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Button.tintColor property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Button.tintColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Button tint color. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ImageView.getTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ImageView.tintColor property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ImageView.setTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ImageView.tintColor property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ImageView.tintColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The view's tintColor. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.getLineSpacing")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Label.lineSpacing property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.lineSpacing")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Line spacing of the text, as a dictionary with the properties "),i("code",[t._v("add")]),t._v(" and "),i("code",[t._v("multiply")]),t._v(". (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Label.setLineSpacing")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Label.lineSpacing property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.allowsSelectionDuringEditing")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether this list View rows can be selected while editing the table. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.disableBounce")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether the scroll-bounce of the list view should be disabled. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getAllowsSelectionDuringEditing")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.allowsSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getDisableBounce")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.disableBounce property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.getListSeparatorInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ListView.listSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.insert")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a list row is inserted by the user. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.listSeparatorInsets")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The insets for the list view header and footer. This property is applicable on iOS 7 and greater. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.scrolling")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fires when the list view is scrolling. Calling the "),i("code",[t._v("scrollTo")]),t._v(" methods will not fire this event (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setAllowsSelectionDuringEditing")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.allowsSelectionDuringEditing property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setDisableBounce")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.disableBounce property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.setListSeparatorInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ListView.listSeparatorInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Notification.getGravity")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Notification.gravity property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Notification.gravity")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines the location at which the notification should appear on the screen. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Notification.setGravity")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Notification.gravity property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.getNativeSpinner")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Picker.nativeSpinner property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.nativeSpinner")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Creates a native Android control for creating a Time Spinner with Type "),i("code",[t._v("Ti.UI.PICKER_TYPE_TIME")]),t._v('. This is invoked rather than the default native "dropdown" style. (New API, supported on Android.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.setNativeSpinner")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Picker.nativeSpinner property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.PickerRow.color")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color of the item text, as a color name or hex triplet. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.PickerRow.getColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.PickerRow.color property. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.PickerRow.setColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.PickerRow.color property. (Added support for Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.currentPageIndicatorColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color for the current page of the paging control, as a color name or hex triplet. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.getCurrentPageIndicatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollableView.currentPageIndicatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.getPageIndicatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollableView.pageIndicatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.insertViewsAt")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Inserts views at the specified position in the views array. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.pageIndicatorColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color of the paging control, as a color name or hex triplet. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.setCurrentPageIndicatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollableView.currentPageIndicatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollableView.setPageIndicatorColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollableView.pageIndicatorColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.cancelButtonTitle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The title of the cancel button when the search bar field is focused. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getCancelButtonTitle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.cancelButtonTitle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.style property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setCancelButtonTitle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.cancelButtonTitle property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.style property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.style")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines the style of the search bar. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.hintTextColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.hintTextColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Hint text color to display when the field is empty. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setHintTextColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.hintTextColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.allowsLinkPreview")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("A Boolean value that determines whether pressing on a link displays a preview of the destination for the link. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.blacklistedURLs")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("An array of url strings to blacklist. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getAllowsLinkPreview")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.allowsLinkPreview property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.getBlacklistedURLs")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.WebView.blacklistedURLs property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.onStopBlacklistedUrl")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a blacklisted Url is stopped (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setAllowsLinkPreview")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.allowsLinkPreview property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.WebView.setBlacklistedURLs")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.WebView.blacklistedURLs property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.hideToolbar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Makes the bottom toolbar invisible. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.showToolbar")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Makes the bottom toolbar visible. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AlertDialogStyle")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the style that can be used for the "),i("code",[t._v("style")]),t._v(" property of Titanium.UI.AlertDialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.AnimationStyle")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the animation styles used for view transitions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_DARK")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_EXTRA_LIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.BLUR_EFFECT_STYLE_LIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with BlurView.effect to specify a blur effect. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.BlurView")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A Titanium.UI.iOS.BlurView object gives you an easy way implement some complex visual effects. The blur effect is applied to every view the blur view is added to by default. You can also place the blur view above other views and all visible views layered under the blur view are blurred as well."),i("br"),i("br"),t._v("For more information on BlurView, please refer to the official Apple documentation. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.ListViewCellSelectionStyle")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the style that can be used for the "),i("code",[t._v("selectionStyle")]),t._v(" property of a ListItem, which is set in the "),i("code",[t._v("properties")]),t._v(" dictionary of either the ListDataItem or ItemTemplate. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.ListViewScrollPosition")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the position value that can be used for the "),i("code",[t._v("position")]),t._v(" property of ListViewAnimationProperties when invoking the ListView's "),i("code",[t._v("scrollToItem")]),t._v(", "),i("code",[t._v("appendSection")]),t._v(","),i("code",[t._v("deleteSectionAt")]),t._v(", "),i("code",[t._v("insertSectionAt")]),t._v(" and "),i("code",[t._v("replaceSectionAt")]),t._v(" methods. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SEARCH_BAR_STYLE_MINIMAL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Titanium.UI.Searchbar.style to change the search bar style. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SEARCH_BAR_STYLE_PROMINENT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Titanium.UI.Searchbar.style to change the search bar style. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.ScrollIndicatorStyle")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the styles available for scrollbars used with Titanium.UI.ScrollView.scrollIndicatorStyle and Titanium.UI.TableView.scrollIndicatorStyle properties. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.StatusBar")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the status bar style. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.Stepper")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A widget used to increment and decrement a value (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SystemButton")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for creating standard iOS system buttons. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SystemButtonStyle")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the system button styles that can be used for the button "),i("code",[t._v("style")]),t._v(" property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.TableViewCellSelectionStyle")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the style that can be used for the "),i("code",[t._v("selectionStyle")]),t._v(" property of Titanium.UI.TableViewRow. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.TableViewScrollPosition")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the position value that can be used for the "),i("code",[t._v("position")]),t._v(" property of Titanium.UI.TableView when invoking "),i("code",[t._v("scrollToIndex")]),t._v(". (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.appBadge")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Value of the badge for the application's springboard icon. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.appSupportsShakeToEdit")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether the shake to edit system-wide capability is enabled. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createBlurView")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.BlurView. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createStepper")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.Stepper. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createSystemButton")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.SystemButton. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.getAppBadge")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.iOS.appBadge property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.getAppSupportsShakeToEdit")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.iOS.appSupportsShakeToEdit property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.setAppBadge")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.iOS.appBadge property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.setAppSupportsShakeToEdit")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.iOS.appSupportsShakeToEdit property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.ACTIVATION_STATE_ACTIVATED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The watch is currently activated. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.ACTIVATION_STATE_INACTIVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The watch is currently inactive. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.ACTIVATION_STATE_NOT_ACTIVATED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The watch is currently not activated. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.activationCompleted")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Called when the session has completed activation. If session state is Titanium.WatchSession.ACTIVATION_STATE_NOT_ACTIVATED there will be an error with more details. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.activationState")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns the current activation state of the watch. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.deactivate")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Called when all events for the previously selected watch has occurred. The session can be re-activated for the now selected watch using activateSession. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.getActivationState")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.WatchSession.activationState property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.getIsActivated")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.WatchSession.isActivated property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.inactive")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Called when the session can no longer be used to modify or add any new transfers and, all interactive messages will be cancelled, but events for background transfers can still fire. This will happen when the selected watch is being changed. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession.isActivated")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the watch is currently activated. (New API, supported on iPhone.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_5-2-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-0"}},[t._v("#")]),t._v(" 5.2.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 5.2.0 as of February 22nd, 2016.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Calendar.calendarAuthorization")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns an authorization constant indicating if the application has access to the events in the EventKit. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.getCalendarAuthorization")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Calendar.calendarAuthorization property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.CAMERA_AUTHORIZATION_UNKNOWN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Constant specifying that app is not yet authorized to use camera. This is available on iOS7 and later. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.MEDIA_TYPE_LIVEPHOTO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Media type constant for live photo media. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.cameraAuthorization")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Returns the authorization status for the camera. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.getCameraAuthorization")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Media.cameraAuthorization property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getKeyboardAppearance")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.keyboardAppearance property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.keyboardAppearance")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Keyboard appearance to be displayed when the text field inside the dialog is focused. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setKeyboardAppearance")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.keyboardAppearance property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_CHANGE_BOUNDS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Captures layout bounds of target views before and after the scene change and animates those changes during the transition. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_CHANGE_CLIP_BOUNDS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Captures the clip bounds before and after the scene change and animates those changes during the transition. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_CHANGE_IMAGE_TRANSFORM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Captures an ImageView's matrix before and after the scene change and animates it during the transition. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_CHANGE_TRANSFORM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Captures scale and rotation for Views before and after the scene change and animates those changes during the transition. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_EXPLODE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Moves views in or out from the edges of the scene. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_FADE_IN")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Fades in the views. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_FADE_OUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Fades out the views. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Resets transition to platform default. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_SLIDE_BOTTOM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Moves views to bottom. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_SLIDE_LEFT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Moves views to left. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_SLIDE_RIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Moves views to right. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.TRANSITION_SLIDE_TOP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Moves views to top. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_APPEARANCE_DARK")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use the platform-specific dark keyboard appearance. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_APPEARANCE_LIGHT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use the platform-specific light keyboard appearance. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_ASCII")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use an ASCII keyboard, with the standard keyboard layout. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_DECIMAL_PAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard with decimal numbers only, with the pad keyboard layout. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_DEFAULT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use the default keyboard, depending on the platform. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_EMAIL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard suitable for composing email, with the standard keyboard layout. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_NAMEPHONE_PAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard suitable for entering names and phone numbers, with the pad keyboard layout. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard with numbers and punctuation only, with the standard keyboard layout. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_NUMBER_PAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard with a number pad only, with the pad keyboard layout. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_PHONE_PAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard with a phone-style number pad, with the pad keyboard layout. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_TWITTER")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard optimized for twitter text entry, with easy access to the @ and (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_URL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard optimized for entering URLs, with the standard keyboard layout. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.KEYBOARD_TYPE_WEBSEARCH")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use a keyboard optimized for web search terms and URL entry. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListItem.canInsert")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Specifies if the item can be inserted by a user initiated action. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.dragend")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the user stops dragging the list view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.dragstart")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the user starts dragging the list view. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.backgroundColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Background color of the picker, as a color name or hex triplet. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.dateTimeColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the text color of date- and time-pickers. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.getBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Picker.backgroundColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.getDateTimeColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Picker.dateTimeColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.setBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Picker.backgroundColor property. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.setDateTimeColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Picker.dateTimeColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ProgressBar.getTrackTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ProgressBar.trackTintColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ProgressBar.setTrackTintColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ProgressBar.trackTintColor property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ProgressBar.trackTintColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The color shown for the portion of the progress bar that is not filled. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.RETURNKEY_CONTINUE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v('Set the return key text to "Continue". (New API, supported on iPhone and iPad.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.getKeyboardAppearance")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.SearchBar.keyboardAppearance property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.keyboardAppearance")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines the appearance of the keyboard to be displayed the field is focused. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.SearchBar.setKeyboardAppearance")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.SearchBar.keyboardAppearance property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TABLE_VIEW_SEPARATOR_STYLE_NONE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The row divider is hidden. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TABLE_VIEW_SEPARATOR_STYLE_SINGLE_LINE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The row divider is shown as a single line. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.getIconInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Tab.iconInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.iconInsets")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The icon inset or outset for each edge. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.selected")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the tab is selected. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.setIconInsets")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Tab.iconInsets property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Tab.unselected")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the tab is no longer selected. (New API, supported on Android, iPhone, iPad and Mobile Web.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getMaxClassname")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.maxClassname property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.getSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TableView.separatorStyle property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.maxClassname")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Max number of row class names. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.separatorStyle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Separator style constant. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setMaxClassname")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.maxClassname property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TableView.setSeparatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TableView.separatorStyle property. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getInputType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.inputType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.inputType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Input type to accept in thetext field. Also influences the Keyboard type to display. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setInputType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.inputType property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.addSharedElement")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Adds a common UI element to participate in window transition animation. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.getSwipeToClose")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Window.swipeToClose property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.removeAllSharedElements")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Clears all added shared elements. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.setSwipeToClose")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Window.swipeToClose property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Window.swipeToClose")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Boolean value indicating if the user should be able to close a window using a swipe gesture. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LIVEPHOTO_PLAYBACK_STYLE_FULL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Plays back the entire motion and sound content of the Live Photo, including transition effects at the start and end. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LIVEPHOTO_PLAYBACK_STYLE_HINT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Plays back only a brief section of the motion content of the Live Photo, without sound. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.LivePhotoView")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A view to display a Live Photo object introduced in iOS 9.1. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createLivePhotoView")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.LivePhotoView. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iPad.Popover.backgroundColor")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the background color of the popover. (New API, supported on iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iPad.Popover.getBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.iPad.Popover.backgroundColor property. (New API, supported on iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iPad.Popover.setBackgroundColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.iPad.Popover.backgroundColor property. (New API, supported on iPad.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_5-1-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-0"}},[t._v("#")]),t._v(" 5.1.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 5.1.0 as of November 20th, 2015.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_BEHAVIOR_DEFAULT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("There will not appear a text input. Use with the behavior property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.USER_NOTIFICATION_BEHAVIOR_TEXTINPUT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("There will appear a text input to answer an action outside the application. Use with the behavior property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserNotificationAction.behavior")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Selects whether to show a text input outside the application to reply to a notification. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserNotificationAction.getBehavior")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.UserNotificationAction.behavior property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserNotificationAction.setBehavior")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.App.iOS.UserNotificationAction.behavior property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.shortcutitemclick")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a user taps the Application Shortcut. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Buffer")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("Buffer is a mutable, resizable container for raw data. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.hasCalendarPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the app has calendar access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Calendar.requestCalendarPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Requests for calendar access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Contacts")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The top-level Contacts module, used for accessing and modifying the system contacts address book. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Contacts.Group")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An object which represents a group in the system contacts address book. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Contacts.Person")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("An object that represents a contact record for a person or organization in the system contacts address book. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.hasLocationPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the app has location access. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.requestLocationPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Requests for location access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.IOStream")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("IOStream is the interface that all stream types implement. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.hasCameraPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Returns "),i("code",[t._v("true")]),t._v(" if the app has camera access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.requestCameraPermissions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Requests for camera access (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ActivityIndicatorStyle")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A set of constants for the styles available for Titanium.UI.ActivityIndicator objects. (Added support for iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getLoginPlaceholder")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.loginPlaceholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getPasswordPlaceholder")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.passwordPlaceholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.getPlaceholder")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.AlertDialog.placeholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.loginPlaceholder")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Placeholder of the login text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.passwordPlaceholder")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Placeholder of the password text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.placeholder")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Placeholder of the text field inside the dialog. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setLoginPlaceholder")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.loginPlaceholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setPasswordPlaceholder")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.passwordPlaceholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.AlertDialog.setPlaceholder")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.AlertDialog.placeholder property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Android.CardView")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A Card view with a rounded corner background and shadow. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A control used to select one or more fixed values. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.PickerColumn")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A picker column, representing a selectable group of items in a Titanium.UI.Picker. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.PickerRow")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A picker row, representing a selectable item in a Titanium.UI.Picker. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.selected")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a tab is selected. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TabGroup.unselected")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when a tab is unselected. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getPreviewContext")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.previewContext property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.previewContext")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v('The preview context used in the 3D-Touch feature "Peek and Pop". (New API, supported on iPhone.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setPreviewContext")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.previewContext property. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createPicker")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.Picker. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createPickerColumn")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.PickerColumn. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.createPickerRow")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.PickerRow. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.ApplicationShortcuts")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The Home screen quick action API is for adding shortcuts to your app icon that anticipate and accelerate a user's interaction with your app. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.PREVIEW_ACTION_STYLE_DEFAULT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The normal style for preview actions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.PREVIEW_ACTION_STYLE_DESTRUCTIVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The destructive style for preview actions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.PREVIEW_ACTION_STYLE_SELECTED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The selected style for preview actions. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.PreviewAction")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v('A PreviewAction provides options to configure action used by the iOS9 3D-Touch feature "Peek and Pop". (New API, supported on iPhone.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.PreviewActionGroup")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v('A PreviewActionGroup provides options to configure a group of actions used by the iOS9 3D-Touch feature "Peek and Pop". (New API, supported on iPhone.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.PreviewContext")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v('A PreviewContext provides options to configure the iOS9 3D-Touch feature "Peek and Pop". (New API, supported on iPhone.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_ADD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_ALARM")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_AUDIO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_BOOKMARK")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CAPTURE_PHOTO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CAPTURE_VIDEO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CLOUD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_COMPOSE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CONFIRMATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_CONTACT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_DATE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_FAVORITE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_HOME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_INVITATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_LOCATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_LOVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_MAIL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_MARK_LOCATION")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_MESSAGE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_PAUSE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_PLAY")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_PROHIBIT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_SEARCH")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_SHARE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_SHUFFLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_TASK")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_TASK_COMPLETED")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_TIME")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.SHORTCUT_ICON_TYPE_UPDATE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Number that represents the icon used for the application shortcut (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createApplicationShortcuts")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.ApplicationShortcuts. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createPreviewAction")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.PreviewAction. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createPreviewActionGroup")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.PreviewActionGroup. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.createPreviewContext")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.UI.iOS.PreviewContext. (New API, supported on iPhone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.forceTouchSupported")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v('Determines if the 3D-Touch capability "Force Touch" is supported ('),i("code",[t._v("true")]),t._v(") or not ("),i("code",[t._v("false")]),t._v(") by the device. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.getForceTouchSupported")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.iOS.forceTouchSupported property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.iOS.setForceTouchSupported")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.iOS.forceTouchSupported property. (New API, supported on iPhone and iPad.)")])])])]),t._v(" "),i("h3",{attrs:{id:"_5-0-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-0-0"}},[t._v("#")]),t._v(" 5.0.0")]),t._v(" "),i("p",[t._v("The following APIs are new or have expanded platform support in Release 5.0.0 as of September 16th, 2015.")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("API")]),t._v(" "),i("th",[t._v("Type")]),t._v(" "),i("th",[t._v("Notes")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("Titanium.Android.Notification.getLargeIcon")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Android.Notification.largeIcon property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.largeIcon")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Add a large icon to the notification (and the ticker on some devices) specified as an Android resource ID, or a local URL to a density-specific image. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Android.Notification.setLargeIcon")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Android.Notification.largeIcon property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableIndex")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The SearchableIndex module is used to add or remove Ti.App.iOS.SearchableItem objects from the device search index. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItem")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("Used to create a unique object containing all of the search information that will appear in the device search index. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.SearchableItemAttributeSet")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The SearchableItemAttributeSet module defines metadata properties for SearchItem and UserActivity objects. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_APPLE_ICNS")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Mac OS icon images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_APPLE_PROTECTED_MPEG4_AUDIO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for protected MPEG-4 audio (iTunes music store format). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_AUDIO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for all audio content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_BMP")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Windows bitmap images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_FLAT_RTFD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Rich Text with content embedding, pasteboard format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_GIF")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for GIF images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_HTML")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for HTML. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_ICO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Windows icon images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_IMAGE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for all image types. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_JPEG")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for JPEG images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_JPEG2000")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for JPEG 2000 images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_MOVIE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for all audiovisual content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_MP3")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for MP3 audio. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_MPEG")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for MPEG-1 and MPEG-2 content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_MPEG4")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for MPEG-4 content. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_MPEG4_AUDIO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for MPEG-4 audio. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_PDF")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for PDF data. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_PICT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for PICT images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_PLAIN_TEXT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for a plain text type, equivalent to MIME type text/plain. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_PNG")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for PNG images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_QUICKTIME_IMAGE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for QuickTime images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_QUICKTIME_MOVIE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for QuickTime movies. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_RTF")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Rich Text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_RTFD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Rich Text Format Directory, that is, Rich Text with content embedding, on-disk format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_TEXT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for all text types. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_TIFF")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for TIFF images. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_TXN_TEXT_AND_MULTIMEDIA_DATA")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for MLTE (Textension) format for mixed text and multimedia data. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_UTF16_EXTERNAL_PLAIN_TEXT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Unicode-16 with byte-order mark (BOM), or if BOM is not present, an external representation byte order (big-endian). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_UTF16_PLAIN_TEXT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Unicode-16, native byte order, with an optional byte-order mark (BOM). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_UTF8_PLAIN_TEXT")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for Unicode-8 plain text type. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_VIDEO")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for all video content without audio. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_WEB_ARCHIVE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for WebKit webarchive format. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UTTYPE_XML")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Uniform type identifier for XML. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.UserActivity")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("The UserActivity module is used to enable device Handoff and to create User Activities. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.continueactivity")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when iOS continueactivity calls "),i("code",[t._v("continueUserActivity")]),t._v(". (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.createSearchableIndex")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.App.iOS.SearchableIndex. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.createSearchableItem")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.App.iOS.SearchableItem. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.createSearchableItemAttributeSet")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.App.iOS.SearchableItemAttributeSet. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.createUserActivity")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Creates and returns an instance of Titanium.App.iOS.UserActivity. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.getSupportedUserActivityTypes")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.App.iOS.supportedUserActivityTypes property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.App.iOS.supportedUserActivityTypes")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Provides an Array of the NSUserActivityTypes keys defined within your Titanium project. (available on iOS 8 and later). (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Contacts.getGroupByIdentifier")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the group with the specified identifier. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Contacts.getPersonByIdentifier")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the person with the specified identifier. (New API, supported on Android, iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Contacts.Person.identifier")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Identifier of the person. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.allowsBackgroundLocationUpdates")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines if the app can do background location updates. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.getAllowsBackgroundLocationUpdates")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Geolocation.allowsBackgroundLocationUpdates property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Geolocation.setAllowsBackgroundLocationUpdates")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Geolocation.allowsBackgroundLocationUpdates property. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.change")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the state of the playback changes. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.complete")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the audio has finished playing. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.AudioPlayer.error")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when there's an error. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.change")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the state of the playback changes. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.complete")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the audio has finished playing. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.Sound.error")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when an error occurs while playing the audio. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.complete")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when movie playback ends or a user exits playback. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Media.VideoPlayer.error")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when movie playback encounters an error. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Network.Cookie.getMaxAge")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.Network.Cookie.maxAge property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Network.Cookie.maxAge")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Sets the Max-Age attribute of a Cookie, in delta-seconds. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.Network.Cookie.setMaxAge")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.Network.Cookie.maxAge property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.type to wrap and truncate the text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_CHAR_WRAPPING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.value to wrap words at word boundaries. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_CLIPPING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.value to set lines to not draw past the edge of the text container. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_HEAD")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.value to use ellipsis glyph at the beginning of the line for missing text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_MIDDLE")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.value to use ellipsis glyph at the middle of the line for missing text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_TAIL")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.value to use ellipsis glyph at the end of the line for missing text. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ATTRIBUTE_LINE_BREAK_BY_WORD_WRAPPING")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Use with Attribute.value to wrap words at word boundaries. (New API, supported on iPhone and iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Clipboard")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("A module used for accessing clipboard data. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.noresults")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the search using either searchView or searchText has no results. (Added support for Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ListView.editaction")]),t._v(" "),i("td",[t._v("event")]),t._v(" "),i("td",[t._v("Fired when the user interacts with one of the custom edit actions.")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.getSelectionOpens")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Picker.selectionOpens property. (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Picker.selectionOpens")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether calling the method "),i("code",[t._v("setSelectedRow")]),t._v(" opens when called (New API, supported on Android.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.canCancelEvents")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether this scroll view can cancel subview touches in order to scroll instead. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.contentOffset")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("X and Y coordinates to which to reposition the top-left point of the scrollable region. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.decelerationRate")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("The deceleration rate of the ScrollView. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.disableBounce")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether scroll bounce of the scrollable region is enabled. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getCanCancelEvents")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.canCancelEvents property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getContentOffset")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.contentOffset property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getDecelerationRate")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.decelerationRate property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getDisableBounce")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.disableBounce property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getHorizontalBounce")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.horizontalBounce property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getMaxZoomScale")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.maxZoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getMinZoomScale")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.minZoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getOverScrollMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.overScrollMode property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getScrollIndicatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.scrollIndicatorStyle property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getScrollType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.scrollType property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getScrollsToTop")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.scrollsToTop property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getVerticalBounce")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.verticalBounce property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.getZoomScale")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.ScrollView.zoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.horizontalBounce")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether horizontal scroll bounce of the scrollable region is enabled. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.maxZoomScale")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Maximum scaling factor of the scrollable region and its content. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.minZoomScale")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Minimum scaling factor of the scrollable region and its content. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.overScrollMode")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines the behavior when the user overscolls the view. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.scrollIndicatorStyle")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Style of the scrollbar. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.scrollType")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Limits the direction of the scrollable region, overriding the deduced setting. Set to"),i("code",[t._v("horizontal")]),t._v(" or "),i("code",[t._v("vertical")]),t._v(". (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.scrollsToTop")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Controls whether the scroll-to-top gesture is effective. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setCanCancelEvents")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.canCancelEvents property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setContentOffset")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.contentOffset property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setDecelerationRate")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.decelerationRate property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setDisableBounce")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.disableBounce property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setHorizontalBounce")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.horizontalBounce property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setMaxZoomScale")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.maxZoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setMinZoomScale")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.minZoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setOverScrollMode")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.overScrollMode property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setScrollIndicatorStyle")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.scrollIndicatorStyle property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setScrollType")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.scrollType property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setScrollsToTop")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.scrollsToTop property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setVerticalBounce")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.verticalBounce property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.setZoomScale")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.ScrollView.zoomScale property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.verticalBounce")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether vertical scroll bounce of the scrollable region is enabled. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.ScrollView.zoomScale")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Scaling factor of the scroll view's content. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.color")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Color to use for switch text, as a color name or hex triplet. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.enabled")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determines whether the switch is enabled. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.getColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Switch.color property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.getEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Switch.enabled property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.getTitleOff")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Switch.titleOff property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.getTitleOn")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.Switch.titleOn property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.setColor")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Switch.color property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.setEnabled")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Switch.enabled property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.setTitleOff")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Switch.titleOff property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.setTitleOn")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.Switch.titleOn property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.titleOff")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v('Text to display on the switch in its "off" state, when the toggle button style is in use. (Added support for Windows Phone.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.Switch.titleOn")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v('Text to display on the switch in its "on" state, when the toggle button style is in use. (Added support for Windows Phone.)')])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.getShowUndoRedoActions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextArea.showUndoRedoActions property. (New API, supported on iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.setShowUndoRedoActions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextArea.showUndoRedoActions property. (New API, supported on iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextArea.showUndoRedoActions")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determinates if the undo and redo buttons on the left side of the keyboard should be displayed or not. Only valid on iOS9 and above. (New API, supported on iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.getShowUndoRedoActions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.TextField.showUndoRedoActions property. (New API, supported on iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.setShowUndoRedoActions")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.TextField.showUndoRedoActions property. (New API, supported on iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.TextField.showUndoRedoActions")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Determinates if the undo and redo buttons on the left side of the keyboard should be displayed or not. Only valid on iOS9 and above. (New API, supported on iPad.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.backgroundImage")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Background image for the view, specified as a local file path or URL. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getBackgroundImage")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.backgroundImage property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.getZIndex")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Gets the value of the Titanium.UI.View.zIndex property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setBackgroundImage")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.backgroundImage property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.setZIndex")]),t._v(" "),i("td",[t._v("method")]),t._v(" "),i("td",[t._v("Sets the value of the Titanium.UI.View.zIndex property. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.UI.View.zIndex")]),t._v(" "),i("td",[t._v("property")]),t._v(" "),i("td",[t._v("Z-index stack order position, relative to other sibling views. (Added support for Windows Phone.)")])]),t._v(" "),i("tr",[i("td",[t._v("Titanium.WatchSession")]),t._v(" "),i("td",[t._v("object")]),t._v(" "),i("td",[t._v("Used to enable data and file transfers between a watchOS and iOS application. (New API, supported on iPhone.)")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);