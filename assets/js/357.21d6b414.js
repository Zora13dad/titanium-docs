(window.webpackJsonp=window.webpackJsonp||[]).push([[357],{1499:function(e,t,n){"use strict";n.r(t);var a=n(21),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"modules-encrypteddatabase"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#modules-encrypteddatabase"}},[e._v("#")]),e._v(" Modules.EncryptedDatabase")]),e._v(" "),n("TypeHeader"),e._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("p",[e._v("This module exposes the same API as Titanium.Database, but it encrypts all content (even the schema) using\na password you specify.")]),e._v(" "),n("p",{staticClass:"note"},[e._v("Note: This feature requires a Pro or Enterprise subscription. More infos "),n("a",{attrs:{href:"https://www.appcelerator.com/pricing/",target:"_blank"}},[e._v("here")]),e._v("!")]),e._v(" "),n("h3",{attrs:{id:"getting-started"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[e._v("#")]),e._v(" Getting Started")]),e._v(" "),n("ul",[n("li",[e._v("View the "),n("a",{attrs:{href:"http://docs.appcelerator.com/platform/latest/#!/guide/Using_Titanium_Modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using Titanium Modules"),n("OutboundLink")],1),e._v("\ndocument for instructions on getting started with using this module in your application.")])]),e._v(" "),n("h3",{attrs:{id:"accessing-the-module"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#accessing-the-module"}},[e._v("#")]),e._v(" Accessing the Module")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Use "),n("code",[e._v("require")]),e._v(" to access this module from JavaScript:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("var encryptedDatabase = require('appcelerator.encrypteddatabase');\n")])])]),n("p",[e._v("The "),n("code",[e._v("encryptedDatabase")]),e._v(" variable is a reference to the Module object.")])])]),e._v(" "),n("h3",{attrs:{id:"example-applications"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example-applications"}},[e._v("#")]),e._v(" Example applications")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Example applications are located in the "),n("code",[e._v("example")]),e._v(" folder of the module:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("ToDo Alloy")]),e._v(" demonstrates how to use this module with Alloy.")]),e._v(" "),n("li",[n("code",[e._v("JSON1-Extension")]),e._v(" demonstrates how to use the SQLite JSON1 extension")])])])]),e._v(" "),n("h2",{attrs:{id:"examples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),n("h3",{attrs:{id:"open-an-encrypted-database"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#open-an-encrypted-database"}},[e._v("#")]),e._v(" Open an encrypted database")]),e._v(" "),n("p",[e._v("var DB = require('appcelerator.encrypteddatabase');\nvar instance = null;\nvar dataTofetch = null;\nvar win = Ti.UI.createWindow({\nbackgroundColor: 'white'\n});\nwin.addEventListener('open', function () {\ninit();\nsetup();\ninsert();\nfetch();\ncloseDB();\n});\nvar indicator = Ti.UI.createActivityIndicator({\ncolor: 'green',\nmessage: 'Upgrading database ...',\nstyle: Ti.UI.ActivityIndicatorStyle.DARK,\ntop: 100,\nheight: Ti.UI.SIZE,\nwidth: Ti.UI.SIZE\n});\nfunction init() {\n// iOS: check if cipher upgrade is required\nif (Ti.Platform.osname === 'iphone' || Ti.Platform.osname === 'ipad') {\nif (DB.isCipherUpgradeRequired) {\n// check if cipher upgrade required.\nif (DB.isCipherUpgradeRequired('test.db')) {\nTi.API.info('upgrade of database required');\nindicator.show();\nDB.password = 'secret';\nTi.API.info('Opening DB ...');\ninstance = DB.open('test.db');\nindicator.hide();\nTi.API.info('database upgrade complete');\nreturn;\n}\n}\n}\nDB.password = 'secret';\nTi.API.info('Opening DB ...');\ninstance = DB.open('test.db');\n}\nfunction setup() {\ninstance.execute('CREATE TABLE IF NOT EXISTS testtable(id integer PRIMARY KEY);');\ninstance.execute('INSERT OR IGNORE INTO testtable(id) VALUES (1);');\n}\nfunction insert() {\nvar dataToInsertHandle = instance.execute('SELECT id FROM testtable ORDER BY id DESC LIMIT 1;');\nvar dataToInsert = null;\nif(dataToInsertHandle.isValidRow()) {\ndataToInsert = (dataToInsertHandle.fieldByName('id') + 1);\ndataTofetch = dataToInsert;\n}\ninstance.execute('INSERT OR IGNORE INTO testtable(id) VALUES (' + dataToInsert + ');');\n}\nfunction fetch() {\nvar rowValue = null;\nvar rowHandle = instance.execute('SELECT * FROM testtable WHERE id=' + dataTofetch + ';');\nif (rowHandle.isValidRow()) {\nrowValue = rowHandle.fieldByName('id');\n}\nalert('Fetched Data: ' + rowValue);\n}\nfunction closeDB() {\ninstance.close();\n}\nwin.add(indicator);\nwin.open();")]),e._v(" "),n("h3",{attrs:{id:"use-the-json1-extension-to-encode-decode-json-based-content"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#use-the-json1-extension-to-encode-decode-json-based-content"}},[e._v("#")]),e._v(" Use the JSON1-extension to encode/decode JSON-based content")]),e._v(" "),n("p",[e._v("var DB = require('appcelerator.encrypteddatabase');")]),e._v(" "),n("p",[e._v("var win = Ti.UI.createWindow({ backgroundColor: 'white' });\nvar btn = Ti.UI.createButton({ title: 'Trigger' });")]),e._v(" "),n("p",[e._v("btn.addEventListener('click', accessDatabase);")]),e._v(" "),n("p",[e._v("win.add(btn);\nwin.open();")]),e._v(" "),n("p",[e._v("function accessDatabase() {\nDB.password = 'secret';")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("Ti.API.info('Opening DB ...');\nvar instance = DB.open('test.db');\n\ninstance.execute('CREATE TABLE IF NOT EXISTS user(name string, phone string);');\ninstance.execute('INSERT into user (name, phone) VALUES(\"oz\", json(\\'{\"cell\":\"+491765\", \"home\":\"+498973\"}\\'));');\n\nvar dataToInsertHandle = instance.execute('select user.phone from user where user.name==\\'oz\\'');\nvar result = dataToInsertHandle.isValidRow() ? dataToInsertHandle.fieldByName('phone') : null;\n\nalert('Fetched data: ' + result);\nTi.API.info('Closing DB ...');\ninstance.close();\n")])])]),n("p",[e._v("}")]),e._v(" "),n("ApiDocs")],1)}),[],!1,null,null,null);t.default=s.exports}}]);