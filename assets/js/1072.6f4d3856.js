(window.webpackJsonp=window.webpackJsonp||[]).push([[1072],{1235:function(t,s,a){"use strict";a.r(s);var e=a(21),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"windows-module-architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows-module-architecture"}},[t._v("#")]),t._v(" Windows Module Architecture")]),t._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[t._v("The Titanium SDK is based on a modular architecture, which can be utilized to extend the SDK by building modules. The module architecture contains the following key interface components:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("em",[t._v("Module")])]),t._v(" : A base class that represents the native binding between your JavaScript code and native code")])]),t._v(" "),a("li",[a("p",[a("strong",[a("em",[t._v("View")])]),t._v(" : The visual representation of a UI component which Titanium can render")])])]),t._v(" "),a("p",[t._v("To return visual data between JavaScript and native code, create a View. The View represents is responsible for exposing the APIs and events that the View supports.")]),t._v(" "),a("p",[t._v("To return non-visual data between JavaScript and native code, create a Module. The Module knows how to handle any method and property, and dispatching and firing events.")]),t._v(" "),a("p",[t._v("These components require special class names and method signatures. Each components is described in further detail below.")]),t._v(" "),a("h2",{attrs:{id:"module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[t._v("#")]),t._v(" Module")]),t._v(" "),a("p",[t._v("A Module is a class that provides an API point with a particular ID. That ID can then be used to "),a("code",[t._v("require")]),t._v(" the module from JavaScript.")]),t._v(" "),a("p",[t._v("All modules must extend the "),a("code",[t._v("Titanium::Module")]),t._v(" and "),a("code",[t._v("JSExport")]),t._v(" class .")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.hpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Titanium/Module.hpp"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("COMEXAMPLETEST_EXPORT")]),t._v(" Test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" Titanium"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Module constructor should call "),a("code",[t._v("Titanium::Module")]),t._v(" constructor with module id that specifies the identifier used with "),a("code",[t._v("require")]),t._v(" to import the module.")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.cpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ComExampleTest.hpp"')])]),t._v("\n\nTest"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" JSContext"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" js_context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" TITANIUM_NOEXCEPT\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Titanium"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("js_context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("In this case, the JavaScript to require the module would look like this:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("A module can also have a parent module: for instance "),a("a",{attrs:{href:"https://github.com/appcelerator/titanium_mobile/blob/master/android/modules/ui/src/java/ti/modules/titanium/ui/UIModule.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Titanium.UI"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://github.com/appcelerator/titanium_mobile/blob/master/android/modules/app/src/java/ti/modules/titanium/app/AppModule.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Titanium.App"),a("OutboundLink")],1),t._v(" are children of the "),a("a",{attrs:{href:"https://github.com/appcelerator/titanium_mobile/blob/master/android/titanium/src/java/ti/modules/titanium/TitaniumModule.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Titanium"),a("OutboundLink")],1),t._v(" module.")]),t._v(" "),a("h3",{attrs:{id:"module-lifecycle-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-lifecycle-events"}},[t._v("#")]),t._v(" Module Lifecycle Events")]),t._v(" "),a("p",[t._v("The module provides several places for you to hook into the application's lifecycle.")]),t._v(" "),a("p",[t._v("Use "),a("code",[t._v("postInitialize")]),t._v(" method to declare a method to be called when the module object is created. This is optional and is only required if you have any module specific initialization, such as initializing variables that is required by the module. This method is called after module object initialization. This method could be called multiple times, "),a("em",[t._v("after")]),t._v(" your module object is actually created, and "),a("em",[t._v("before")]),t._v(" module is called as a constructor.")]),t._v(" "),a("p",[t._v("Declare "),a("code",[t._v("postInitialize")]),t._v(" with "),a("code",[t._v("override")]),t._v(" specifier in the header:")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.hpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Titanium/Module.hpp"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("COMEXAMPLETEST_EXPORT")]),t._v(" Test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" Titanium"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postInitialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JSObject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" js_object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Override "),a("code",[t._v("postInitialize")]),t._v(" in the implementation:")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.cpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postInitialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JSObject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" js_object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is called when JavaScript object is created for this module.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Could be called multiple times, after module object is actually created, and before module is called as a constructor.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For example:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var Test = require('com.example.test'); // <- postInitialize")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var test = new Test(); // <- postInitialize")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If you only need to hook JavaScript constructor, use "),a("code",[t._v("postCallAsConstructor")]),t._v(" method to declare a method to be called when the module constructor is called. This is optional and is only required if you have any module instance specific initialization, such as initializing variables that is required by the instance. This method is called during module constructor. This method is called only once "),a("em",[t._v("after")]),t._v(" module is called as a constructor.")]),t._v(" "),a("p",[t._v("Declare "),a("code",[t._v("postCallAsConstructor")]),t._v(" with "),a("code",[t._v("override")]),t._v(" specifier in the header:")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.hpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Titanium/Module.hpp"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("COMEXAMPLETEST_EXPORT")]),t._v(" Test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" Titanium"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postCallAsConstructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" JSContext"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" js_context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("JSValue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Override "),a("code",[t._v("postCallAsConstructor")]),t._v(" in the implementation. Note that the arguments that is given to the constructor are passed as "),a("code",[t._v("arguments")]),t._v(" parameter.")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.cpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postCallAsConstructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" JSContext"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" js_context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("JSValue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is called when JavaScript object is created as a constructor.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This method is called only once after module is called as a constructor.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For example:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var TEST = require('com.example.test'); // <- postInitialize")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var test = new Test(); // <- postInitialize, callAsConstructor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("p",[t._v("Methods are exposed via "),a("code",[t._v("TITANIUM_ADD_FUNCTION")]),t._v(" and "),a("code",[t._v("TITANIUM_FUNCTION_DEF")]),t._v(" C++ macro.")]),t._v(" "),a("p",[t._v("First, declare method using "),a("code",[t._v("TITANIUM_FUNCTION_DEF")]),t._v(" in header:")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.hpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Titanium/Module.hpp"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("COMEXAMPLETEST_EXPORT")]),t._v(" Test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" Titanium"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_FUNCTION_DEF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Second, implement "),a("code",[t._v("example")]),t._v(" method with "),a("code",[t._v("TITANIUM_FUNCTION")]),t._v(" and then register in "),a("code",[t._v("JSExportInitialize")]),t._v(" with "),a("code",[t._v("TITANIUM_ADD_FUNCTION")]),t._v(":")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.cpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSExportInitialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetClassVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetParent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Titanium"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Module"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// register example method so we can use it from JavaScript")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_ADD_FUNCTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_FUNCTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example method")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// There are variables expanded from TITANIUM_FUNCTION macro here:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     std::vector<JSValue> arguments ... list of arguments that is passed to this function")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//     JSObject this_object           ... "this" JavaScript object')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Example:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    # Get first argument and convert to std::string")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      auto _0 = static_cast<std::string>(arguments.at(0));")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    # Get first argument and convert to double")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      auto _0 = static_cast<double>(arguments.at(0));")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    # Get first argument and convert to std::uint32_t")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      auto _0 = static_cast<std::uint32_t>(arguments.at(0));")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   Function should return JSValue.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   For more information on how to use JSContext / JSValue / JSObject, check out HAL:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      https://github.com/appcelerator/HAL")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("There are variables expanded from "),a("code",[t._v("TITANIUM_FUNCTION")]),t._v(" macro here: "),a("code",[t._v("arguments")]),t._v(" as "),a("code",[t._v("std::vector<JSValue>")]),t._v(", and "),a("code",[t._v("this_object")]),t._v(" as "),a("code",[t._v("JSObject")]),t._v(".Titanium provides several ways for typecasting incoming values to a specific type and extracting them from the array that can be used with "),a("code",[t._v("TITANIUM_FUNCTION")]),t._v(". For instance you can find "),a("code",[t._v("ENSURE_XXX_AT_INDEX")]),t._v(" for typecasting, that is defined in "),a("code",[t._v("Titanium/detail/TiImpl.hpp.")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("ENSURE_INT_AT_INDEX(OUT, INDEX)")])]),t._v(" "),a("li",[a("p",[t._v("ENSURE_UINT_AT_INDEX(OUT, INDEX)")])]),t._v(" "),a("li",[a("p",[t._v("ENSURE_DOUBLE_AT_INDEX(OUT, INDEX)")])]),t._v(" "),a("li",[a("p",[t._v("ENSURE_BOOL_AT_INDEX(OUT, INDEX)")])]),t._v(" "),a("li",[a("p",[t._v("ENSURE_STRING_AT_INDEX(OUT, INDEX)")])])]),t._v(" "),a("p",[t._v("Note that in this macro example "),a("code",[t._v("OUT")]),t._v(" is a variable name, and "),a("code",[t._v("INDEX")]),t._v(" is a index in the arguments. For example:")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.cpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_FUNCTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get 1st argument and convert it to std::int32_t")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENSURE_INT_AT_INDEX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get 2nd argument and convert it to double")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENSURE_DOUBLE_AT_INDEX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_double"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get 3rd argument and convert it to boolean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENSURE_BOOL_AT_INDEX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_bool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get 4th argument and convert it to std::string")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ENSURE_STRING_AT_INDEX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let's return 4th argument for example")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),a("p",[t._v("Properties are exposed via "),a("code",[t._v("TITANIUM_ADD_PROPERTY")]),t._v(" and "),a("code",[t._v("TITANIUM_PROPERTY_DEF")]),t._v(" C++ macro.")]),t._v(" "),a("p",[t._v("First, declare method using "),a("code",[t._v("TITANIUM_FUNCTION_DEF")]),t._v(" in header:")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.hpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Titanium/Module.hpp"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("COMEXAMPLETEST_EXPORT")]),t._v(" Test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" Titanium"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_PROPERTY_DEF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exampleProp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Second, implement "),a("code",[t._v("exampleProp")]),t._v(" property getter/setter with "),a("code",[t._v("TITANIUM_PROPERTY_GETTER/")]),t._v(" "),a("code",[t._v("TITANIUM_PROPERTY_SETTER")]),t._v(" and then register in "),a("code",[t._v("JSExportInitialize")]),t._v(" with "),a("code",[t._v("TITANIUM_ADD_PROPERTY:")])]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.cpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSExportInitialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetClassVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetParent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JSExport"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Titanium"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Module"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// register exampleProp property so we can use it from JavaScript")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_ADD_PROPERTY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exampleProp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_PROPERTY_GETTER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exampleProp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example property getter")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Getter should return JavaScript value (JSValue).")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For more information on how to use JSContext / JSValue / JSObject, check out HAL:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      https://github.com/appcelerator/HAL")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_PROPERTY_SETTER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exampleProp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example property setter")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// There are a variable expanded from TITANIUM_PROPERTY_SETTER macro here:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     JSValue argument ... JavaScript value that is passed to this setter")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Example:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   # Check if it's a string")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      auto _0 = argument.IsString();")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   # Convert argument to std::string")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      auto _0 = static_cast<std::string>(argument);")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   For more information on how to use JSContext / JSValue / JSObject, check out HAL:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      https://github.com/appcelerator/HAL")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Setter should return true if the property was set, otherwise false.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Inside setter, there's a variable that you can use: "),a("code",[t._v("argument")]),t._v(" as "),a("code",[t._v("JSValue")]),t._v(". For typicasting property values, you can just use C++11 s"),a("code",[t._v("tatic_cast<TYPE>")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.cpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TITANIUM_PROPERTY_SETTER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exampleProp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example property setter")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// There are a variable expanded from TITANIUM_PROPERTY_SETTER macro here:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     JSValue argument ... JavaScript value that is passed to this setter")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" my_int "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int32_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" my_double "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" my_string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" my_bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"handling-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handling-events"}},[t._v("#")]),t._v(" Handling Events")]),t._v(" "),a("p",[t._v("Modules automatically handle firing events and managing event listeners. Internally, when you call "),a("code",[t._v("addEventListener()")]),t._v(" or "),a("code",[t._v("removeEventListener()")]),t._v(" from JavaScript against a module instance, the module will automatically handle the code for managing the event listeners. If you want to be notified upon an add or remove, you should override the methods:")]),t._v(" "),a("p",[a("strong",[t._v("ComExampleTest.hpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" event_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" TITANIUM_NOEXCEPT override"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("disableEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" event_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" TITANIUM_NOEXCEPT override"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The"),a("code",[t._v("enableEvent")]),t._v(" method will be invoked when event is enabled with given name. This is convenient, for example, when you would like to enable some action only once at least one listener is listening for the event. This can be useful for conserving system resources.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("disableEvent")]),t._v(" method will be invoked when event is enabled with given name. This is useful when you want to cleanup system resources once no listeners are actively listening for events.")]),t._v(" "),a("p",[t._v("To send an event to any event listener, you use the convenience method:")]),t._v(" "),a("p",[a("strong",[t._v("Titanium/Module.hpp")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fireEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" TITANIUM_NOEXCEPT final"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fireEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" JSObject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" TITANIUM_NOEXCEPT final"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The first one is the default and most common way to fire an event. The first argument (name) is the event name. The second argument (event) is an "),a("code",[t._v("JSObject")]),t._v(" of event properties. The second argument can also be omitted if no additional event properties are needed. The event properties will be part of the event argument which is the first argument in all event functions.")]),t._v(" "),a("p",[t._v("For example:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TITANIUM_FUNCTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" example")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" auto ctx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   auto obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fireEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("In this example, we'd adding one additional event property named 'name' with the value of 'my name'. In JavaScript, this would be retrieved like:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("test.addEventListener('foo',function(e){\n  alert(\"name is \"+e.name);\n});\n")])])]),a("p",[t._v("In addition to any additional event arguments passed, Titanium automatically provides the following built-in properties on all events fired:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("source — The source object (proxy) that fired the event")])]),t._v(" "),a("li",[a("p",[t._v("type — The type of event")])])]),t._v(" "),a("h3",{attrs:{id:"more-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#more-examples"}},[t._v("#")]),t._v(" More Examples")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("For information about HAL API, see "),a("a",{attrs:{href:"https://github.com/appcelerator/HAL",target:"_blank",rel:"noopener noreferrer"}},[t._v("github/appcelerator/HAL"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("For information about TitaniumKit, see "),a("a",{attrs:{href:"https://github.com/appcelerator/titanium_mobile_windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("github/appcelerator/titanium_mobile_windows"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("For more examples of using the module API, see working Titanium modules under "),a("a",{attrs:{href:"https://github.com/appcelerator/titanium_mobile_windows/tree/master/Source",target:"_blank",rel:"noopener noreferrer"}},[t._v("github/appcelerator/titanium_mobile_windows/Source"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=n.exports}}]);