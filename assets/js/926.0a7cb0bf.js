(window.webpackJsonp=window.webpackJsonp||[]).push([[926],{2610:function(e,t,o){"use strict";o.r(t);var l=o(21),i=Object(l.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"alloy-test-models"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#alloy-test-models"}},[e._v("#")]),e._v(" Alloy Test Models")]),e._v(" "),o("p",[e._v("Samples in the alloy/test/apps/models/ folder demonstrates using models, collections, and data binding in Alloy.")]),e._v(" "),o("ul",[o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/ButtonBar_Binding/"}},[e._v("ButtonBar Binding")]),e._v(" — Demonstrates how you can use data binding to populate the list of buttons in a ButtonBar or TabbedBar, or Toolbar component.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/CoverFlow_Binding/"}},[e._v("CoverFlow Binding")]),e._v(" — Demonstrates data binding with a CoverFlowView control, which presents images in carousel-like view.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/DashboardView_Binding/"}},[e._v("DashboardView Binding")]),e._v(" — Demonstrates how to use data binding with a DashboardView, which provides an iOS Springboard-like view.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/Data_Binding_Functions/"}},[e._v("Data Binding Functions")]),e._v(" — Demonstrates how to manually trigger a UI update between the data model and a view.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/Destroying_Data_Bindings/"}},[e._v("Destroying Data Bindings")]),e._v(" — Demonstrates best practices for data binding memory management.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/Journal/"}},[e._v("Journal")]),e._v(" — Demonstrates how to create a simple personal journal application using models and collections.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/ListView_Binding/"}},[e._v("ListView Binding")]),e._v(" — Demonstrates using binding a data collection to a ListView and applying different list item templates to each list item using a data transformer.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/Modeling_a_User_Account_and_Authentication/"}},[e._v("Modeling a User Account and Authentication")]),e._v(" — Demonstrates creating a user login and authentication flow using a data model.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/Non-Persistent_Model_Bindings/"}},[e._v("Non-Persistent Model Bindings")]),e._v(" — Demonstrates using a static, non-persistent data collection.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/Properties_Sync_Adaptor/"}},[e._v("Properties Sync Adaptor")]),e._v(" — Demonstrates using Alloy's Titanium.App.Properties sync adaptor to save data.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/ScrollableView_Binding/"}},[e._v("ScrollableView Binding")]),e._v(" — Demonstrates binding a data collection to a ScrollableView component.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/SQL_ID_Attribute/"}},[e._v("SQL ID Attribute")]),e._v(" — This example demonstrates how you can use a custom model identifier with the idAttribute http://docs.appcelerator.com/backbone/0.9.2/#Model-idAttribute field in the model definition file.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/SQL_Keywords/"}},[e._v("SQL Keywords")]),e._v(" — Demonstrates using SQLite keywords to assign data types to SQL columns in a model configuration file.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/SQL_Preload/"}},[e._v("SQL Preload")]),e._v(" — Demonstrates how to preload a SQLite database for your Alloy appliccation using an external SQLite database file.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/SQL_Queries/"}},[e._v("SQL Queries")]),e._v(" — Demonstrates how to use a SQL query with a database fetch operation.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/TableView_Binding/"}},[e._v("TableView Binding")]),e._v(" — Demonstrates binding a data collection to a TableView using global and local collection references.")],1)]),e._v(" "),o("li",[o("p",[o("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Test_Apps/Alloy_Test_Models/Todo_List/"}},[e._v("Todo List")]),e._v(' — Demonstrates how to create a basic "Todos" application by binding a data collection to a TableView.')],1)])])])}),[],!1,null,null,null);t.default=i.exports}}]);