(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{2195:function(t,e,n){"use strict";n.r(e);var s=n(21),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"pydev-context-insensitive-completions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pydev-context-insensitive-completions"}},[t._v("#")]),t._v(" PyDev Context-insensitive completions")]),t._v(" "),s("p",[t._v("The 'context-insensitive' code completion brings up completions with tokens found it the python path and automatically imports the module that contains that token when selected.")]),t._v(" "),s("p",[t._v("It is shown only when the completion is requested for the globals, and three characters are already typed.")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("⚠️ Warning")]),t._v(" "),s("p",[t._v("You need to request the completions to show with "),s("strong",[t._v("Ctrl+Space.")])])]),t._v(" "),s("p",[s("img",{attrs:{src:n(721),alt:"complnoctx"}})]),t._v(" "),s("p",[s("strong",[t._v("Image:")]),t._v(" All the tokens that start with 'xml' in the python path")]),t._v(" "),s("p",[s("img",{attrs:{src:n(722),alt:"complnoctx2"}})]),t._v(" "),s("p",[s("strong",[t._v("Image:")]),t._v(" Result of selecting the 'XMLFilterBase' token")])])}),[],!1,null,null,null);e.default=o.exports},721:function(t,e,n){t.exports=n.p+"assets/img/complnoctx.b35bbeb1.png"},722:function(t,e,n){t.exports=n.p+"assets/img/complnoctx2.550994e7.png"}}]);