(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{311:function(e,t,n){"use strict";n.r(t);var a=n(4),i=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"modules-map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#modules-map","aria-hidden":"true"}},[e._v("#")]),e._v(" Modules.Map")]),e._v(" "),n("TypeHeader"),e._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("h3",{attrs:{id:"requirements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),n("ul",[n("li",[e._v("Google Maps API key (required for both development and production)")]),e._v(" "),n("li",[e._v("Google Play services SDK installed using the Android SDK manager")]),e._v(" "),n("li",[e._v("This module only works on Android devices.  This module is not supported on the Android emulator")])]),e._v(" "),n("h3",{attrs:{id:"getting-started"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getting-started","aria-hidden":"true"}},[e._v("#")]),e._v(" Getting Started")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Edit the "),n("code",[e._v("modules")]),e._v(" section of your tiapp.xml file to include this module:")]),e._v(" "),n("pre",[n("code",[e._v('<ti:app>\n    <modules>\n        \x3c!-- Add this line to your modules section --\x3e\n        <module platform="android">ti.map</module>\n    </modules>\n</ti:app>\n')])])]),e._v(" "),n("li",[n("p",[e._v('Obtain a Google Maps API key.  For instructions, refer to the "Obtain and Add a Google API Key"\nsection in the\n'),n("a",{attrs:{href:"http://docs.appcelerator.com/titanium/latest/#!/guide/Google_Maps_v2_for_Android",target:"_blank",rel:"noopener noreferrer"}},[e._v("Google Maps v2 for Android guide"),n("OutboundLink")],1),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Add the following "),n("code",[e._v("meta-tag")]),e._v(" element to the Android manifest section of the tiapp.xml\nfile. You may need to add the "),n("code",[e._v("manifest")]),e._v(" and "),n("code",[e._v("application")]),e._v(" elements.")]),e._v(" "),n("pre",[n("code",[e._v('<ti:app>\n    <android xmlns:android="http://schemas.android.com/apk/res/android">\n        <manifest>\n            <application>\n                \x3c!-- Replace "YOUR_API_KEY" with the Google API key you obtained --\x3e\n                <meta-data \n                    android:name="com.google.android.geo.API_KEY"\n                    android:value="YOUR_API_KEY" />\n            </application>\n        </manifest>\n    </android>\n</ti:app>\n')])])]),e._v(" "),n("li",[n("p",[e._v("Instantiate the module with the "),n("code",[e._v("require('ti.map')")]),e._v(" method, then make subsequent API calls with\nthe new map object.")]),e._v(" "),n("pre",[n("code",[e._v("var Map = require('ti.map');\nvar mapview = Map.createView({ \n  mapType: Map.NORMAL_TYPE \n});\n")])])])]),e._v(" "),n("h2",{attrs:{id:"ios"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ios","aria-hidden":"true"}},[e._v("#")]),e._v(" iOS")]),e._v(" "),n("p",[e._v("This module is a replacement for the built-in Titanium.Map module on iOS.")]),e._v(" "),n("p",[e._v("For more instructions and examples of using the module, refer to the\n"),n("a",{attrs:{href:"http://docs.appcelerator.com/titanium/latest/#!/guide/iOS_Map_Kit",target:"_blank",rel:"noopener noreferrer"}},[e._v("iOS Map Kit guide"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("h3",{attrs:{id:"requirements-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#requirements-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),n("ul",[n("li",[e._v("Applications using this module must be built using Xcode 5 or later.")])]),e._v(" "),n("h3",{attrs:{id:"getting-started-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getting-started-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Getting Started")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Edit the "),n("code",[e._v("modules")]),e._v(" section of your tiapp.xml file to include this module:")]),e._v(" "),n("pre",[n("code",[e._v('<ti:app>\n    <modules>\n        \x3c!-- Add this line to your modules section --\x3e\n        <module platform="iphone">ti.map</module>\n    </modules>\n</ti:app>\n')])])]),e._v(" "),n("li",[n("p",[e._v("To use the "),n("code",[e._v("userLocation")]),e._v(" property in iOS 8 and later, add either the\n"),n("a",{attrs:{href:"https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW26",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("NSLocationWhenInUseUsageDescription")]),n("OutboundLink")],1),e._v("\nor\n"),n("a",{attrs:{href:"https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW18",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("NSLocationAlwaysUsageDescription")]),n("OutboundLink")],1),e._v("\nkey to the iOS plist section of the project's "),n("code",[e._v("tiapp.xml")]),e._v(" file.")]),e._v(" "),n("pre",[n("code",[e._v("<ti:app>\n    <ios>\n        <plist>\n            <dict>\n                <key>NSLocationAlwaysUsageDescription</key>\n                <string>\n                    Specify the reason for accessing the user's location information.\n                    This appears in the alert dialog when asking the user for permission to\n                    access their location.\n                </string>\n            </dict>\n        </plist>\n    </ios>\n</ti:app>\n")])])]),e._v(" "),n("li",[n("p",[e._v("Instantiate the module with the "),n("code",[e._v("require('ti.map')")]),e._v(" method, then make subsequent API calls with\nthe new map object.")]),e._v(" "),n("pre",[n("code",[e._v("var Map = require('ti.map');\nvar mapview = Map.createView({\n  mapType: Map.NORMAL_TYPE\n});\n")])])])]),e._v(" "),n("h3",{attrs:{id:"breaking-changes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes","aria-hidden":"true"}},[e._v("#")]),e._v(" Breaking Changes")]),e._v(" "),n("ul",[n("li",[e._v("The "),n("code",[e._v("addRoute")]),e._v(" method no longer accepts a dictionary as a parameter. Pass a "),n("type-link",{attrs:{type:"Modules.Map.Route"}},[e._v("Modules.Map.Route")]),e._v(" object instead.")],1)]),e._v(" "),n("h2",{attrs:{id:"examples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),n("h3",{attrs:{id:"basic-map-example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#basic-map-example","aria-hidden":"true"}},[e._v("#")]),e._v(" Basic Map Example")]),e._v(" "),n("p",[e._v("This is a basic map example that places a custom annotation on the map, and\nlistens for click events on the annotation.")]),e._v(" "),n("p",[e._v("In this example, a custom property ("),n("code",[e._v("myid")]),e._v(") is added to the annotation object.\nWhile adding custom members to a Titanium object is not generally recommended,\nin this case it provides a mechanism for uniquely identifying an annotation. This\ncan be useful, for example, if the annotations are dynamically generated\nand it is not practical to identify them by title.")]),e._v(" "),n("pre",[n("code",[e._v("var Map = require('ti.map');\nvar win = Titanium.UI.createWindow();\n\nvar mountainView = Map.createAnnotation({\n    latitude: 37.390749,\n    longitude: -122.081651,\n    title: 'Appcelerator Headquarters',\n    subtitle: 'Mountain View, CA',\n    pincolor: Map.ANNOTATION_RED,\n    myid: 1 // Custom property to uniquely identify this annotation.\n});\n\nvar mapview = Map.createView({\n    mapType: Map.NORMAL_TYPE,\n    region: { \n        latitude: 33.74511,\n        longitude: -84.38993,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01\n    },\n    animate: true,\n    regionFit: true,\n    userLocation: true,\n    annotations: [ mountainView ]\n});\n\nvar circle = Map.createCircle({\n    center: {\n        latitude: 33.74511,\n        longitude: -84.38993\n    },\n    radius: 1000, // = 1.0 km\n    fillColor: '#20FF0000'\n});\nmapview.addCircle(circle);\n\nwin.add(mapview);\n\nmapview.addEventListener('click', function(event) {\n    Ti.API.info('Clicked ' + event.clicksource + ' on ' + event.latitude + ', ' + event.longitude);\n});\nwin.open();\n")])]),e._v(" "),n("h3",{attrs:{id:"alloy-xml-markup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#alloy-xml-markup","aria-hidden":"true"}},[e._v("#")]),e._v(" Alloy XML Markup")]),e._v(" "),n("p",[e._v("Previous example as an Alloy view.")]),e._v(" "),n("p",[e._v("In XML markup, use the "),n("code",[e._v("View")]),e._v(" element with the "),n("code",[e._v("module")]),e._v(" attribute set to "),n("code",[e._v("ti.map")]),e._v(" to create an\ninstance of a map view, then use the "),n("code",[e._v("Annotation")]),e._v(" element to define an annotation.")]),e._v(" "),n("p",[e._v("In the initializer file, load the map module and assign it to the "),n("code",[e._v("Alloy.Globals.Map")]),e._v(" namespace.\nThis variable can be used to reference map module constants in the project, as seen in the TSS\nfile to assign the "),n("code",[e._v("pincolor")]),e._v(" attribute.")]),e._v(" "),n("p",[n("code",[e._v("alloy.js")]),e._v(":")]),e._v(" "),n("pre",[n("code",[e._v("// Loads the map module to the global Alloy scope, which can be referenced by Alloy.Globals.Map\nAlloy.Globals.Map = require('ti.map');\n")])]),e._v(" "),n("p",[n("code",[e._v("app/views/index.xml")]),e._v(":")]),e._v(" "),n("pre",[n("code",[e._v('<Alloy>\n    <Window>\n        <Module id="mapview" module="ti.map" onClick="report" method="createView">\n            <Annotation id="appcHQ" myId="1337" />\n        </Module>\n    </Window>\n</Alloy>\n')])]),e._v(" "),n("p",[n("code",[e._v("app/styles/index.tss")]),e._v(":")]),e._v(" "),n("pre",[n("code",[e._v('"#mapview": {\n    region: {\n        latitude: 33.74511,\n        longitude: -84.38993,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01\n    }\n},\n"#appcHQ": {\n    latitude: 37.368122,\n    longitude: -121.913653,\n    title: "Appcelerator Headquarters",\n    subtitle: "San Jose, CA",\n    pincolor: Alloy.Globals.Map.ANNOTATION_RED\n}\n')])]),e._v(" "),n("p",[n("code",[e._v("app/controllers/index.js")]),e._v(":")]),e._v(" "),n("pre",[n("code",[e._v("function report(event) {\n    Ti.API.info('Annotation ' + event.title + ' clicked, ID: ' + event.annotation.myID);\n}\n\n$.index.open();\n")])]),e._v(" "),n("h3",{attrs:{id:"map-clustering-ios-11"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map-clustering-ios-11","aria-hidden":"true"}},[e._v("#")]),e._v(" Map Clustering (iOS 11+)")]),e._v(" "),n("p",[e._v("This is a map-example which creates marker annotation and clustering of annotations.")]),e._v(" "),n("p",[e._v("The "),n("code",[e._v("clusterIdentifier")]),e._v(" property and the "),n("code",[e._v("clusterstart")]),e._v(" event are required in order to enable\nclustering. You can control the clustering by defining the "),n("code",[e._v("collisionMode")]),e._v(" property and\nsetting special cluster annotations using the "),n("code",[e._v("setClusterAnnotation")]),e._v(" method on your map\nview instance.")]),e._v(" "),n("pre",[n("code",[e._v("var Map = require('ti.map');\nvar win = Titanium.UI.createWindow();\nvar annotations = [];\n\nfor (var i = 0; i < 10; i++) {\n    annotations.push(Map.createAnnotation({\n        title: 'Appcelerator Inc.',\n        subtitle: 'TiRocks!',\n        clusterIdentifier: 'abc', // Required for clusters\n        collisionMode: Map.ANNOTATION_VIEW_COLLISION_MODE_RECTANGLE,\n        showAsMarker: true,\n        markerGlyphText: i.toString(),\n        markerColor: 'blue',\n        markerGlyphColor: 'green',\n        markerTitleVisibility: Map.FEATURE_VISIBILITY_VISIBLE,\n        markerSubtitleVisibility: Map.FEATURE_VISIBILITY_HIDDEN,\n        markerGlyphImage: 'path/to/flag.png',\n        markerSelectedGlyphImage: 'path/to/flag-selected.png',\n        annotationDisplayPriority: Map.FEATURE_DISPLAY_PRIORITY_DEFAULT_LOW,\n        latitude: (Math.random() * 10) + 40,\n        longitude: Math.random() * 10,\n    }));\n}\n\nvar mapview = Map.createView({\n    annotations: annotations,\n    rotateEnabled: true,\n    mapType: Map.MUTED_STANDARD_TYPE,\n    showsPointsOfInterest: false,\n    userLocation: true\n});\n\nmapview.addEventListener('clusterstart', function(e) {\n    Ti.API.info('clustering started!');\n\n    var clusterAnnotation = Map.createAnnotation({\n        showAsMarker: true,\n        markerText: e.memberAnnotations.length.toString(),\n        title: 'Cluster Title',\n        subtitle: 'Cluster Subtitle',\n    });\n\n    mapview.setClusterAnnotation({\n        annotation: clusterAnnotation,\n        memberAnnotations: e.memberAnnotations\n    });\n});\nwin.add(mapview);\nwin.open();\n")])]),e._v(" "),n("ApiDocs")],1)},[],!1,null,null,null);t.default=i.exports}}]);